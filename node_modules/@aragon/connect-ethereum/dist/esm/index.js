// TODO: Remove these linting exceptions after implementation.
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/no-empty-function */
/* eslint-disable @typescript-eslint/explicit-function-return-type */
class ConnectorEthereum {
    constructor(config) {
        this.name = 'ethereum';
        this.config = config;
        this.network = config.network;
    }
    async connect(connection) {
        this.connection = connection;
    }
    async disconnect() {
        delete this.connection;
    }
    async permissionsForOrg() {
        return new Promise((resolve) => {
            resolve([]);
        });
    }
    onPermissionsForOrg(organization, callback) {
        return {
            unsubscribe: () => { },
        };
    }
    appForOrg(organization, filters) {
        return new Promise((resolve) => {
            resolve();
        });
    }
    appsForOrg(organization, filters) {
        return new Promise((resolve) => {
            resolve([]);
        });
    }
    onAppForOrg(organization, filters, callback) {
        return {
            unsubscribe: () => { },
        };
    }
    onAppsForOrg(organization, filters, callback) {
        return {
            unsubscribe: () => { },
        };
    }
    repoForApp(organization, appAddress) {
        return new Promise((resolve) => {
            resolve();
        });
    }
    appByAddress(organization, appAddress) {
        return new Promise((resolve) => {
            resolve();
        });
    }
    rolesForAddress(organization, appAddress) {
        return new Promise((resolve) => {
            resolve([]);
        });
    }
}
export default ConnectorEthereum;
//# sourceMappingURL=index.js.map