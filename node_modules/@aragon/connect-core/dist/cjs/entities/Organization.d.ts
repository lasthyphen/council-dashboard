import { Address, AppFiltersParam, SubscriptionHandler } from '@aragon/connect-types';
import { ConnectionContext } from '../types';
import TransactionIntent from '../transactions/TransactionIntent';
import App from './App';
import Permission from './Permission';
declare type OnAppCallback = (app: App) => void;
declare type OnAppsCallback = (apps: App[]) => void;
export default class Organization {
    readonly connection: ConnectionContext;
    constructor(connection: ConnectionContext);
    get location(): string;
    get address(): Address;
    get _connection(): ConnectionContext;
    app(filters?: AppFiltersParam): Promise<App>;
    apps(filters?: AppFiltersParam): Promise<App[]>;
    onApp(filtersOrCallback: AppFiltersParam | OnAppCallback, callback?: OnAppCallback): SubscriptionHandler;
    onApps(filtersOrCallback: AppFiltersParam | OnAppsCallback, callback?: OnAppsCallback): SubscriptionHandler;
    permissions(): Promise<Permission[]>;
    onPermissions(callback: Function): SubscriptionHandler;
    appIntent(appAddress: Address, functionName: string, functionArgs: any[]): TransactionIntent;
}
export {};
//# sourceMappingURL=Organization.d.ts.map