import { resolveArtifact } from '../utils/metadata';
import Permission from './Permission';
export default class Role {
    constructor(data, metadata, organization) {
        var _a;
        const { roles } = metadata[0];
        const role = roles === null || roles === void 0 ? void 0 : roles.find((role) => role.bytes === data.hash);
        this.appAddress = data.appAddress;
        this.description = role === null || role === void 0 ? void 0 : role.name;
        this.hash = data.hash;
        this.manager = data.manager;
        this.name = role === null || role === void 0 ? void 0 : role.id;
        this.params = role === null || role === void 0 ? void 0 : role.params;
        this.permissions = (_a = data.grantees) === null || _a === void 0 ? void 0 : _a.map((grantee) => new Permission(grantee, organization));
    }
    static async create(data, organization) {
        const artifact = await resolveArtifact(data);
        const metadata = [artifact];
        return new Role(data, metadata, organization);
    }
}
//# sourceMappingURL=Role.js.map