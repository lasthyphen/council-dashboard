import { Permission } from '@aragon/connect-core';
export function parsePermissions(result, organization) {
    var _a, _b;
    const permissions = (_b = (_a = result === null || result === void 0 ? void 0 : result.data) === null || _a === void 0 ? void 0 : _a.organization) === null || _b === void 0 ? void 0 : _b.permissions;
    if (!Array.isArray(permissions)) {
        throw new Error('Unable to parse permissions.');
    }
    const datas = permissions.map((permission) => {
        var _a, _b;
        return ({
            appAddress: permission === null || permission === void 0 ? void 0 : permission.appAddress,
            allowed: permission === null || permission === void 0 ? void 0 : permission.allowed,
            granteeAddress: permission === null || permission === void 0 ? void 0 : permission.granteeAddress,
            params: ((_b = (_a = permission === null || permission === void 0 ? void 0 : permission.params) === null || _a === void 0 ? void 0 : _a.map) === null || _b === void 0 ? void 0 : _b.call(_a, (param) => ({
                argumentId: param === null || param === void 0 ? void 0 : param.argumentId,
                operationType: param === null || param === void 0 ? void 0 : param.operationType,
                argumentValue: param === null || param === void 0 ? void 0 : param.argumentValue,
            }))) || [],
            roleHash: permission === null || permission === void 0 ? void 0 : permission.roleHash,
        });
    });
    const allowedPermissions = datas.filter((data) => data.allowed);
    return allowedPermissions.map((data) => {
        return new Permission(data, organization);
    });
}
//# sourceMappingURL=permissions.js.map