import { App, ConnectionContext, IOrganizationConnector, Organization, Permission, Repo, Role } from '@aragon/connect-core';
import { Address, AppFilters, Network, Networkish, SubscriptionHandler } from '@aragon/connect-types';
export declare type ConnectorTheGraphConfig = {
    network: Networkish;
    orgSubgraphUrl?: string;
    pollInterval?: number;
    verbose?: boolean;
};
declare class ConnectorTheGraph implements IOrganizationConnector {
    #private;
    connection?: ConnectionContext;
    readonly config: ConnectorTheGraphConfig;
    readonly name = "thegraph";
    readonly network: Network;
    constructor(config: ConnectorTheGraphConfig);
    connect(connection: ConnectionContext): Promise<void>;
    disconnect(): Promise<void>;
    rolesForAddress(organization: Organization, appAddress: Address): Promise<Role[]>;
    permissionsForOrg(organization: Organization): Promise<Permission[]>;
    onPermissionsForOrg(organization: Organization, callback: Function): SubscriptionHandler;
    appByAddress(organization: Organization, appAddress: Address): Promise<App>;
    appForOrg(organization: Organization, filters: AppFilters): Promise<App>;
    appsForOrg(organization: Organization, filters: AppFilters): Promise<App[]>;
    onAppForOrg(organization: Organization, filters: AppFilters, callback: Function): SubscriptionHandler;
    onAppsForOrg(organization: Organization, filters: AppFilters, callback: Function): SubscriptionHandler;
    repoForApp(organization: Organization, appAddress: Address): Promise<Repo>;
}
export default ConnectorTheGraph;
//# sourceMappingURL=connector.d.ts.map