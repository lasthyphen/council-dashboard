{"ast":null,"code":"import _styled3 from \"styled-components\";\nimport _styled2 from \"styled-components\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/saleemfareed/oneds/court-dashboard/src/components/RequestPanel/RequestStatus.js\";\nimport React from 'react';\nimport { Button, GU, Info } from '@aragon/ui';\nimport RequestSteps from './Steps/RequestSteps';\nimport { useWallet } from '../../providers/Wallet';\nimport { getProviderFromUseWalletId } from '../../ethereum-providers';\nimport { REQUEST_STATUS_FAILED, REQUEST_STATUS_PROCESSING_FAILED } from './request-statuses';\n\nvar _StyledDiv = _styled(\"div\").withConfig({\n  displayName: \"RequestStatus___StyledDiv\",\n  componentId: \"sc-13sivgf-0\"\n})([\"margin-top:\", \"px;\"], p => p._css);\n\nfunction RequestStatus({\n  allSuccess,\n  lastProcessedAt,\n  maxAttemptsReached,\n  onClosePanel,\n  onNextAttempt,\n  requests,\n  requestStatus\n}) {\n  const multipleRequests = requests.length > 1;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(RequestSteps, {\n    lastProcessedAt: lastProcessedAt,\n    multipleRequests: multipleRequests,\n    requests: requests,\n    requestStatus: requestStatus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(_StyledDiv, {\n    _css: 2 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(RequestStatusInfo, {\n    allSuccess: allSuccess,\n    multipleRequests: multipleRequests,\n    maxAttemptsReached: maxAttemptsReached,\n    onClosePanel: onClosePanel,\n    onNextAttempt: onNextAttempt,\n    requests: requests,\n    requestStatus: requestStatus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })));\n}\n\nvar _StyledButton = _styled(Button).withConfig({\n  displayName: \"RequestStatus___StyledButton\",\n  componentId: \"sc-13sivgf-1\"\n})([\"margin-top:\", \"px;\"], p => p._css2);\n\nfunction RequestStatusInfo({\n  allSuccess,\n  multipleRequests,\n  maxAttemptsReached,\n  onClosePanel,\n  onNextAttempt,\n  requests,\n  requestStatus\n}) {\n  const {\n    activated\n  } = useWallet();\n  const provider = getProviderFromUseWalletId(activated);\n\n  if (allSuccess) {\n    return React.createElement(Info, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Step\", multipleRequests ? 's' : '', \" processed successfully!\");\n  }\n\n  const requiresMultipleSignatures = multipleRequests && requests.filter(request => request.isTx).length > 1;\n  const requestFailedStatus = requestStatus.find(status => [REQUEST_STATUS_PROCESSING_FAILED, REQUEST_STATUS_FAILED].includes(status));\n\n  if (requestFailedStatus) {\n    if (multipleRequests) {\n      return React.createElement(RequestReattempt, {\n        maxAttemptsReached: maxAttemptsReached,\n        onClosePanel: onClosePanel,\n        onNextAttempt: onNextAttempt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(React.Fragment, null, React.createElement(Info, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, requestFailedStatus === REQUEST_STATUS_PROCESSING_FAILED ? \"This step wasn't processed correctly\" : 'This step failed'), React.createElement(_StyledButton, {\n      label: \"Close\",\n      mode: \"strong\",\n      onClick: onClosePanel,\n      wide: true,\n      _css2: 2 * GU,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }));\n  }\n\n  if (multipleRequests) {\n    return React.createElement(Info, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, requiresMultipleSignatures ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"These actions require multiple transactions. Please sign them one after another and \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"do not close this window\"), \" until all of them are finished. Open \", provider.name, \" to sign the transactions.\") : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"This action involves multiple steps. Please,\", ' ', React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"do not close this window\"), \" until all of them are finished.\"));\n  } // If we get here means we have only one request\n\n\n  return React.createElement(Info, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, requests[0].isTx ? `Open ${provider.name} to sign the transaction` : requests[0].description);\n}\n\nvar _StyledButton2 = _styled(Button).withConfig({\n  displayName: \"RequestStatus___StyledButton2\",\n  componentId: \"sc-13sivgf-2\"\n})([\"margin-top:\", \"px;\"], p => p._css3);\n\nconst RequestReattempt = ({\n  maxAttemptsReached,\n  onClosePanel,\n  onNextAttempt\n}) => {\n  return React.createElement(React.Fragment, null, React.createElement(Info, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, maxAttemptsReached ? `It seems there's something wrong with this step` : `An error occurred at this step. Don't worry, you can\n             try to process this step again.`), React.createElement(_StyledButton2, {\n    label: maxAttemptsReached ? 'Close' : \"OK, let's try again\",\n    onClick: maxAttemptsReached ? onClosePanel : onNextAttempt,\n    mode: \"strong\",\n    wide: true,\n    _css3: 2 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }));\n};\n\nexport default RequestStatus;","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/RequestPanel/RequestStatus.js"],"names":["React","Button","GU","Info","RequestSteps","useWallet","getProviderFromUseWalletId","REQUEST_STATUS_FAILED","REQUEST_STATUS_PROCESSING_FAILED","RequestStatus","allSuccess","lastProcessedAt","maxAttemptsReached","onClosePanel","onNextAttempt","requests","requestStatus","multipleRequests","length","RequestStatusInfo","activated","provider","requiresMultipleSignatures","filter","request","isTx","requestFailedStatus","find","status","includes","name","description","RequestReattempt"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Button, GU, Info } from '@aragon/ui'\nimport RequestSteps from './Steps/RequestSteps'\nimport { useWallet } from '../../providers/Wallet'\nimport { getProviderFromUseWalletId } from '../../ethereum-providers'\nimport {\n  REQUEST_STATUS_FAILED,\n  REQUEST_STATUS_PROCESSING_FAILED,\n} from './request-statuses'\n\nfunction RequestStatus({\n  allSuccess,\n  lastProcessedAt,\n  maxAttemptsReached,\n  onClosePanel,\n  onNextAttempt,\n  requests,\n  requestStatus,\n}) {\n  const multipleRequests = requests.length > 1\n\n  return (\n    <div>\n      <RequestSteps\n        lastProcessedAt={lastProcessedAt}\n        multipleRequests={multipleRequests}\n        requests={requests}\n        requestStatus={requestStatus}\n      />\n      <div\n        css={`\n          margin-top: ${2 * GU}px;\n        `}\n      >\n        <RequestStatusInfo\n          allSuccess={allSuccess}\n          multipleRequests={multipleRequests}\n          maxAttemptsReached={maxAttemptsReached}\n          onClosePanel={onClosePanel}\n          onNextAttempt={onNextAttempt}\n          requests={requests}\n          requestStatus={requestStatus}\n        />\n      </div>\n    </div>\n  )\n}\n\nfunction RequestStatusInfo({\n  allSuccess,\n  multipleRequests,\n  maxAttemptsReached,\n  onClosePanel,\n  onNextAttempt,\n  requests,\n  requestStatus,\n}) {\n  const { activated } = useWallet()\n  const provider = getProviderFromUseWalletId(activated)\n\n  if (allSuccess) {\n    return (\n      <Info>Step{multipleRequests ? 's' : ''} processed successfully!</Info>\n    )\n  }\n\n  const requiresMultipleSignatures =\n    multipleRequests && requests.filter(request => request.isTx).length > 1\n  const requestFailedStatus = requestStatus.find(status =>\n    [REQUEST_STATUS_PROCESSING_FAILED, REQUEST_STATUS_FAILED].includes(status)\n  )\n\n  if (requestFailedStatus) {\n    if (multipleRequests) {\n      return (\n        <RequestReattempt\n          maxAttemptsReached={maxAttemptsReached}\n          onClosePanel={onClosePanel}\n          onNextAttempt={onNextAttempt}\n        />\n      )\n    }\n\n    return (\n      <>\n        <Info>\n          {requestFailedStatus === REQUEST_STATUS_PROCESSING_FAILED\n            ? \"This step wasn't processed correctly\"\n            : 'This step failed'}\n        </Info>\n        <Button\n          css={`\n            margin-top: ${2 * GU}px;\n          `}\n          label=\"Close\"\n          mode=\"strong\"\n          onClick={onClosePanel}\n          wide\n        />\n      </>\n    )\n  }\n\n  if (multipleRequests) {\n    return (\n      <Info>\n        {requiresMultipleSignatures ? (\n          <span>\n            These actions require multiple transactions. Please sign them one\n            after another and <strong>do not close this window</strong> until\n            all of them are finished. Open {provider.name} to sign the\n            transactions.\n          </span>\n        ) : (\n          <span>\n            This action involves multiple steps. Please,{' '}\n            <strong>do not close this window</strong> until all of them are\n            finished.\n          </span>\n        )}\n      </Info>\n    )\n  }\n\n  // If we get here means we have only one request\n  return (\n    <Info>\n      {requests[0].isTx\n        ? `Open ${provider.name} to sign the transaction`\n        : requests[0].description}\n    </Info>\n  )\n}\n\nconst RequestReattempt = ({\n  maxAttemptsReached,\n  onClosePanel,\n  onNextAttempt,\n}) => {\n  return (\n    <>\n      <Info>\n        {maxAttemptsReached\n          ? `It seems there's something wrong with this step`\n          : `An error occurred at this step. Don't worry, you can\n             try to process this step again.`}\n      </Info>\n      <Button\n        css={`\n          margin-top: ${2 * GU}px;\n        `}\n        label={maxAttemptsReached ? 'Close' : \"OK, let's try again\"}\n        onClick={maxAttemptsReached ? onClosePanel : onNextAttempt}\n        mode=\"strong\"\n        wide\n      />\n    </>\n  )\n}\n\nexport default RequestStatus\n"]},"metadata":{},"sourceType":"module"}