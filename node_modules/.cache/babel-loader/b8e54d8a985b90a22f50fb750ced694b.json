{"ast":null,"code":"import { App } from '@aragon/connect-core';\n\nasync function _parseApp(app, organization) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n\n  const data = {\n    address: app.address,\n    appId: app.appId,\n    artifact: (_a = app.version) === null || _a === void 0 ? void 0 : _a.artifact,\n    codeAddress: app.implementation.address,\n    contentUri: (_b = app.version) === null || _b === void 0 ? void 0 : _b.contentUri,\n    isForwarder: app.isForwarder,\n    isUpgradeable: app.isUpgradeable,\n    kernelAddress: (_c = app.organization) === null || _c === void 0 ? void 0 : _c.address,\n    manifest: (_d = app.version) === null || _d === void 0 ? void 0 : _d.manifest,\n    name: app.repoName,\n    registry: (_f = (_e = app.repo) === null || _e === void 0 ? void 0 : _e.registry) === null || _f === void 0 ? void 0 : _f.name,\n    registryAddress: (_h = (_g = app.repo) === null || _g === void 0 ? void 0 : _g.registry) === null || _h === void 0 ? void 0 : _h.address,\n    repoAddress: (_j = app.repo) === null || _j === void 0 ? void 0 : _j.address,\n    version: (_k = app.version) === null || _k === void 0 ? void 0 : _k.semanticVersion.replace(/,/g, '.')\n  };\n  return App.create(data, organization);\n}\n\nexport async function parseApp(result, organization) {\n  var _a;\n\n  const app = (_a = result === null || result === void 0 ? void 0 : result.data) === null || _a === void 0 ? void 0 : _a.app;\n\n  if (!app) {\n    throw new Error('Unable to parse app.');\n  }\n\n  return _parseApp(app, organization);\n}\nexport async function parseApps(result, organization) {\n  var _a, _b;\n\n  const apps = (_b = (_a = result === null || result === void 0 ? void 0 : result.data) === null || _a === void 0 ? void 0 : _a.organization) === null || _b === void 0 ? void 0 : _b.apps;\n\n  if (!apps) {\n    throw new Error('Unable to parse apps.');\n  }\n\n  return Promise.all(apps.map(async app => {\n    return _parseApp(app, organization);\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}