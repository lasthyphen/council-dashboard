{"ast":null,"code":"import _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/saleemfareed/oneds/court-dashboard/src/components/Disputes/DisputeText.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // Render a text associated to a dispute.\n\nvar _StyledDiv = _styled(\"div\").withConfig({\n  displayName: \"DisputeText___StyledDiv\",\n  componentId: \"sc-1k9wbn1-0\"\n})([\"hyphens:auto;overflow-wrap:anywhere;word-break:break-word;\"]);\n\nconst DisputeText = ({\n  text,\n  ...props\n}) => {\n  // If there is no text, the component doesn’t render anything.\n  if (!text.trim()) {\n    return null;\n  }\n\n  return React.createElement(_StyledDiv, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, text));\n};\n\nDisputeText.propTypes = {\n  text: PropTypes.string\n};\nDisputeText.defaultProps = {\n  text: ''\n};\nexport default DisputeText;","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/Disputes/DisputeText.js"],"names":["React","PropTypes","DisputeText","text","props","trim","propTypes","string","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;;;;;;AACA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQ,KAAGC;AAAX,CAAD,KAAwB;AAC1C;AACA,MAAI,CAACD,IAAI,CAACE,IAAL,EAAL,EAAkB;AAChB,WAAO,IAAP;AACD;;AAED,SACE,kDACMD,KADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOD,IAAP,CAXF,CADF;AAeD,CArBD;;AAuBAD,WAAW,CAACI,SAAZ,GAAwB;AACtBH,EAAAA,IAAI,EAAEF,SAAS,CAACM;AADM,CAAxB;AAIAL,WAAW,CAACM,YAAZ,GAA2B;AACzBL,EAAAA,IAAI,EAAE;AADmB,CAA3B;AAIA,eAAeD,WAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\n// Render a text associated to a dispute.\nconst DisputeText = ({ text, ...props }) => {\n  // If there is no text, the component doesn’t render anything.\n  if (!text.trim()) {\n    return null\n  }\n\n  return (\n    <div\n      {...props}\n      css={`\n        // overflow-wrap:anywhere and hyphens:auto are not supported yet by\n        // the latest versions of Webkit / Blink (as of October 2019), which\n        // is why word-break:break-word has been added here.\n        hyphens: auto;\n        overflow-wrap: anywhere;\n        word-break: break-word;\n      `}\n    >\n      <span>{text}</span>\n    </div>\n  )\n}\n\nDisputeText.propTypes = {\n  text: PropTypes.string,\n}\n\nDisputeText.defaultProps = {\n  text: '',\n}\n\nexport default DisputeText\n"]},"metadata":{},"sourceType":"module"}