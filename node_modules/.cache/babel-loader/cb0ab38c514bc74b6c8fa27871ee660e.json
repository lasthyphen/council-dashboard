{"ast":null,"code":"import _regeneratorRuntime from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _styled10 from\"styled-components\";import _styled9 from\"styled-components\";import _styled8 from\"styled-components\";import _styled7 from\"styled-components\";import _styled6 from\"styled-components\";import _styled5 from\"styled-components\";import _styled4 from\"styled-components\";import _styled3 from\"styled-components\";import _styled2 from\"styled-components\";import _styled from\"styled-components\";import React,{useEffect,useMemo,useState}from'react';import resolvePathname from'resolve-pathname';import{GU,Help,Link,textStyle,useTheme,useViewport}from'@aragon/ui';import styled from'styled-components';import DisputeDetailDescription from'./DisputeDetailDescription';import DisputeOutcomeText from'./DisputeOutcomeText';import IdentityBadge from'../IdentityBadge';import Loading from'../Loading';import{useWallet}from'../../providers/Wallet';import{describeDisputedAction}from'../../disputables';import{IPFS_ENDPOINT}from'../../endpoints';import{getIpfsCidFromUri,transformIPFSHash}from'../../lib/ipfs-utils';import{addressesEqual,transformAddresses}from'../../lib/web3-utils';import{Phase as DisputePhase}from'../../types/dispute-status-types';var _StyledLink=styled(Link).withConfig({displayName:\"DisputeInfoContent___StyledLink\",componentId:\"sc-1l0ll96-0\"})([\"text-decoration:none;\"]);function DisputeInfoContent(_ref){var dispute=_ref.dispute,isFinalRulingEnsured=_ref.isFinalRulingEnsured;var _useViewport=useViewport(),below=_useViewport.below;var compactMode=below('medium');var _useDisputeFields=useDisputeFields(dispute),agreementText=_useDisputeFields.agreementText,agreementUrl=_useDisputeFields.agreementUrl,creator=_useDisputeFields.creator,defendant=_useDisputeFields.defendant,description=_useDisputeFields.description,disputedAction=_useDisputeFields.disputedAction,disputedActionURL=_useDisputeFields.disputedActionURL,executionPath=_useDisputeFields.executionPath,loading=_useDisputeFields.loading,organization=_useDisputeFields.organization;return React.createElement(React.Fragment,null,isFinalRulingEnsured&&React.createElement(Row,null,React.createElement(FinalJuryOutcome,{dispute:dispute})),React.createElement(Row,{compactMode:compactMode},React.createElement(DisputedAction,{actionText:disputedAction,dispute:dispute,executionPath:executionPath,isFinalRulingEnsured:isFinalRulingEnsured,loading:loading,url:disputedActionURL}),organization&&React.createElement(Field,{label:\"Organization\",value:organization})),React.createElement(Row,{compactMode:compactMode},React.createElement(_StyledField,{label:\"Description\",loading:loading,value:description}),creator&&React.createElement(Field,{label:\"Plaintiff\",value:creator})),React.createElement(Row,{compactMode:compactMode},agreementText?React.createElement(Field,{label:\"Link to agreement\",value:React.createElement(_StyledLink,{external:true,href:agreementUrl},agreementText)}):React.createElement(\"div\",null),defendant&&React.createElement(Field,{label:\"Defendant\",value:defendant})));}var _StyledH=styled(\"h2\").withConfig({displayName:\"DisputeInfoContent___StyledH\",componentId:\"sc-1l0ll96-1\"})([\"\",\";color:\",\";margin-bottom:\",\"px;\"],function(p){return p._css;},function(p){return p._css2;},function(p){return p._css3;});var _StyledLink2=styled(Link).withConfig({displayName:\"DisputeInfoContent___StyledLink2\",componentId:\"sc-1l0ll96-2\"})([\"text-decoration:none;\"]);var _StyledLink3=styled(Link).withConfig({displayName:\"DisputeInfoContent___StyledLink3\",componentId:\"sc-1l0ll96-3\"})([\"text-decoration:none;\"]);var _StyledDiv=styled(\"div\").withConfig({displayName:\"DisputeInfoContent___StyledDiv\",componentId:\"sc-1l0ll96-4\"})([\"\",\";\"],function(p){return p._css4;});function Field(_ref2){var label=_ref2.label,loading=_ref2.loading,value=_ref2.value,props=_objectWithoutProperties(_ref2,[\"label\",\"loading\",\"value\"]);var theme=useTheme();var wallet=useWallet();if(!value&&!loading){return React.createElement(\"div\",null);}return React.createElement(\"div\",props,React.createElement(_StyledH,{_css:textStyle('label2'),_css2:theme.surfaceContentSecondary,_css3:1*GU},label),function(){if(loading){return React.createElement(Loading,{size:\"small\",center:false});}if(typeof value==='string'){var ipfsPath=getIpfsCidFromUri(value);if(ipfsPath){var ipfsUrl=resolvePathname(ipfsPath,\"\".concat(IPFS_ENDPOINT,\"/\"));return React.createElement(_StyledLink2,{href:ipfsUrl},\"Read more\");}return value.split('\\n').map(function(line,i){return React.createElement(React.Fragment,{key:i},transformAddresses(line,function(part,isAddress,index){return isAddress?React.createElement(\"span\",{title:part,key:index},React.createElement(IdentityBadge,{connectedAccount:addressesEqual(part,wallet.account),compact:true,entity:part})):React.createElement(React.Fragment,{key:index},transformIPFSHash(part,function(word,isIpfsHash,i){if(isIpfsHash){var _ipfsUrl=resolvePathname(word,\"\".concat(IPFS_ENDPOINT,\"/\"));return React.createElement(_StyledLink3,{href:_ipfsUrl,key:i},word);}return React.createElement(\"span\",{key:i},word);}));}),React.createElement(\"br\",null));});}return React.createElement(_StyledDiv,{_css4:textStyle('body2')},value);}());}var _StyledField2=styled(Field).withConfig({displayName:\"DisputeInfoContent___StyledField2\",componentId:\"sc-1l0ll96-5\"})([\"word-break:break-word;overflow-wrap:anywhere;\"]);var _StyledField=styled(Field).withConfig({displayName:\"DisputeInfoContent___StyledField\",componentId:\"sc-1l0ll96-6\"})([\"word-break:break-word;overflow-wrap:anywhere;\"]);function FinalJuryOutcome(_ref3){var _lastRound$vote,_lastRound$appeal;var dispute=_ref3.dispute;var lastRoundId=dispute.lastRoundId,rounds=dispute.rounds;var lastRound=rounds===null||rounds===void 0?void 0:rounds[lastRoundId];var voteWinningOutcome=lastRound===null||lastRound===void 0?void 0:(_lastRound$vote=lastRound.vote)===null||_lastRound$vote===void 0?void 0:_lastRound$vote.winningOutcome;var appealedRuling=lastRound===null||lastRound===void 0?void 0:(_lastRound$appeal=lastRound.appeal)===null||_lastRound$appeal===void 0?void 0:_lastRound$appeal.appealedRuling;return React.createElement(Field,{label:\"Final Jury Outcome\",value:React.createElement(DisputeOutcomeText,{outcome:appealedRuling||voteWinningOutcome,phase:appealedRuling?DisputePhase.AppealRuling:DisputePhase.RevealVote})});}var _StyledLink4=styled(Link).withConfig({displayName:\"DisputeInfoContent___StyledLink4\",componentId:\"sc-1l0ll96-7\"})([\"text-decoration:none;white-space:break-spaces;text-align:left;\"]);function DisputedAction(_ref4){var actionText=_ref4.actionText,dispute=_ref4.dispute,executionPath=_ref4.executionPath,isFinalRulingEnsured=_ref4.isFinalRulingEnsured,loading=_ref4.loading,url=_ref4.url;var ActionTextComponent=useMemo(function(){// Disputes may not include an embedded executable action\nif(!actionText&&!loading){return React.createElement(DisputedActionNA,null);}var action=Array.isArray(executionPath)?React.createElement(DisputeDetailDescription,{path:executionPath}):actionText;return url?React.createElement(_StyledLink4,{external:true,href:url},action):action;},[actionText,executionPath,loading,url]);return React.createElement(_StyledField2,{label:\"Disputed Action\",loading:loading,value:ActionTextComponent});}function useDisputeFields(dispute){var agreementText=dispute.agreementText,agreementUrl=dispute.agreementUrl,defendant=dispute.defendant,disputable=dispute.disputable,organization=dispute.organization,plaintiff=dispute.plaintiff,subject=dispute.subject;var creator=plaintiff||(subject===null||subject===void 0?void 0:subject.id);var _useDisputedAction=useDisputedAction(dispute),_useDisputedAction2=_slicedToArray(_useDisputedAction,2),_useDisputedAction2$=_useDisputedAction2[0],disputedActionRadspec=_useDisputedAction2$.disputedActionRadspec,disputedActionText=_useDisputedAction2$.disputedActionText,disputedActionURL=_useDisputedAction2$.disputedActionURL,executionPath=_useDisputedAction2$.executionPath,loading=_useDisputedAction2[1];var _useMemo=useMemo(function(){// Disputes created through agreements\nif(disputable){return{disputedAction:disputedActionRadspec,description:disputable.actionContext};}// Old disputes not created through agreements\nreturn{disputedAction:disputedActionText,description:disputedActionRadspec};},[disputable,disputedActionRadspec,disputedActionText]),disputedAction=_useMemo.disputedAction,description=_useMemo.description;return{agreementText:agreementText,agreementUrl:agreementUrl,creator:creator,defendant:defendant,description:description,disputable:disputable,disputedAction:disputedAction,disputedActionURL:disputedActionURL,executionPath:executionPath,loading:loading,organization:organization};}var _StyledDiv2=styled(\"div\").withConfig({displayName:\"DisputeInfoContent___StyledDiv2\",componentId:\"sc-1l0ll96-8\"})([\"display:flex;align-items:center;\"]);var _StyledSpan=styled(\"span\").withConfig({displayName:\"DisputeInfoContent___StyledSpan\",componentId:\"sc-1l0ll96-9\"})([\"margin-right:\",\"px;\"],function(p){return p._css5;});var DisputedActionNA=function DisputedActionNA(){return React.createElement(_StyledDiv2,null,React.createElement(_StyledSpan,{_css5:1*GU},\"N/A\"),React.createElement(Help,{hint:\"\"},\"This dispute does not involve a binding action and is simply between the given context and arguments.\"));};function useDisputedAction(_ref5){var id=_ref5.id,disputable=_ref5.disputable,disputedActionRadspec=_ref5.disputedActionRadspec,disputedActionText=_ref5.disputedActionText,disputedActionURL=_ref5.disputedActionURL,subject=_ref5.subject;var _useState=useState({disputedActionRadspec:disputedActionRadspec,disputedActionText:disputedActionText,disputedActionURL:disputedActionURL}),_useState2=_slicedToArray(_useState,2),disputedAction=_useState2[0],setDisputedAction=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];useEffect(function(){// If the dispute was not created through an agreement, the disputed action\n// descriptions should be already available (initialized above)\nif(!disputable){return;}var cancelled=false;setLoading(true);var describeDispute=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var disputedActionDescription;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return describeDisputedAction(id,disputable.organization,disputable.address,disputable.disputableActionId,subject.id);case 2:disputedActionDescription=_context.sent;if(!cancelled){setLoading(false);setDisputedAction(disputedActionDescription);}case 4:case\"end\":return _context.stop();}}},_callee);}));return function describeDispute(){return _ref6.apply(this,arguments);};}();describeDispute();return function(){cancelled=true;};},[disputable,id,subject]);return[disputedAction,loading];}var Row=styled.div.withConfig({displayName:\"DisputeInfoContent__Row\",componentId:\"sc-1l0ll96-10\"})([\"display:grid;\",\"\"],function(_ref7){var compactMode=_ref7.compactMode;return\"\\n    grid-gap: \".concat((compactMode?2.5:5)*GU,\"px;\\n    margin-bottom: \").concat(compactMode?0:2*GU,\"px;\\n    grid-template-columns: \").concat(compactMode?'auto':\"1fr minmax(\".concat(25*GU,\"px, auto)\"),\";\\n  \");});export default DisputeInfoContent;","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/Disputes/DisputeInfoContent.js"],"names":["React","useEffect","useMemo","useState","resolvePathname","GU","Help","Link","textStyle","useTheme","useViewport","styled","DisputeDetailDescription","DisputeOutcomeText","IdentityBadge","Loading","useWallet","describeDisputedAction","IPFS_ENDPOINT","getIpfsCidFromUri","transformIPFSHash","addressesEqual","transformAddresses","Phase","DisputePhase","DisputeInfoContent","dispute","isFinalRulingEnsured","below","compactMode","useDisputeFields","agreementText","agreementUrl","creator","defendant","description","disputedAction","disputedActionURL","executionPath","loading","organization","Field","label","value","props","theme","wallet","surfaceContentSecondary","ipfsPath","ipfsUrl","split","map","line","i","part","isAddress","index","account","word","isIpfsHash","FinalJuryOutcome","lastRoundId","rounds","lastRound","voteWinningOutcome","vote","winningOutcome","appealedRuling","appeal","AppealRuling","RevealVote","DisputedAction","actionText","url","ActionTextComponent","action","Array","isArray","disputable","plaintiff","subject","id","useDisputedAction","disputedActionRadspec","disputedActionText","actionContext","DisputedActionNA","setDisputedAction","setLoading","cancelled","describeDispute","address","disputableActionId","disputedActionDescription","Row","div"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react'\nimport resolvePathname from 'resolve-pathname'\nimport { GU, Help, Link, textStyle, useTheme, useViewport } from '@aragon/ui'\nimport styled from 'styled-components'\nimport DisputeDetailDescription from './DisputeDetailDescription'\nimport DisputeOutcomeText from './DisputeOutcomeText'\nimport IdentityBadge from '../IdentityBadge'\nimport Loading from '../Loading'\nimport { useWallet } from '../../providers/Wallet'\n\nimport { describeDisputedAction } from '../../disputables'\nimport { IPFS_ENDPOINT } from '../../endpoints'\nimport { getIpfsCidFromUri, transformIPFSHash } from '../../lib/ipfs-utils'\nimport { addressesEqual, transformAddresses } from '../../lib/web3-utils'\nimport { Phase as DisputePhase } from '../../types/dispute-status-types'\n\nfunction DisputeInfoContent({ dispute, isFinalRulingEnsured }) {\n  const { below } = useViewport()\n  const compactMode = below('medium')\n\n  const {\n    agreementText,\n    agreementUrl,\n    creator,\n    defendant,\n    description,\n    disputedAction,\n    disputedActionURL,\n    executionPath,\n    loading,\n    organization,\n  } = useDisputeFields(dispute)\n\n  return (\n    <>\n      {isFinalRulingEnsured && (\n        <Row>\n          <FinalJuryOutcome dispute={dispute} />\n        </Row>\n      )}\n      <Row compactMode={compactMode}>\n        <DisputedAction\n          actionText={disputedAction}\n          dispute={dispute}\n          executionPath={executionPath}\n          isFinalRulingEnsured={isFinalRulingEnsured}\n          loading={loading}\n          url={disputedActionURL}\n        />\n\n        {organization && <Field label=\"Organization\" value={organization} />}\n      </Row>\n      <Row compactMode={compactMode}>\n        <Field\n          label=\"Description\"\n          loading={loading}\n          value={description}\n          css={`\n            word-break: break-word;\n            overflow-wrap: anywhere;\n          `}\n        />\n        {creator && <Field label=\"Plaintiff\" value={creator} />}\n      </Row>\n      <Row compactMode={compactMode}>\n        {agreementText ? (\n          <Field\n            label=\"Link to agreement\"\n            value={\n              <Link\n                external\n                href={agreementUrl}\n                css={`\n                  text-decoration: none;\n                `}\n              >\n                {agreementText}\n              </Link>\n            }\n          />\n        ) : (\n          <div />\n        )}\n        {defendant && <Field label=\"Defendant\" value={defendant} />}\n      </Row>\n    </>\n  )\n}\n\nfunction Field({ label, loading, value, ...props }) {\n  const theme = useTheme()\n  const wallet = useWallet()\n\n  if (!value && !loading) {\n    return <div />\n  }\n\n  return (\n    <div {...props}>\n      <h2\n        css={`\n          ${textStyle('label2')};\n          color: ${theme.surfaceContentSecondary};\n          margin-bottom: ${1 * GU}px;\n        `}\n      >\n        {label}\n      </h2>\n      {(() => {\n        if (loading) {\n          return <Loading size=\"small\" center={false} />\n        }\n\n        if (typeof value === 'string') {\n          const ipfsPath = getIpfsCidFromUri(value)\n          if (ipfsPath) {\n            const ipfsUrl = resolvePathname(ipfsPath, `${IPFS_ENDPOINT}/`)\n            return (\n              <Link\n                href={ipfsUrl}\n                css={`\n                  text-decoration: none;\n                `}\n              >\n                Read more\n              </Link>\n            )\n          }\n\n          return value.split('\\n').map((line, i) => (\n            <React.Fragment key={i}>\n              {transformAddresses(line, (part, isAddress, index) =>\n                isAddress ? (\n                  <span title={part} key={index}>\n                    <IdentityBadge\n                      connectedAccount={addressesEqual(part, wallet.account)}\n                      compact\n                      entity={part}\n                    />\n                  </span>\n                ) : (\n                  <React.Fragment key={index}>\n                    {transformIPFSHash(part, (word, isIpfsHash, i) => {\n                      if (isIpfsHash) {\n                        const ipfsUrl = resolvePathname(\n                          word,\n                          `${IPFS_ENDPOINT}/`\n                        )\n                        return (\n                          <Link\n                            href={ipfsUrl}\n                            key={i}\n                            css={`\n                              text-decoration: none;\n                            `}\n                          >\n                            {word}\n                          </Link>\n                        )\n                      }\n\n                      return <span key={i}>{word}</span>\n                    })}\n                  </React.Fragment>\n                )\n              )}\n              <br />\n            </React.Fragment>\n          ))\n        }\n\n        return (\n          <div\n            css={`\n              ${textStyle('body2')};\n            `}\n          >\n            {value}\n          </div>\n        )\n      })()}\n    </div>\n  )\n}\n\nfunction FinalJuryOutcome({ dispute }) {\n  const { lastRoundId, rounds } = dispute\n  const lastRound = rounds?.[lastRoundId]\n  const voteWinningOutcome = lastRound?.vote?.winningOutcome\n  const appealedRuling = lastRound?.appeal?.appealedRuling\n\n  return (\n    <Field\n      label=\"Final Jury Outcome\"\n      value={\n        <DisputeOutcomeText\n          outcome={appealedRuling || voteWinningOutcome}\n          phase={\n            appealedRuling ? DisputePhase.AppealRuling : DisputePhase.RevealVote\n          }\n        />\n      }\n    />\n  )\n}\n\nfunction DisputedAction({\n  actionText,\n  dispute,\n  executionPath,\n  isFinalRulingEnsured,\n  loading,\n  url,\n}) {\n  const ActionTextComponent = useMemo(() => {\n    // Disputes may not include an embedded executable action\n    if (!actionText && !loading) {\n      return <DisputedActionNA />\n    }\n\n    const action = Array.isArray(executionPath) ? (\n      <DisputeDetailDescription path={executionPath} />\n    ) : (\n      actionText\n    )\n\n    return url ? (\n      <Link\n        external\n        href={url}\n        css={`\n          text-decoration: none;\n          white-space: break-spaces;\n          text-align: left;\n        `}\n      >\n        {action}\n      </Link>\n    ) : (\n      action\n    )\n  }, [actionText, executionPath, loading, url])\n\n  return (\n    <Field\n      label=\"Disputed Action\"\n      loading={loading}\n      value={ActionTextComponent}\n      css={`\n        word-break: break-word;\n        overflow-wrap: anywhere;\n      `}\n    />\n  )\n}\n\nfunction useDisputeFields(dispute) {\n  const {\n    agreementText,\n    agreementUrl,\n    defendant,\n    disputable,\n    organization,\n    plaintiff,\n    subject,\n  } = dispute\n\n  const creator = plaintiff || subject?.id\n\n  const [\n    {\n      disputedActionRadspec,\n      disputedActionText,\n      disputedActionURL,\n      executionPath,\n    },\n    loading,\n  ] = useDisputedAction(dispute)\n\n  const { disputedAction, description } = useMemo(() => {\n    // Disputes created through agreements\n    if (disputable) {\n      return {\n        disputedAction: disputedActionRadspec,\n        description: disputable.actionContext,\n      }\n    }\n\n    // Old disputes not created through agreements\n    return {\n      disputedAction: disputedActionText,\n      description: disputedActionRadspec,\n    }\n  }, [disputable, disputedActionRadspec, disputedActionText])\n\n  return {\n    agreementText,\n    agreementUrl,\n    creator,\n    defendant,\n    description,\n    disputable,\n    disputedAction,\n    disputedActionURL,\n    executionPath,\n    loading,\n    organization,\n  }\n}\n\nconst DisputedActionNA = () => {\n  return (\n    <div\n      css={`\n        display: flex;\n        align-items: center;\n      `}\n    >\n      <span\n        css={`\n          margin-right: ${1 * GU}px;\n        `}\n      >\n        N/A\n      </span>\n      <Help hint=\"\">\n        This dispute does not involve a binding action and is simply between the\n        given context and arguments.\n      </Help>\n    </div>\n  )\n}\n\nfunction useDisputedAction({\n  id,\n  disputable,\n  disputedActionRadspec,\n  disputedActionText,\n  disputedActionURL,\n  subject,\n}) {\n  const [disputedAction, setDisputedAction] = useState({\n    disputedActionRadspec,\n    disputedActionText,\n    disputedActionURL,\n  })\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    // If the dispute was not created through an agreement, the disputed action\n    // descriptions should be already available (initialized above)\n    if (!disputable) {\n      return\n    }\n\n    let cancelled = false\n    setLoading(true)\n\n    const describeDispute = async () => {\n      // Get disputable long and short description\n      // as well as the URL where the disputed action is taking place\n      const disputedActionDescription = await describeDisputedAction(\n        id,\n        disputable.organization,\n        disputable.address,\n        disputable.disputableActionId,\n        subject.id\n      )\n\n      if (!cancelled) {\n        setLoading(false)\n        setDisputedAction(disputedActionDescription)\n      }\n    }\n\n    describeDispute()\n\n    return () => {\n      cancelled = true\n    }\n  }, [disputable, id, subject])\n\n  return [disputedAction, loading]\n}\n\nconst Row = styled.div`\n  display: grid;\n\n  ${({ compactMode }) => `\n    grid-gap: ${(compactMode ? 2.5 : 5) * GU}px;\n    margin-bottom: ${compactMode ? 0 : 2 * GU}px;\n    grid-template-columns: ${\n      compactMode ? 'auto' : `1fr minmax(${25 * GU}px, auto)`\n    };\n  `}\n`\n\nexport default DisputeInfoContent\n"]},"metadata":{},"sourceType":"module"}