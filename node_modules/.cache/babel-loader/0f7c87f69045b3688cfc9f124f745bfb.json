{"ast":null,"code":"import React,{useCallback}from'react';import ANJForm from'./ANJForm';import{formatUnits}from'../../../lib/math-utils';import{useCourtConfig}from'../../../providers/CourtConfig';var ActivateANJ=React.memo(function ActivateANJ(_ref){var onActivateANJ=_ref.onActivateANJ,activeBalance=_ref.activeBalance,walletBalance=_ref.walletBalance,inactiveBalance=_ref.inactiveBalance,fromWallet=_ref.fromWallet,onDone=_ref.onDone;var _useCourtConfig=useCourtConfig(),anjToken=_useCourtConfig.anjToken,minActiveBalance=_useCourtConfig.minActiveBalance;var maxAmount=fromWallet?walletBalance:inactiveBalance;var minActiveBalanceFormatted=formatUnits(minActiveBalance,{digits:anjToken.decimals});var maxAmountFormatted=formatUnits(maxAmount,{digits:anjToken.decimals,precision:anjToken.decimals});var validation=useCallback(function(amountBN){if(amountBN.gt(maxAmount)){return\"Insufficient funds, your \".concat(fromWallet?'wallet balance is':'inactive balance available for activation is',\" \").concat(maxAmountFormatted,\" \").concat(anjToken.symbol,\" \");}if(activeBalance.add(amountBN).lt(minActiveBalance)){return\"You must have at least \".concat(minActiveBalanceFormatted,\" \").concat(anjToken.symbol,\" activated\");}return null;},[activeBalance,anjToken.symbol,fromWallet,maxAmount,maxAmountFormatted,minActiveBalance,minActiveBalanceFormatted]);return React.createElement(ANJForm,{actionLabel:\"Activate\",maxAmount:maxAmount,onSubmit:onActivateANJ,onDone:onDone,runParentValidation:validation});});export default ActivateANJ;","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/Dashboard/panels/ActivateANJ.js"],"names":["React","useCallback","ANJForm","formatUnits","useCourtConfig","ActivateANJ","memo","onActivateANJ","activeBalance","walletBalance","inactiveBalance","fromWallet","onDone","anjToken","minActiveBalance","maxAmount","minActiveBalanceFormatted","digits","decimals","maxAmountFormatted","precision","validation","amountBN","gt","symbol","add","lt"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,KAAmC,OAAnC,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,OAASC,WAAT,KAA4B,yBAA5B,CACA,OAASC,cAAT,KAA+B,gCAA/B,CAEA,GAAMC,CAAAA,WAAW,CAAGL,KAAK,CAACM,IAAN,CAAW,QAASD,CAAAA,WAAT,MAO5B,IANDE,CAAAA,aAMC,MANDA,aAMC,CALDC,aAKC,MALDA,aAKC,CAJDC,aAIC,MAJDA,aAIC,CAHDC,eAGC,MAHDA,eAGC,CAFDC,UAEC,MAFDA,UAEC,CADDC,MACC,MADDA,MACC,qBACsCR,cAAc,EADpD,CACOS,QADP,iBACOA,QADP,CACiBC,gBADjB,iBACiBA,gBADjB,CAED,GAAMC,CAAAA,SAAS,CAAGJ,UAAU,CAAGF,aAAH,CAAmBC,eAA/C,CAEA,GAAMM,CAAAA,yBAAyB,CAAGb,WAAW,CAACW,gBAAD,CAAmB,CAC9DG,MAAM,CAAEJ,QAAQ,CAACK,QAD6C,CAAnB,CAA7C,CAGA,GAAMC,CAAAA,kBAAkB,CAAGhB,WAAW,CAACY,SAAD,CAAY,CAChDE,MAAM,CAAEJ,QAAQ,CAACK,QAD+B,CAEhDE,SAAS,CAAEP,QAAQ,CAACK,QAF4B,CAAZ,CAAtC,CAKA,GAAMG,CAAAA,UAAU,CAAGpB,WAAW,CAC5B,SAAAqB,QAAQ,CAAI,CACV,GAAIA,QAAQ,CAACC,EAAT,CAAYR,SAAZ,CAAJ,CAA4B,CAC1B,yCACEJ,UAAU,CACN,mBADM,CAEN,8CAHN,aAIIQ,kBAJJ,aAI0BN,QAAQ,CAACW,MAJnC,MAKD,CAED,GAAIhB,aAAa,CAACiB,GAAd,CAAkBH,QAAlB,EAA4BI,EAA5B,CAA+BZ,gBAA/B,CAAJ,CAAsD,CACpD,uCAAiCE,yBAAjC,aAA8DH,QAAQ,CAACW,MAAvE,eACD,CAED,MAAO,KAAP,CACD,CAf2B,CAgB5B,CACEhB,aADF,CAEEK,QAAQ,CAACW,MAFX,CAGEb,UAHF,CAIEI,SAJF,CAKEI,kBALF,CAMEL,gBANF,CAOEE,yBAPF,CAhB4B,CAA9B,CA2BA,MACE,qBAAC,OAAD,EACE,WAAW,CAAC,UADd,CAEE,SAAS,CAAED,SAFb,CAGE,QAAQ,CAAER,aAHZ,CAIE,MAAM,CAAEK,MAJV,CAKE,mBAAmB,CAAES,UALvB,EADF,CASD,CAvDmB,CAApB,CAyDA,cAAehB,CAAAA,WAAf","sourcesContent":["import React, { useCallback } from 'react'\nimport ANJForm from './ANJForm'\nimport { formatUnits } from '../../../lib/math-utils'\nimport { useCourtConfig } from '../../../providers/CourtConfig'\n\nconst ActivateANJ = React.memo(function ActivateANJ({\n  onActivateANJ,\n  activeBalance,\n  walletBalance,\n  inactiveBalance,\n  fromWallet,\n  onDone,\n}) {\n  const { anjToken, minActiveBalance } = useCourtConfig()\n  const maxAmount = fromWallet ? walletBalance : inactiveBalance\n\n  const minActiveBalanceFormatted = formatUnits(minActiveBalance, {\n    digits: anjToken.decimals,\n  })\n  const maxAmountFormatted = formatUnits(maxAmount, {\n    digits: anjToken.decimals,\n    precision: anjToken.decimals,\n  })\n\n  const validation = useCallback(\n    amountBN => {\n      if (amountBN.gt(maxAmount)) {\n        return `Insufficient funds, your ${\n          fromWallet\n            ? 'wallet balance is'\n            : 'inactive balance available for activation is'\n        } ${maxAmountFormatted} ${anjToken.symbol} `\n      }\n\n      if (activeBalance.add(amountBN).lt(minActiveBalance)) {\n        return `You must have at least ${minActiveBalanceFormatted} ${anjToken.symbol} activated`\n      }\n\n      return null\n    },\n    [\n      activeBalance,\n      anjToken.symbol,\n      fromWallet,\n      maxAmount,\n      maxAmountFormatted,\n      minActiveBalance,\n      minActiveBalanceFormatted,\n    ]\n  )\n\n  return (\n    <ANJForm\n      actionLabel=\"Activate\"\n      maxAmount={maxAmount}\n      onSubmit={onActivateANJ}\n      onDone={onDone}\n      runParentValidation={validation}\n    />\n  )\n})\n\nexport default ActivateANJ\n"]},"metadata":{},"sourceType":"module"}