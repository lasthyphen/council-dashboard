{"ast":null,"code":"import { useCallback, useState, useMemo } from 'react';\nexport function useSidePanel() {\n  const [visible, setVisible] = useState(false);\n  const [opened, setOpened] = useState(false);\n  const requestOpen = useCallback(() => {\n    setVisible(true);\n    setOpened(false);\n  }, []);\n  const endTransition = setOpened;\n  const requestClose = useCallback(() => {\n    setVisible(false);\n    setOpened(false);\n  }, [setVisible, setOpened]);\n  return useMemo(() => {\n    return {\n      visible,\n      opened,\n      requestOpen,\n      endTransition,\n      requestClose\n    };\n  }, [endTransition, opened, requestClose, requestOpen, visible]);\n}","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/hooks/useSidePanel.js"],"names":["useCallback","useState","useMemo","useSidePanel","visible","setVisible","opened","setOpened","requestOpen","endTransition","requestClose"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,QAAtB,EAAgCC,OAAhC,QAA+C,OAA/C;AAEA,OAAO,SAASC,YAAT,GAAwB;AAC7B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAApC;AAEA,QAAMO,WAAW,GAAGR,WAAW,CAAC,MAAM;AACpCK,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAH8B,EAG5B,EAH4B,CAA/B;AAKA,QAAME,aAAa,GAAGF,SAAtB;AAEA,QAAMG,YAAY,GAAGV,WAAW,CAAC,MAAM;AACrCK,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAH+B,EAG7B,CAACF,UAAD,EAAaE,SAAb,CAH6B,CAAhC;AAKA,SAAOL,OAAO,CAAC,MAAM;AACnB,WAAO;AACLE,MAAAA,OADK;AAELE,MAAAA,MAFK;AAGLE,MAAAA,WAHK;AAILC,MAAAA,aAJK;AAKLC,MAAAA;AALK,KAAP;AAOD,GARa,EAQX,CAACD,aAAD,EAAgBH,MAAhB,EAAwBI,YAAxB,EAAsCF,WAAtC,EAAmDJ,OAAnD,CARW,CAAd;AASD","sourcesContent":["import { useCallback, useState, useMemo } from 'react'\n\nexport function useSidePanel() {\n  const [visible, setVisible] = useState(false)\n  const [opened, setOpened] = useState(false)\n\n  const requestOpen = useCallback(() => {\n    setVisible(true)\n    setOpened(false)\n  }, [])\n\n  const endTransition = setOpened\n\n  const requestClose = useCallback(() => {\n    setVisible(false)\n    setOpened(false)\n  }, [setVisible, setOpened])\n\n  return useMemo(() => {\n    return {\n      visible,\n      opened,\n      requestOpen,\n      endTransition,\n      requestClose,\n    }\n  }, [endTransition, opened, requestClose, requestOpen, visible])\n}\n"]},"metadata":{},"sourceType":"module"}