{"ast":null,"code":"import _styled6 from \"styled-components\";\nimport _styled5 from \"styled-components\";\nimport _styled4 from \"styled-components\";\nimport _styled3 from \"styled-components\";\nimport _styled2 from \"styled-components\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/saleemfareed/oneds/court-dashboard/src/components/GlobalPreferences/GlobalPreferences.js\";\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { ButtonIcon, GU, Header, IconClose, Layout, Tabs, springs, useTheme, useViewport } from '@1hive/1hive-ui';\nimport { Transition, animated } from 'react-spring/renderprops';\nimport { useEsc } from '../../hooks/useKeyboardArrows';\nimport Network from './Network/Network';\nimport NotificationsManager from './Notifications/NotificationsManager';\nconst SECTIONS = new Map([['network', 'Network'], ['notifications', 'Notifications']]);\nconst PATHS = Array.from(SECTIONS.keys());\nconst VALUES = Array.from(SECTIONS.values());\nconst NETWORK_INDEX = 0;\nconst NOTIFICATIONS_INDEX = 1;\nconst AnimatedDiv = animated.div;\n\nvar _StyledAnimatedDiv = _styled(AnimatedDiv).withConfig({\n  displayName: \"GlobalPreferences___StyledAnimatedDiv\",\n  componentId: \"mzgw4s-0\"\n})([\"position:fixed;top:0;bottom:0;left:0;right:0;overflow:auto;min-width:\", \"px;padding-bottom:\", \"px;border-top:2px solid \", \";background:\", \";\"], p => p._css6, p => p._css7, p => p._css8, p => p._css9);\n\nvar _StyledDiv = _styled(\"div\").withConfig({\n  displayName: \"GlobalPreferences___StyledDiv\",\n  componentId: \"mzgw4s-1\"\n})([\"outline:0\"]);\n\nvar _StyledLayout = _styled(Layout).withConfig({\n  displayName: \"GlobalPreferences___StyledLayout\",\n  componentId: \"mzgw4s-2\"\n})([\"z-index:2\"]);\n\nvar _StyledHeader = _styled(Header).withConfig({\n  displayName: \"GlobalPreferences___StyledHeader\",\n  componentId: \"mzgw4s-3\"\n})([\"padding-top:\", \"px;\"], p => p._css);\n\nfunction GlobalPreferences({\n  compact,\n  onClose,\n  onNavigation,\n  sectionIndex\n}) {\n  useEsc(onClose);\n  const container = useRef();\n  useEffect(() => {\n    if (container.current) {\n      container.current.focus();\n    }\n  }, []);\n  return React.createElement(_StyledDiv, {\n    ref: container,\n    tabIndex: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(_StyledLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Close, {\n    compact: compact,\n    onClick: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(_StyledHeader, {\n    primary: \"Global preferences\",\n    _css: !compact ? 10 * GU : 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    items: VALUES,\n    onChange: onNavigation,\n    selected: sectionIndex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), sectionIndex === NETWORK_INDEX && React.createElement(Network, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), sectionIndex === NOTIFICATIONS_INDEX && React.createElement(NotificationsManager, {\n    onReturnToDashboard: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }))));\n}\n\nfunction useGlobalPreferences({\n  path = '',\n  onScreenChange\n}) {\n  const [sectionIndex, setSectionIndex] = useState(null);\n  const handleNavigation = useCallback(index => {\n    onScreenChange(PATHS[index]);\n  }, [onScreenChange]);\n  useEffect(() => {\n    if (!path) {\n      setSectionIndex(null);\n      return;\n    }\n\n    const index = PATHS.findIndex(item => path.startsWith(item));\n    setSectionIndex(index === -1 ? null : index);\n  }, [path, sectionIndex]);\n  return {\n    sectionIndex,\n    handleNavigation\n  };\n}\n\nvar _StyledDiv2 = _styled(\"div\").withConfig({\n  displayName: \"GlobalPreferences___StyledDiv2\",\n  componentId: \"mzgw4s-4\"\n})([\"position:absolute;right:0;padding-top:\", \"px;padding-right:\", \"px;\", \"\"], p => p._css2, p => p._css3, p => p._css4);\n\nvar _StyledIconClose = _styled(IconClose).withConfig({\n  displayName: \"GlobalPreferences___StyledIconClose\",\n  componentId: \"mzgw4s-5\"\n})([\"color:\", \";\"], p => p._css5);\n\nfunction Close({\n  compact,\n  onClick\n}) {\n  const theme = useTheme();\n  return React.createElement(_StyledDiv2, {\n    _css2: 2.5 * GU,\n    _css3: 3 * GU,\n    _css4: compact && `\n            padding-top: ${2 * GU}px;\n            padding-right: ${1.5 * GU}px;\n          `,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(ButtonIcon, {\n    onClick: onClick,\n    label: \"Close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(_StyledIconClose, {\n    _css5: theme.surfaceIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })));\n}\n\nfunction AnimatedGlobalPreferences({\n  path,\n  onScreenChange,\n  onClose\n}) {\n  const {\n    sectionIndex,\n    handleNavigation\n  } = useGlobalPreferences({\n    path,\n    onScreenChange\n  });\n  const {\n    below\n  } = useViewport();\n  const compact = below('medium');\n  const theme = useTheme();\n  return React.createElement(Transition, {\n    native: true,\n    items: sectionIndex !== null,\n    from: {\n      opacity: 0,\n      enterProgress: 0,\n      blocking: false\n    },\n    enter: {\n      opacity: 1,\n      enterProgress: 1,\n      blocking: true\n    },\n    leave: {\n      opacity: 0,\n      enterProgress: 1,\n      blocking: false\n    },\n    config: springs.smooth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, show => show && (\n  /* eslint-disable react/prop-types */\n  // z-index 1 on mobile keeps the menu above this preferences modal\n  ({\n    opacity,\n    enterProgress,\n    blocking\n  }) => React.createElement(_StyledAnimatedDiv, {\n    style: {\n      zIndex: 1,\n      pointerEvents: blocking ? 'auto' : 'none',\n      opacity,\n      transform: enterProgress.interpolate(v => `\n                  translate3d(0, ${(1 - v) * 10}px, 0)\n                  scale3d(${1 - (1 - v) * 0.03}, ${1 - (1 - v) * 0.03}, 1)\n                `)\n    },\n    _css6: 45 * GU,\n    _css7: compact ? 2 : 0 * GU,\n    _css8: theme.accent,\n    _css9: theme.surface,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(GlobalPreferences, {\n    onClose: onClose,\n    compact: compact,\n    sectionIndex: sectionIndex,\n    onNavigation: handleNavigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  })))\n  /* eslint-enable react/prop-types */\n  );\n}\n\nexport default React.memo(AnimatedGlobalPreferences);","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/GlobalPreferences/GlobalPreferences.js"],"names":["React","useCallback","useEffect","useRef","useState","ButtonIcon","GU","Header","IconClose","Layout","Tabs","springs","useTheme","useViewport","Transition","animated","useEsc","Network","NotificationsManager","SECTIONS","Map","PATHS","Array","from","keys","VALUES","values","NETWORK_INDEX","NOTIFICATIONS_INDEX","AnimatedDiv","div","GlobalPreferences","compact","onClose","onNavigation","sectionIndex","container","current","focus","useGlobalPreferences","path","onScreenChange","setSectionIndex","handleNavigation","index","findIndex","item","startsWith","Close","onClick","theme","surfaceIcon","AnimatedGlobalPreferences","below","opacity","enterProgress","blocking","smooth","show","zIndex","pointerEvents","transform","interpolate","v","accent","surface","memo"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react'\nimport {\n  ButtonIcon,\n  GU,\n  Header,\n  IconClose,\n  Layout,\n  Tabs,\n  springs,\n  useTheme,\n  useViewport,\n} from '@1hive/1hive-ui'\nimport { Transition, animated } from 'react-spring/renderprops'\nimport { useEsc } from '../../hooks/useKeyboardArrows'\nimport Network from './Network/Network'\nimport NotificationsManager from './Notifications/NotificationsManager'\n\nconst SECTIONS = new Map([\n  ['network', 'Network'],\n  ['notifications', 'Notifications'],\n])\nconst PATHS = Array.from(SECTIONS.keys())\nconst VALUES = Array.from(SECTIONS.values())\n\nconst NETWORK_INDEX = 0\nconst NOTIFICATIONS_INDEX = 1\n\nconst AnimatedDiv = animated.div\n\nfunction GlobalPreferences({ compact, onClose, onNavigation, sectionIndex }) {\n  useEsc(onClose)\n\n  const container = useRef()\n  useEffect(() => {\n    if (container.current) {\n      container.current.focus()\n    }\n  }, [])\n\n  return (\n    <div ref={container} tabIndex=\"0\" css=\"outline: 0\">\n      <Layout css=\"z-index: 2\">\n        <Close compact={compact} onClick={onClose} />\n        <Header\n          primary=\"Global preferences\"\n          css={`\n            padding-top: ${!compact ? 10 * GU : 0}px;\n          `}\n        />\n        <React.Fragment>\n          <Tabs\n            items={VALUES}\n            onChange={onNavigation}\n            selected={sectionIndex}\n          />\n\n          {sectionIndex === NETWORK_INDEX && <Network />}\n          {sectionIndex === NOTIFICATIONS_INDEX && (\n            <NotificationsManager onReturnToDashboard={onClose} />\n          )}\n        </React.Fragment>\n      </Layout>\n    </div>\n  )\n}\n\nfunction useGlobalPreferences({ path = '', onScreenChange }) {\n  const [sectionIndex, setSectionIndex] = useState(null)\n  const handleNavigation = useCallback(\n    index => {\n      onScreenChange(PATHS[index])\n    },\n    [onScreenChange]\n  )\n\n  useEffect(() => {\n    if (!path) {\n      setSectionIndex(null)\n      return\n    }\n    const index = PATHS.findIndex(item => path.startsWith(item))\n\n    setSectionIndex(index === -1 ? null : index)\n  }, [path, sectionIndex])\n\n  return { sectionIndex, handleNavigation }\n}\n\nfunction Close({ compact, onClick }) {\n  const theme = useTheme()\n  return (\n    <div\n      css={`\n        position: absolute;\n        right: 0;\n        padding-top: ${2.5 * GU}px;\n        padding-right: ${3 * GU}px;\n\n        ${compact &&\n          `\n            padding-top: ${2 * GU}px;\n            padding-right: ${1.5 * GU}px;\n          `}\n      `}\n    >\n      <ButtonIcon onClick={onClick} label=\"Close\">\n        <IconClose\n          css={`\n            color: ${theme.surfaceIcon};\n          `}\n        />\n      </ButtonIcon>\n    </div>\n  )\n}\n\nfunction AnimatedGlobalPreferences({ path, onScreenChange, onClose }) {\n  const { sectionIndex, handleNavigation } = useGlobalPreferences({\n    path,\n    onScreenChange,\n  })\n\n  const { below } = useViewport()\n  const compact = below('medium')\n  const theme = useTheme()\n\n  return (\n    <Transition\n      native\n      items={sectionIndex !== null}\n      from={{ opacity: 0, enterProgress: 0, blocking: false }}\n      enter={{ opacity: 1, enterProgress: 1, blocking: true }}\n      leave={{ opacity: 0, enterProgress: 1, blocking: false }}\n      config={springs.smooth}\n    >\n      {show =>\n        show &&\n        /* eslint-disable react/prop-types */\n        // z-index 1 on mobile keeps the menu above this preferences modal\n        (({ opacity, enterProgress, blocking }) => (\n          <AnimatedDiv\n            style={{\n              zIndex: 1,\n              pointerEvents: blocking ? 'auto' : 'none',\n              opacity,\n              transform: enterProgress.interpolate(\n                v => `\n                  translate3d(0, ${(1 - v) * 10}px, 0)\n                  scale3d(${1 - (1 - v) * 0.03}, ${1 - (1 - v) * 0.03}, 1)\n                `\n              ),\n            }}\n            css={`\n              position: fixed;\n              top: 0;\n              bottom: 0;\n              left: 0;\n              right: 0;\n              overflow: auto;\n              min-width: ${45 * GU}px;\n              padding-bottom: ${compact ? 2 : 0 * GU}px;\n              border-top: 2px solid ${theme.accent};\n              background: ${theme.surface};\n            `}\n          >\n            <GlobalPreferences\n              onClose={onClose}\n              compact={compact}\n              sectionIndex={sectionIndex}\n              onNavigation={handleNavigation}\n            />\n          </AnimatedDiv>\n        ))\n      /* eslint-enable react/prop-types */\n      }\n    </Transition>\n  )\n}\n\nexport default React.memo(AnimatedGlobalPreferences)\n"]},"metadata":{},"sourceType":"module"}