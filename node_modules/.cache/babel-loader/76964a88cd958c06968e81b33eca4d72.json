{"ast":null,"code":"import { courtServerEndpoint } from '../endpoints';\nimport { FORBIDDEN_RESPONSE, UNAUTHORIZED_RESPONSE, USER_NOT_FOUND } from './responseCodes';\nconst COURT_SERVER_ENDPOINT = courtServerEndpoint();\nexport async function createSession(address, signature, timestamp) {\n  const endpoint = `${COURT_SERVER_ENDPOINT}/users/${address}/sessions`;\n\n  try {\n    const rawResponse = await fetch(endpoint, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        signature,\n        timestamp\n      })\n    });\n    const jsonResponse = await rawResponse.json();\n\n    if (rawResponse.ok) {\n      return {\n        authenticated: jsonResponse === null || jsonResponse === void 0 ? void 0 : jsonResponse.authenticated,\n        error: null\n      };\n    }\n\n    const errors = jsonResponse.errors.map(err => Object.values(err).join(', ')).join(', ');\n    return {\n      error: errors\n    };\n  } catch (err) {\n    console.error(err);\n    return {\n      error: err\n    };\n  }\n}\nexport async function subscribeToNotifications(address, email) {\n  const endpoint = `${COURT_SERVER_ENDPOINT}/users/${address}/email`;\n\n  try {\n    const rawResponse = await fetch(endpoint, {\n      method: 'PUT',\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email\n      })\n    });\n    const jsonResponse = await rawResponse.json();\n\n    if (rawResponse.ok) {\n      return {\n        subscribedEmail: jsonResponse === null || jsonResponse === void 0 ? void 0 : jsonResponse.email,\n        sent: jsonResponse === null || jsonResponse === void 0 ? void 0 : jsonResponse.sent,\n        error: null\n      };\n    }\n\n    const errors = jsonResponse.errors.map(err => Object.values(err).join(', ')).join(', ');\n    return {\n      needsSignature: rawResponse.status === UNAUTHORIZED_RESPONSE || rawResponse.status === USER_NOT_FOUND || rawResponse.status === FORBIDDEN_RESPONSE,\n      error: errors\n    };\n  } catch (err) {\n    console.error(err);\n    return {\n      error: err\n    };\n  }\n}\nexport async function switchNotificationsStatus(address, disabled) {\n  const endpoint = `${COURT_SERVER_ENDPOINT}/users/${address}/notifications`;\n\n  try {\n    const rawResponse = await fetch(endpoint, {\n      method: 'PUT',\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        disabled\n      })\n    });\n    const jsonResponse = await rawResponse.json();\n\n    if (rawResponse.ok) {\n      return {\n        disabled: jsonResponse === null || jsonResponse === void 0 ? void 0 : jsonResponse.disabled,\n        error: null\n      };\n    }\n\n    const errors = jsonResponse.errors.map(err => Object.values(err).join(', ')).join(', ');\n    return {\n      needsSignature: rawResponse.status === UNAUTHORIZED_RESPONSE || rawResponse.status === USER_NOT_FOUND || rawResponse.status === FORBIDDEN_RESPONSE,\n      error: errors\n    };\n  } catch (err) {\n    console.error(err);\n    return {\n      error: err\n    };\n  }\n}\nexport async function getJurorEmail(address) {\n  const endpoint = `${COURT_SERVER_ENDPOINT}/users/${address}/email`;\n\n  try {\n    const rawResponse = await fetch(endpoint, {\n      method: 'GET',\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    const jsonResponse = await rawResponse.json();\n\n    if (rawResponse.ok) {\n      return {\n        email: jsonResponse === null || jsonResponse === void 0 ? void 0 : jsonResponse.email,\n        error: null\n      };\n    }\n\n    const errors = jsonResponse.errors.map(err => Object.values(err).join(', ')).join(', ');\n    return {\n      needsSignature: rawResponse.status === UNAUTHORIZED_RESPONSE || rawResponse.status === USER_NOT_FOUND || rawResponse.status === FORBIDDEN_RESPONSE,\n      error: errors\n    };\n  } catch (err) {\n    console.error(err);\n    return {\n      error: err\n    };\n  }\n}\nexport async function resendVerificationEmail(address) {\n  const endpoint = `${COURT_SERVER_ENDPOINT}/users/${address}/email:resend`;\n\n  try {\n    const rawResponse = await fetch(endpoint, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    const jsonResponse = await rawResponse.json();\n\n    if (rawResponse.ok) {\n      return {\n        sent: jsonResponse === null || jsonResponse === void 0 ? void 0 : jsonResponse.sent,\n        error: null\n      };\n    }\n\n    const errors = jsonResponse.errors.map(err => Object.values(err).join(', ')).join(', ');\n    return {\n      needsSignature: rawResponse.status === UNAUTHORIZED_RESPONSE || rawResponse.status === USER_NOT_FOUND || rawResponse.status === FORBIDDEN_RESPONSE,\n      error: errors\n    };\n  } catch (err) {\n    console.error(err);\n    return {\n      error: err\n    };\n  }\n}\nexport async function subscribeExistingEmail(address) {\n  const {\n    email,\n    error,\n    needsSignature\n  } = await getJurorEmail(address);\n\n  if (needsSignature) {\n    return {\n      needsSignature,\n      email\n    };\n  }\n\n  if (error) {\n    return {\n      error\n    };\n  }\n\n  const {\n    sent,\n    error: errorReSending\n  } = await resendVerificationEmail(address);\n  return {\n    email,\n    sent,\n    error: errorReSending\n  };\n}\nexport async function deleteJurorEmail(address) {\n  const endpoint = `${COURT_SERVER_ENDPOINT}/users/${address}/email`;\n\n  try {\n    const rawResponse = await fetch(endpoint, {\n      method: 'DELETE',\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    const jsonResponse = await rawResponse.json();\n\n    if (rawResponse.ok) {\n      return {\n        deleted: jsonResponse === null || jsonResponse === void 0 ? void 0 : jsonResponse.deleted,\n        error: null\n      };\n    }\n\n    const errors = jsonResponse.errors.map(err => Object.values(err).join(', ')).join(', ');\n    return {\n      needsSignature: rawResponse.status === UNAUTHORIZED_RESPONSE || rawResponse.status === USER_NOT_FOUND || rawResponse.status === FORBIDDEN_RESPONSE,\n      error: errors\n    };\n  } catch (err) {\n    console.error(err);\n    return {\n      error: err\n    };\n  }\n}\nexport async function deleteCurrentSession(address) {\n  const endpoint = `${COURT_SERVER_ENDPOINT}/users/${address}/sessions:current`;\n\n  try {\n    const rawResponse = await fetch(endpoint, {\n      method: 'DELETE',\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    const jsonResponse = await rawResponse.json();\n\n    if (rawResponse.ok) {\n      return {\n        deleted: jsonResponse === null || jsonResponse === void 0 ? void 0 : jsonResponse.deleted,\n        error: null\n      };\n    }\n\n    const errors = jsonResponse.errors.map(err => Object.values(err).join(', ')).join(', ');\n    return {\n      needsSignature: rawResponse.status === UNAUTHORIZED_RESPONSE || rawResponse.status === USER_NOT_FOUND || rawResponse.status === FORBIDDEN_RESPONSE,\n      error: errors\n    };\n  } catch (err) {\n    console.error(err);\n    return {\n      error: err\n    };\n  }\n}\nexport async function verifyJurorEmail(address, token) {\n  const endpoint = `${COURT_SERVER_ENDPOINT}/users/${address}/email:verify`;\n\n  try {\n    const rawResponse = await fetch(endpoint, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        token\n      })\n    });\n    const jsonResponse = await rawResponse.json();\n\n    if (rawResponse.ok) {\n      return {\n        verified: jsonResponse === null || jsonResponse === void 0 ? void 0 : jsonResponse.verified,\n        error: null\n      };\n    }\n\n    const errors = jsonResponse.errors.map(err => Object.values(err).join(', ')).join(', ');\n    return {\n      error: errors\n    };\n  } catch (err) {\n    console.error(err);\n    return {\n      error: err\n    };\n  }\n}\nexport async function getSubscriptionDetails(address) {\n  const endpoint = `${COURT_SERVER_ENDPOINT}/users/${address}`;\n\n  try {\n    const rawResponse = await fetch(endpoint, {\n      method: 'GET',\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    const jsonResponse = await rawResponse.json();\n\n    if (rawResponse.ok) {\n      return {\n        addressVerified: jsonResponse === null || jsonResponse === void 0 ? void 0 : jsonResponse.addressVerified,\n        emailExists: jsonResponse === null || jsonResponse === void 0 ? void 0 : jsonResponse.emailExists,\n        emailVerified: jsonResponse === null || jsonResponse === void 0 ? void 0 : jsonResponse.emailVerified,\n        notificationsDisabled: jsonResponse === null || jsonResponse === void 0 ? void 0 : jsonResponse.notificationsDisabled,\n        error: null\n      };\n    }\n\n    const errors = jsonResponse.errors.map(err => Object.values(err).join(', ')).join(', ');\n    return {\n      error: errors\n    };\n  } catch (err) {\n    console.error(err);\n    return {\n      error: err\n    };\n  }\n}","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/services/notificationServiceApi.js"],"names":["courtServerEndpoint","FORBIDDEN_RESPONSE","UNAUTHORIZED_RESPONSE","USER_NOT_FOUND","COURT_SERVER_ENDPOINT","createSession","address","signature","timestamp","endpoint","rawResponse","fetch","method","credentials","headers","Accept","body","JSON","stringify","jsonResponse","json","ok","authenticated","error","errors","map","err","Object","values","join","console","subscribeToNotifications","email","subscribedEmail","sent","needsSignature","status","switchNotificationsStatus","disabled","getJurorEmail","resendVerificationEmail","subscribeExistingEmail","errorReSending","deleteJurorEmail","deleted","deleteCurrentSession","verifyJurorEmail","token","verified","getSubscriptionDetails","addressVerified","emailExists","emailVerified","notificationsDisabled"],"mappings":"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","sourcesContent":["import { courtServerEndpoint } from '../endpoints'\nimport {\n  FORBIDDEN_RESPONSE,\n  UNAUTHORIZED_RESPONSE,\n  USER_NOT_FOUND,\n} from './responseCodes'\n\nconst COURT_SERVER_ENDPOINT = courtServerEndpoint()\n\nexport async function createSession(address, signature, timestamp) {\n  const endpoint = `${COURT_SERVER_ENDPOINT}/users/${address}/sessions`\n\n  try {\n    const rawResponse = await fetch(endpoint, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ signature, timestamp }),\n    })\n\n    const jsonResponse = await rawResponse.json()\n\n    if (rawResponse.ok) {\n      return {\n        authenticated: jsonResponse?.authenticated,\n        error: null,\n      }\n    }\n\n    const errors = jsonResponse.errors\n      .map(err => Object.values(err).join(', '))\n      .join(', ')\n\n    return {\n      error: errors,\n    }\n  } catch (err) {\n    console.error(err)\n    return { error: err }\n  }\n}\n\nexport async function subscribeToNotifications(address, email) {\n  const endpoint = `${COURT_SERVER_ENDPOINT}/users/${address}/email`\n\n  try {\n    const rawResponse = await fetch(endpoint, {\n      method: 'PUT',\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ email }),\n    })\n\n    const jsonResponse = await rawResponse.json()\n\n    if (rawResponse.ok) {\n      return {\n        subscribedEmail: jsonResponse?.email,\n        sent: jsonResponse?.sent,\n        error: null,\n      }\n    }\n\n    const errors = jsonResponse.errors\n      .map(err => Object.values(err).join(', '))\n      .join(', ')\n\n    return {\n      needsSignature:\n        rawResponse.status === UNAUTHORIZED_RESPONSE ||\n        rawResponse.status === USER_NOT_FOUND ||\n        rawResponse.status === FORBIDDEN_RESPONSE,\n      error: errors,\n    }\n  } catch (err) {\n    console.error(err)\n    return { error: err }\n  }\n}\n\nexport async function switchNotificationsStatus(address, disabled) {\n  const endpoint = `${COURT_SERVER_ENDPOINT}/users/${address}/notifications`\n\n  try {\n    const rawResponse = await fetch(endpoint, {\n      method: 'PUT',\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ disabled }),\n    })\n\n    const jsonResponse = await rawResponse.json()\n\n    if (rawResponse.ok) {\n      return {\n        disabled: jsonResponse?.disabled,\n        error: null,\n      }\n    }\n\n    const errors = jsonResponse.errors\n      .map(err => Object.values(err).join(', '))\n      .join(', ')\n\n    return {\n      needsSignature:\n        rawResponse.status === UNAUTHORIZED_RESPONSE ||\n        rawResponse.status === USER_NOT_FOUND ||\n        rawResponse.status === FORBIDDEN_RESPONSE,\n      error: errors,\n    }\n  } catch (err) {\n    console.error(err)\n    return { error: err }\n  }\n}\n\nexport async function getJurorEmail(address) {\n  const endpoint = `${COURT_SERVER_ENDPOINT}/users/${address}/email`\n\n  try {\n    const rawResponse = await fetch(endpoint, {\n      method: 'GET',\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    })\n\n    const jsonResponse = await rawResponse.json()\n\n    if (rawResponse.ok) {\n      return {\n        email: jsonResponse?.email,\n        error: null,\n      }\n    }\n\n    const errors = jsonResponse.errors\n      .map(err => Object.values(err).join(', '))\n      .join(', ')\n\n    return {\n      needsSignature:\n        rawResponse.status === UNAUTHORIZED_RESPONSE ||\n        rawResponse.status === USER_NOT_FOUND ||\n        rawResponse.status === FORBIDDEN_RESPONSE,\n      error: errors,\n    }\n  } catch (err) {\n    console.error(err)\n    return { error: err }\n  }\n}\n\nexport async function resendVerificationEmail(address) {\n  const endpoint = `${COURT_SERVER_ENDPOINT}/users/${address}/email:resend`\n\n  try {\n    const rawResponse = await fetch(endpoint, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    })\n\n    const jsonResponse = await rawResponse.json()\n\n    if (rawResponse.ok) {\n      return {\n        sent: jsonResponse?.sent,\n        error: null,\n      }\n    }\n\n    const errors = jsonResponse.errors\n      .map(err => Object.values(err).join(', '))\n      .join(', ')\n\n    return {\n      needsSignature:\n        rawResponse.status === UNAUTHORIZED_RESPONSE ||\n        rawResponse.status === USER_NOT_FOUND ||\n        rawResponse.status === FORBIDDEN_RESPONSE,\n      error: errors,\n    }\n  } catch (err) {\n    console.error(err)\n    return { error: err }\n  }\n}\n\nexport async function subscribeExistingEmail(address) {\n  const { email, error, needsSignature } = await getJurorEmail(address)\n\n  if (needsSignature) {\n    return { needsSignature, email }\n  }\n  if (error) {\n    return { error }\n  }\n  const { sent, error: errorReSending } = await resendVerificationEmail(address)\n\n  return { email, sent, error: errorReSending }\n}\n\nexport async function deleteJurorEmail(address) {\n  const endpoint = `${COURT_SERVER_ENDPOINT}/users/${address}/email`\n\n  try {\n    const rawResponse = await fetch(endpoint, {\n      method: 'DELETE',\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    })\n\n    const jsonResponse = await rawResponse.json()\n\n    if (rawResponse.ok) {\n      return {\n        deleted: jsonResponse?.deleted,\n        error: null,\n      }\n    }\n\n    const errors = jsonResponse.errors\n      .map(err => Object.values(err).join(', '))\n      .join(', ')\n\n    return {\n      needsSignature:\n        rawResponse.status === UNAUTHORIZED_RESPONSE ||\n        rawResponse.status === USER_NOT_FOUND ||\n        rawResponse.status === FORBIDDEN_RESPONSE,\n      error: errors,\n    }\n  } catch (err) {\n    console.error(err)\n    return { error: err }\n  }\n}\n\nexport async function deleteCurrentSession(address) {\n  const endpoint = `${COURT_SERVER_ENDPOINT}/users/${address}/sessions:current`\n\n  try {\n    const rawResponse = await fetch(endpoint, {\n      method: 'DELETE',\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    })\n\n    const jsonResponse = await rawResponse.json()\n\n    if (rawResponse.ok) {\n      return {\n        deleted: jsonResponse?.deleted,\n        error: null,\n      }\n    }\n\n    const errors = jsonResponse.errors\n      .map(err => Object.values(err).join(', '))\n      .join(', ')\n\n    return {\n      needsSignature:\n        rawResponse.status === UNAUTHORIZED_RESPONSE ||\n        rawResponse.status === USER_NOT_FOUND ||\n        rawResponse.status === FORBIDDEN_RESPONSE,\n      error: errors,\n    }\n  } catch (err) {\n    console.error(err)\n    return { error: err }\n  }\n}\n\nexport async function verifyJurorEmail(address, token) {\n  const endpoint = `${COURT_SERVER_ENDPOINT}/users/${address}/email:verify`\n\n  try {\n    const rawResponse = await fetch(endpoint, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ token }),\n    })\n\n    const jsonResponse = await rawResponse.json()\n\n    if (rawResponse.ok) {\n      return {\n        verified: jsonResponse?.verified,\n        error: null,\n      }\n    }\n\n    const errors = jsonResponse.errors\n      .map(err => Object.values(err).join(', '))\n      .join(', ')\n\n    return {\n      error: errors,\n    }\n  } catch (err) {\n    console.error(err)\n    return { error: err }\n  }\n}\n\nexport async function getSubscriptionDetails(address) {\n  const endpoint = `${COURT_SERVER_ENDPOINT}/users/${address}`\n\n  try {\n    const rawResponse = await fetch(endpoint, {\n      method: 'GET',\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    })\n\n    const jsonResponse = await rawResponse.json()\n\n    if (rawResponse.ok) {\n      return {\n        addressVerified: jsonResponse?.addressVerified,\n        emailExists: jsonResponse?.emailExists,\n        emailVerified: jsonResponse?.emailVerified,\n        notificationsDisabled: jsonResponse?.notificationsDisabled,\n        error: null,\n      }\n    }\n\n    const errors = jsonResponse.errors\n      .map(err => Object.values(err).join(', '))\n      .join(', ')\n\n    return {\n      error: errors,\n    }\n  } catch (err) {\n    console.error(err)\n    return { error: err }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}