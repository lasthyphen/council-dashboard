{"ast":null,"code":"import _slicedToArray from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useCallback,useRef,useState}from'react';import{useFocusEnter,useFocusLeave}from'@aragon/ui';export function useInput(validationFn){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];var _useState3=useState('empty'),_useState4=_slicedToArray(_useState3,2),status=_useState4[0],setStatus=_useState4[1];var inputRef=useRef();var handleBlur=useCallback(function(){var invalidValue=!validationFn(value);if(invalidValue){return setStatus('invalid');}return setStatus('valid');},[validationFn,value]);var handleInputFocus=useCallback(function(event){return event.target.select();},[]);var _useFocusLeave=useFocusLeave(handleBlur,inputRef),handleFocusLeave=_useFocusLeave.handleFocusLeave;var _useFocusEnter=useFocusEnter(handleInputFocus,inputRef),handleFocusEnter=_useFocusEnter.handleFocusEnter;var handleValueChange=useCallback(function(e){var val=e.target.value;setValue(val);// Set only as valid while user typing. Use blur to set invalid\nsetStatus(val.trim()?'valid':'empty');},[]);return{inputProps:{inputRef:inputRef,value:value,onBlur:handleFocusLeave,onFocus:handleFocusEnter,onChange:handleValueChange},status:status};}","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/hooks/useInput.js"],"names":["useCallback","useRef","useState","useFocusEnter","useFocusLeave","useInput","validationFn","value","setValue","status","setStatus","inputRef","handleBlur","invalidValue","handleInputFocus","event","target","select","handleFocusLeave","handleFocusEnter","handleValueChange","e","val","trim","inputProps","onBlur","onFocus","onChange"],"mappings":"4HAAA,OAASA,WAAT,CAAsBC,MAAtB,CAA8BC,QAA9B,KAA8C,OAA9C,CACA,OAASC,aAAT,CAAwBC,aAAxB,KAA6C,YAA7C,CAEA,MAAO,SAASC,CAAAA,QAAT,CAAkBC,YAAlB,CAAgC,eACXJ,QAAQ,CAAC,EAAD,CADG,wCAC9BK,KAD8B,eACvBC,QADuB,8BAETN,QAAQ,CAAC,OAAD,CAFC,yCAE9BO,MAF8B,eAEtBC,SAFsB,eAIrC,GAAMC,CAAAA,QAAQ,CAAGV,MAAM,EAAvB,CAEA,GAAMW,CAAAA,UAAU,CAAGZ,WAAW,CAAC,UAAM,CACnC,GAAMa,CAAAA,YAAY,CAAG,CAACP,YAAY,CAACC,KAAD,CAAlC,CACA,GAAIM,YAAJ,CAAkB,CAChB,MAAOH,CAAAA,SAAS,CAAC,SAAD,CAAhB,CACD,CACD,MAAOA,CAAAA,SAAS,CAAC,OAAD,CAAhB,CACD,CAN6B,CAM3B,CAACJ,YAAD,CAAeC,KAAf,CAN2B,CAA9B,CAQA,GAAMO,CAAAA,gBAAgB,CAAGd,WAAW,CAAC,SAAAe,KAAK,QAAIA,CAAAA,KAAK,CAACC,MAAN,CAAaC,MAAb,EAAJ,EAAN,CAAiC,EAAjC,CAApC,CAdqC,mBAgBRb,aAAa,CAACQ,UAAD,CAAaD,QAAb,CAhBL,CAgB7BO,gBAhB6B,gBAgB7BA,gBAhB6B,oBAkBRf,aAAa,CAACW,gBAAD,CAAmBH,QAAnB,CAlBL,CAkB7BQ,gBAlB6B,gBAkB7BA,gBAlB6B,CAoBrC,GAAMC,CAAAA,iBAAiB,CAAGpB,WAAW,CAAC,SAAAqB,CAAC,CAAI,CACzC,GAAMC,CAAAA,GAAG,CAAGD,CAAC,CAACL,MAAF,CAAST,KAArB,CACAC,QAAQ,CAACc,GAAD,CAAR,CACA;AACAZ,SAAS,CAACY,GAAG,CAACC,IAAJ,GAAa,OAAb,CAAuB,OAAxB,CAAT,CACD,CALoC,CAKlC,EALkC,CAArC,CAOA,MAAO,CACLC,UAAU,CAAE,CACVb,QAAQ,CAARA,QADU,CAEVJ,KAAK,CAALA,KAFU,CAGVkB,MAAM,CAAEP,gBAHE,CAIVQ,OAAO,CAAEP,gBAJC,CAKVQ,QAAQ,CAAEP,iBALA,CADP,CAQLX,MAAM,CAANA,MARK,CAAP,CAUD","sourcesContent":["import { useCallback, useRef, useState } from 'react'\nimport { useFocusEnter, useFocusLeave } from '@aragon/ui'\n\nexport function useInput(validationFn) {\n  const [value, setValue] = useState('')\n  const [status, setStatus] = useState('empty')\n\n  const inputRef = useRef()\n\n  const handleBlur = useCallback(() => {\n    const invalidValue = !validationFn(value)\n    if (invalidValue) {\n      return setStatus('invalid')\n    }\n    return setStatus('valid')\n  }, [validationFn, value])\n\n  const handleInputFocus = useCallback(event => event.target.select(), [])\n\n  const { handleFocusLeave } = useFocusLeave(handleBlur, inputRef)\n\n  const { handleFocusEnter } = useFocusEnter(handleInputFocus, inputRef)\n\n  const handleValueChange = useCallback(e => {\n    const val = e.target.value\n    setValue(val)\n    // Set only as valid while user typing. Use blur to set invalid\n    setStatus(val.trim() ? 'valid' : 'empty')\n  }, [])\n\n  return {\n    inputProps: {\n      inputRef,\n      value,\n      onBlur: handleFocusLeave,\n      onFocus: handleFocusEnter,\n      onChange: handleValueChange,\n    },\n    status,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}