{"ast":null,"code":"import { networkConfigs, getNetworkConfig, getInternalNetworkName, RINKEBY_COURT, RINKEBY_STAGING_COURT } from '../networks';\nconst PRECEDENCE_CAMPAIGN_DISPUTES = {\n  main: new Map([[networkConfigs.dijets.court, new Map(new Array(21).fill().map((_, index) => [String(index + 1)]))]]),\n  rinkeby: new Map([[RINKEBY_COURT, new Map([])], [RINKEBY_STAGING_COURT, new Map([['0']])]]),\n  ropsten: new Map([[networkConfigs.ropsten.court, new Map([])]]),\n  local: new Map([[networkConfigs.local.court, new Map([])]])\n};\nexport function getPrecedenceCampaignDisputesByCourt() {\n  const courtAddress = getNetworkConfig().court;\n  return PRECEDENCE_CAMPAIGN_DISPUTES[getInternalNetworkName()].get(courtAddress);\n}","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/flagged-disputes/precedence-campaign-disputes.js"],"names":["networkConfigs","getNetworkConfig","getInternalNetworkName","RINKEBY_COURT","RINKEBY_STAGING_COURT","PRECEDENCE_CAMPAIGN_DISPUTES","main","Map","dijets","court","Array","fill","map","_","index","String","rinkeby","ropsten","local","getPrecedenceCampaignDisputesByCourt","courtAddress","get"],"mappings":"AAAA,SACEA,cADF,EAEEC,gBAFF,EAGEC,sBAHF,EAIEC,aAJF,EAKEC,qBALF,QAMO,aANP;AAQA,MAAMC,4BAA4B,GAAG;AACnCC,EAAAA,IAAI,EAAE,IAAIC,GAAJ,CAAQ,CACZ,CACEP,cAAc,CAACQ,MAAf,CAAsBC,KADxB,EAEE,IAAIF,GAAJ,CAAQ,IAAIG,KAAJ,CAAU,EAAV,EAAcC,IAAd,GAAqBC,GAArB,CAAyB,CAACC,CAAD,EAAIC,KAAJ,KAAc,CAACC,MAAM,CAACD,KAAK,GAAG,CAAT,CAAP,CAAvC,CAAR,CAFF,CADY,CAAR,CAD6B;AAOnCE,EAAAA,OAAO,EAAE,IAAIT,GAAJ,CAAQ,CACf,CAACJ,aAAD,EAAgB,IAAII,GAAJ,CAAQ,EAAR,CAAhB,CADe,EAEf,CAACH,qBAAD,EAAwB,IAAIG,GAAJ,CAAQ,CAAC,CAAC,GAAD,CAAD,CAAR,CAAxB,CAFe,CAAR,CAP0B;AAWnCU,EAAAA,OAAO,EAAE,IAAIV,GAAJ,CAAQ,CAAC,CAACP,cAAc,CAACiB,OAAf,CAAuBR,KAAxB,EAA+B,IAAIF,GAAJ,CAAQ,EAAR,CAA/B,CAAD,CAAR,CAX0B;AAYnCW,EAAAA,KAAK,EAAE,IAAIX,GAAJ,CAAQ,CAAC,CAACP,cAAc,CAACkB,KAAf,CAAqBT,KAAtB,EAA6B,IAAIF,GAAJ,CAAQ,EAAR,CAA7B,CAAD,CAAR;AAZ4B,CAArC;AAeA,OAAO,SAASY,oCAAT,GAAgD;AACrD,QAAMC,YAAY,GAAGnB,gBAAgB,GAAGQ,KAAxC;AAEA,SAAOJ,4BAA4B,CAACH,sBAAsB,EAAvB,CAA5B,CAAuDmB,GAAvD,CACLD,YADK,CAAP;AAGD","sourcesContent":["import {\n  networkConfigs,\n  getNetworkConfig,\n  getInternalNetworkName,\n  RINKEBY_COURT,\n  RINKEBY_STAGING_COURT,\n} from '../networks'\n\nconst PRECEDENCE_CAMPAIGN_DISPUTES = {\n  main: new Map([\n    [\n      networkConfigs.dijets.court,\n      new Map(new Array(21).fill().map((_, index) => [String(index + 1)])),\n    ],\n  ]),\n  rinkeby: new Map([\n    [RINKEBY_COURT, new Map([])],\n    [RINKEBY_STAGING_COURT, new Map([['0']])],\n  ]),\n  ropsten: new Map([[networkConfigs.ropsten.court, new Map([])]]),\n  local: new Map([[networkConfigs.local.court, new Map([])]]),\n}\n\nexport function getPrecedenceCampaignDisputesByCourt() {\n  const courtAddress = getNetworkConfig().court\n\n  return PRECEDENCE_CAMPAIGN_DISPUTES[getInternalNetworkName()].get(\n    courtAddress\n  )\n}\n"]},"metadata":{},"sourceType":"module"}