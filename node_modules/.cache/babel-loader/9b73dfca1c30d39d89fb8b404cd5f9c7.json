{"ast":null,"code":"import _regeneratorRuntime from \"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { ethers } from 'ethers';\nimport { getApmInternalAppInfo, getAragonOsInternalAppInfo, hasAppInfo } from './overrides/index';\nimport { DEFAULT_IPFS_GATEWAY } from '../params';\nexport function parseMetadata(name, metadata) {\n  try {\n    return JSON.parse(metadata);\n  } catch (error) {\n    throw new Error(\"Can't parse \".concat(name, \" file, invalid JSON.\"));\n  }\n}\nexport function fetchMetadata(_x, _x2) {\n  return _fetchMetadata.apply(this, arguments);\n}\n\nfunction _fetchMetadata() {\n  _fetchMetadata = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(fileName, contentUri) {\n    var contentHashRegEx, url, metadata;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            contentHashRegEx = contentUri.match(/ipfs:(.*)/);\n\n            if (!contentHashRegEx) {\n              _context.next = 13;\n              break;\n            }\n\n            url = \"\".concat(DEFAULT_IPFS_GATEWAY, \"/ipfs/\").concat(contentHashRegEx[1], \"/\").concat(fileName);\n            _context.prev = 3;\n            _context.next = 6;\n            return ethers.utils.fetchJson(url);\n\n          case 6:\n            metadata = _context.sent;\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](3);\n            throw new Error(\"Can't fetch \".concat(url, \", failed with error: {error}.\"));\n\n          case 12:\n            return _context.abrupt(\"return\", metadata);\n\n          case 13:\n            return _context.abrupt(\"return\", {});\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 9]]);\n  }));\n  return _fetchMetadata.apply(this, arguments);\n}\n\nexport function resolveMetadata(_x3, _x4, _x5) {\n  return _resolveMetadata.apply(this, arguments);\n}\n\nfunction _resolveMetadata() {\n  _resolveMetadata = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(fileName, contentUri, metadata) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!metadata) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", parseMetadata(fileName, metadata));\n\n          case 2:\n            if (!contentUri) {\n              _context2.next = 4;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", fetchMetadata(fileName, contentUri));\n\n          case 4:\n            return _context2.abrupt(\"return\", {});\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _resolveMetadata.apply(this, arguments);\n}\n\nexport function resolveManifest(_x6) {\n  return _resolveManifest.apply(this, arguments);\n}\n\nfunction _resolveManifest() {\n  _resolveManifest = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(data) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", resolveMetadata('manifest.json', data.contentUri, data.manifest));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _resolveManifest.apply(this, arguments);\n}\n\nexport function resolveArtifact(_x7) {\n  return _resolveArtifact.apply(this, arguments);\n}\n\nfunction _resolveArtifact() {\n  _resolveArtifact = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(data) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (!hasAppInfo(data.appId, 'apm')) {\n              _context4.next = 2;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", getApmInternalAppInfo(data.appId));\n\n          case 2:\n            if (!hasAppInfo(data.appId, 'aragon')) {\n              _context4.next = 4;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", getAragonOsInternalAppInfo(data.appId));\n\n          case 4:\n            return _context4.abrupt(\"return\", resolveMetadata('artifact.json', data.contentUri, data.artifact));\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _resolveArtifact.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}