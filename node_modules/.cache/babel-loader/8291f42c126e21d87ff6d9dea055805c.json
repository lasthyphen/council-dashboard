{"ast":null,"code":"import _styled6 from \"styled-components\";\nimport _styled5 from \"styled-components\";\nimport _styled4 from \"styled-components\";\nimport _styled3 from \"styled-components\";\nimport _styled2 from \"styled-components\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/saleemfareed/oneds/court-dashboard/src/components/SignatureRequest.js\";\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Button, GU, textStyle, useTheme } from '@aragon/ui';\nimport { useWallet } from '../providers/Wallet';\nimport { signMessage } from '../lib/web3-utils';\nimport { dayjs } from '../utils/date-utils';\nimport signRequestSuccessIllustration from \"../../src/assets/signRequestSuccess.svg\";\nimport signRequestFailIllustration from \"../../src/assets/signRequestFail.svg\";\nimport signRequestLoading from '../../src/assets/signRequestLoading.gif';\n\nvar _StyledDiv = _styled(\"div\").withConfig({\n  displayName: \"SignatureRequest___StyledDiv\",\n  componentId: \"sc-1hjqbw6-0\"\n})([\"display:flex;flex-direction:column;text-align:center;align-items:center;\"]);\n\nvar _StyledH = _styled(\"h3\").withConfig({\n  displayName: \"SignatureRequest___StyledH\",\n  componentId: \"sc-1hjqbw6-1\"\n})([\"\", \";margin-top:\", \"px;\"], p => p._css, p => p._css2);\n\nvar _StyledSpan = _styled(\"span\").withConfig({\n  displayName: \"SignatureRequest___StyledSpan\",\n  componentId: \"sc-1hjqbw6-2\"\n})([\"\", \";color:\", \";margin-top:\", \"px;\"], p => p._css3, p => p._css4, p => p._css5);\n\nvar _StyledSpan2 = _styled(\"span\").withConfig({\n  displayName: \"SignatureRequest___StyledSpan2\",\n  componentId: \"sc-1hjqbw6-3\"\n})([\"\", \";color:\", \";margin-top:\", \"px;\"], p => p._css6, p => p._css7, p => p._css8);\n\nvar _StyledDiv2 = _styled(\"div\").withConfig({\n  displayName: \"SignatureRequest___StyledDiv2\",\n  componentId: \"sc-1hjqbw6-4\"\n})([\"display:flex;justify-content:space-between;width:100%;flex-direction:\", \";margin-top:\", \"px;\"], p => p._css9, p => p._css10);\n\nconst SignerRequest = React.memo(function SignerRequest({\n  compactMode,\n  mode,\n  onSignSuccess,\n  text,\n  title\n}) {\n  const [signingError, setSigningError] = useState(false);\n  const successMode = mode === 'success';\n  const wallet = useWallet();\n  const theme = useTheme();\n  const illustration = useMemo(() => {\n    if (signingError) {\n      return signRequestFailIllustration;\n    }\n\n    if (successMode) {\n      return signRequestSuccessIllustration;\n    }\n\n    return signRequestLoading;\n  }, [signingError, successMode]);\n  const {\n    statusText,\n    statusTextColor\n  } = useMemo(() => {\n    if (signingError) {\n      return {\n        statusText: 'Signature failed',\n        statusTextColor: theme.negative\n      };\n    }\n\n    if (successMode) {\n      return {\n        statusText: 'Signature confirmed',\n        statusTextColor: theme.positive\n      };\n    }\n\n    return {\n      statusText: 'Waiting for signatureâ€¦',\n      statusTextColor: theme.surfaceContentSecondary\n    };\n  }, [signingError, successMode, theme]);\n  const infoText = useMemo(() => {\n    if (signingError) {\n      return 'A error occurred when signing the message.';\n    }\n\n    return text;\n  }, [signingError, text]);\n  const requestSignature = useCallback(async () => {\n    if (!wallet) {\n      return;\n    }\n\n    const now = dayjs.utc().toString();\n    const {\n      signHash,\n      error\n    } = await signMessage(wallet, now);\n\n    if (error) {\n      setSigningError(true);\n      return;\n    }\n\n    onSignSuccess(signHash, now);\n  }, [onSignSuccess, wallet]);\n  /**  We only need to execute it when the component is rendered but if we need to retry the action we\n   should call to the requestSignature callback */\n\n  useEffect(() => {\n    if (successMode) {\n      return;\n    }\n\n    requestSignature();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(_StyledDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: illustration,\n    height: 140,\n    width: 140,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(_StyledH, {\n    _css: textStyle('title2'),\n    _css2: 4 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, title), React.createElement(_StyledSpan, {\n    _css3: textStyle('body2'),\n    _css4: statusTextColor,\n    _css5: 1.5 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, statusText), React.createElement(_StyledSpan2, {\n    _css6: textStyle('body2'),\n    _css7: theme.surfaceContentSecondary,\n    _css8: 1.5 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, infoText), signingError && React.createElement(_StyledDiv2, {\n    _css9: compactMode ? 'column' : 'row',\n    _css10: 3 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(ActionButton, {\n    href: \"https://help.aragon.org/article/27-general-troubleshooting-tips\",\n    compactMode: compactMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Troubleshooting\"), React.createElement(ActionButton, {\n    mode: \"strong\",\n    onClick: requestSignature,\n    compactMode: compactMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Repeat signature\"))));\n});\n\nvar _StyledButton = _styled(Button).withConfig({\n  displayName: \"SignatureRequest___StyledButton\",\n  componentId: \"sc-1hjqbw6-5\"\n})([\"width:\", \";\"], p => p._css11);\n\nfunction ActionButton({\n  compactMode,\n  ...props\n}) {\n  return React.createElement(_StyledButton, Object.assign({}, props, {\n    _css11: compactMode ? '100%' : `calc((100% - ${2 * GU}px) /  2)`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }));\n}\n\nexport default SignerRequest;","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/SignatureRequest.js"],"names":["React","useCallback","useEffect","useMemo","useState","Button","GU","textStyle","useTheme","useWallet","signMessage","dayjs","signRequestLoading","SignerRequest","memo","compactMode","mode","onSignSuccess","text","title","signingError","setSigningError","successMode","wallet","theme","illustration","signRequestFailIllustration","signRequestSuccessIllustration","statusText","statusTextColor","negative","positive","surfaceContentSecondary","infoText","requestSignature","now","utc","toString","signHash","error","ActionButton","props"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,OAAxC,EAAiDC,QAAjD,QAAiE,OAAjE;AACA,SAASC,MAAT,EAAiBC,EAAjB,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,YAAhD;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,KAAT,QAAsB,qBAAtB;;;AAIA,OAAOC,kBAAP,MAA+B,yCAA/B;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,MAAMC,aAAa,GAAGb,KAAK,CAACc,IAAN,CAAW,SAASD,aAAT,CAAuB;AACtDE,EAAAA,WADsD;AAEtDC,EAAAA,IAFsD;AAGtDC,EAAAA,aAHsD;AAItDC,EAAAA,IAJsD;AAKtDC,EAAAA;AALsD,CAAvB,EAM9B;AACD,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC,KAAD,CAAhD;AAEA,QAAMkB,WAAW,GAAGN,IAAI,KAAK,SAA7B;AAEA,QAAMO,MAAM,GAAGd,SAAS,EAAxB;AAEA,QAAMe,KAAK,GAAGhB,QAAQ,EAAtB;AAEA,QAAMiB,YAAY,GAAGtB,OAAO,CAAC,MAAM;AACjC,QAAIiB,YAAJ,EAAkB;AAChB,aAAOM,2BAAP;AACD;;AACD,QAAIJ,WAAJ,EAAiB;AACf,aAAOK,8BAAP;AACD;;AACD,WAAOf,kBAAP;AACD,GAR2B,EAQzB,CAACQ,YAAD,EAAeE,WAAf,CARyB,CAA5B;AAUA,QAAM;AAAEM,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAkC1B,OAAO,CAAC,MAAM;AACpD,QAAIiB,YAAJ,EAAkB;AAChB,aAAO;AACLQ,QAAAA,UAAU,EAAE,kBADP;AAELC,QAAAA,eAAe,EAAEL,KAAK,CAACM;AAFlB,OAAP;AAID;;AACD,QAAIR,WAAJ,EAAiB;AACf,aAAO;AACLM,QAAAA,UAAU,EAAE,qBADP;AAELC,QAAAA,eAAe,EAAEL,KAAK,CAACO;AAFlB,OAAP;AAID;;AACD,WAAO;AACLH,MAAAA,UAAU,EAAE,wBADP;AAELC,MAAAA,eAAe,EAAEL,KAAK,CAACQ;AAFlB,KAAP;AAID,GAjB8C,EAiB5C,CAACZ,YAAD,EAAeE,WAAf,EAA4BE,KAA5B,CAjB4C,CAA/C;AAmBA,QAAMS,QAAQ,GAAG9B,OAAO,CAAC,MAAM;AAC7B,QAAIiB,YAAJ,EAAkB;AAChB,aAAO,4CAAP;AACD;;AACD,WAAOF,IAAP;AACD,GALuB,EAKrB,CAACE,YAAD,EAAeF,IAAf,CALqB,CAAxB;AAOA,QAAMgB,gBAAgB,GAAGjC,WAAW,CAAC,YAAY;AAC/C,QAAI,CAACsB,MAAL,EAAa;AACX;AACD;;AACD,UAAMY,GAAG,GAAGxB,KAAK,CAACyB,GAAN,GAAYC,QAAZ,EAAZ;AACA,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAsB,MAAM7B,WAAW,CAACa,MAAD,EAASY,GAAT,CAA7C;;AAEA,QAAII,KAAJ,EAAW;AACTlB,MAAAA,eAAe,CAAC,IAAD,CAAf;AACA;AACD;;AAEDJ,IAAAA,aAAa,CAACqB,QAAD,EAAWH,GAAX,CAAb;AACD,GAbmC,EAajC,CAAClB,aAAD,EAAgBM,MAAhB,CAbiC,CAApC;AAeA;;;AAEArB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoB,WAAJ,EAAiB;AACf;AACD;;AACDY,IAAAA,gBAAgB;AACjB,GALQ,EAKN,EALM,CAAT,CA9DC,CAmEM;;AAEP,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE;AAAK,IAAA,GAAG,EAAET,YAAV;AAAwB,IAAA,MAAM,EAAE,GAAhC;AAAqC,IAAA,KAAK,EAAE,GAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE;AAAA,UAEMlB,SAAS,CAAC,QAAD,CAFf;AAAA,WAGkB,IAAID,EAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGa,KANH,CATF,EAkBE;AAAA,WAEMZ,SAAS,CAAC,OAAD,CAFf;AAAA,WAGasB,eAHb;AAAA,WAIkB,MAAMvB,EAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGsB,UAPH,CAlBF,EA2BE;AAAA,WAEMrB,SAAS,CAAC,OAAD,CAFf;AAAA,WAGaiB,KAAK,CAACQ,uBAHnB;AAAA,WAIkB,MAAM1B,EAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOG2B,QAPH,CA3BF,EAoCGb,YAAY,IACX;AAAA,WAKsBL,WAAW,GAAG,QAAH,GAAc,KAL/C;AAAA,YAMkB,IAAIT,EANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAC,iEADP;AAEE,IAAA,WAAW,EAAES,WAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAVF,EAgBE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAEmB,gBAFX;AAGE,IAAA,WAAW,EAAEnB,WAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAhBF,CArCJ,CADF,CADF;AAmED,CA9IqB,CAAtB;;;;;;;AAgJA,SAASyB,YAAT,CAAsB;AAAEzB,EAAAA,WAAF;AAAe,KAAG0B;AAAlB,CAAtB,EAAiD;AAC/C,SACE,qDAIMA,KAJN;AAAA,YAEa1B,WAAW,GAAG,MAAH,GAAa,gBAAe,IAAIT,EAAG,WAF3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAQD;;AAED,eAAeO,aAAf","sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { Button, GU, textStyle, useTheme } from '@aragon/ui'\nimport { useWallet } from '../providers/Wallet'\nimport { signMessage } from '../lib/web3-utils'\nimport { dayjs } from '../utils/date-utils'\n\nimport signRequestSuccessIllustration from '../../src/assets/signRequestSuccess.svg'\nimport signRequestFailIllustration from '../../src/assets/signRequestFail.svg'\nimport signRequestLoading from '../../src/assets/signRequestLoading.gif'\n\nconst SignerRequest = React.memo(function SignerRequest({\n  compactMode,\n  mode,\n  onSignSuccess,\n  text,\n  title,\n}) {\n  const [signingError, setSigningError] = useState(false)\n\n  const successMode = mode === 'success'\n\n  const wallet = useWallet()\n\n  const theme = useTheme()\n\n  const illustration = useMemo(() => {\n    if (signingError) {\n      return signRequestFailIllustration\n    }\n    if (successMode) {\n      return signRequestSuccessIllustration\n    }\n    return signRequestLoading\n  }, [signingError, successMode])\n\n  const { statusText, statusTextColor } = useMemo(() => {\n    if (signingError) {\n      return {\n        statusText: 'Signature failed',\n        statusTextColor: theme.negative,\n      }\n    }\n    if (successMode) {\n      return {\n        statusText: 'Signature confirmed',\n        statusTextColor: theme.positive,\n      }\n    }\n    return {\n      statusText: 'Waiting for signatureâ€¦',\n      statusTextColor: theme.surfaceContentSecondary,\n    }\n  }, [signingError, successMode, theme])\n\n  const infoText = useMemo(() => {\n    if (signingError) {\n      return 'A error occurred when signing the message.'\n    }\n    return text\n  }, [signingError, text])\n\n  const requestSignature = useCallback(async () => {\n    if (!wallet) {\n      return\n    }\n    const now = dayjs.utc().toString()\n    const { signHash, error } = await signMessage(wallet, now)\n\n    if (error) {\n      setSigningError(true)\n      return\n    }\n\n    onSignSuccess(signHash, now)\n  }, [onSignSuccess, wallet])\n\n  /**  We only need to execute it when the component is rendered but if we need to retry the action we\n   should call to the requestSignature callback */\n  useEffect(() => {\n    if (successMode) {\n      return\n    }\n    requestSignature()\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      <div\n        css={`\n          display: flex;\n          flex-direction: column;\n          text-align: center;\n          align-items: center;\n        `}\n      >\n        <img src={illustration} height={140} width={140} />\n        <h3\n          css={`\n            ${textStyle('title2')};\n            margin-top: ${4 * GU}px;\n          `}\n        >\n          {title}\n        </h3>\n\n        <span\n          css={`\n            ${textStyle('body2')};\n            color: ${statusTextColor};\n            margin-top: ${1.5 * GU}px;\n          `}\n        >\n          {statusText}\n        </span>\n        <span\n          css={`\n            ${textStyle('body2')};\n            color: ${theme.surfaceContentSecondary};\n            margin-top: ${1.5 * GU}px;\n          `}\n        >\n          {infoText}\n        </span>\n        {signingError && (\n          <div\n            css={`\n              display: flex;\n              justify-content: space-between;\n              width: 100%;\n              flex-direction: ${compactMode ? 'column' : 'row'};\n              margin-top: ${3 * GU}px;\n            `}\n          >\n            {/* TODO - Update the link once https://github.com/aragon/help/issues/31 is resolved */}\n            <ActionButton\n              href=\"https://help.aragon.org/article/27-general-troubleshooting-tips\"\n              compactMode={compactMode}\n            >\n              Troubleshooting\n            </ActionButton>\n            <ActionButton\n              mode=\"strong\"\n              onClick={requestSignature}\n              compactMode={compactMode}\n            >\n              Repeat signature\n            </ActionButton>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n})\n\nfunction ActionButton({ compactMode, ...props }) {\n  return (\n    <Button\n      css={`\n        width: ${compactMode ? '100%' : `calc((100% - ${2 * GU}px) /  2)`};\n      `}\n      {...props}\n    />\n  )\n}\n\nexport default SignerRequest\n"]},"metadata":{},"sourceType":"module"}