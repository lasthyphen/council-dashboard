{"ast":null,"code":"function h() {\n  return (h = Object.assign || function (a) {\n    var b, c, d;\n\n    for (b = 1; b < arguments.length; b++) {\n      c = arguments[b];\n\n      for (d in c) {\n        Object.prototype.hasOwnProperty.call(c, d) && (a[d] = c[d]);\n      }\n    }\n\n    return a;\n  }).apply(this, arguments);\n}\n\nfunction l(a) {\n  return \"string\" == typeof a ? new GraphQLError(a) : \"object\" == typeof a && a.message ? new GraphQLError(a.message, a.nodes, a.source, a.positions, a.path, a, a.extensions || {}) : a;\n}\n\nfunction n() {\n  return this.message;\n}\n\nfunction u(a) {\n  q.clear();\n  return function t(a) {\n    var b, c, d, e, f, g;\n\n    if (null === a || q.has(a)) {\n      return \"null\";\n    }\n\n    if (\"object\" != typeof a) {\n      return JSON.stringify(a) || \"\";\n    }\n\n    if (a.toJSON) {\n      return t(a.toJSON());\n    }\n\n    if (Array.isArray(a)) {\n      for (b = \"[\", c = 0, d = a.length; c < d; c++) {\n        0 < c && (b += \",\");\n        b += 0 < (e = t(a[c])).length ? e : \"null\";\n      }\n\n      return b + \"]\";\n    }\n\n    if (!(b = Object.keys(a).sort()).length && a.constructor && a.constructor !== Object) {\n      return b = r.get(a) || Math.random().toString(36).slice(2), r.set(a, b), '{\"__key\":\"' + b + '\"}';\n    }\n\n    q.add(a);\n    c = \"{\";\n    d = 0;\n\n    for (e = b.length; d < e; d++) {\n      (g = t(a[f = b[d]])) && (1 < c.length && (c += \",\"), c += t(f) + \":\" + g);\n    }\n\n    q.delete(a);\n    return c + \"}\";\n  }(a);\n}\n\nfunction v(a, b, c) {\n  return {\n    operation: a,\n    data: b.data,\n    error: Array.isArray(b.errors) ? new p({\n      graphQLErrors: b.errors,\n      response: c\n    }) : void 0,\n    extensions: \"object\" == typeof b.extensions && b.extensions || void 0\n  };\n}\n\nfunction w(a, b, c) {\n  return {\n    operation: a,\n    data: void 0,\n    error: new p({\n      networkError: b,\n      response: c\n    }),\n    extensions: void 0\n  };\n}\n\nfunction makeFetchBody(a) {\n  var c,\n      d,\n      e,\n      f,\n      b = print(a.query);\n\n  a: {\n    for (d = 0, e = (c = a.query).definitions.length; d < e; d++) {\n      if ((f = c.definitions[d]).kind === Kind.OPERATION_DEFINITION && f.name) {\n        c = f.name.value;\n        break a;\n      }\n    }\n\n    c = void 0;\n  }\n\n  return {\n    query: b,\n    operationName: c,\n    variables: a.variables || void 0,\n    extensions: void 0\n  };\n}\n\nfunction makeFetchURL(a, b) {\n  var c = a.context.url;\n\n  if (\"query\" !== a.operationName || !a.context.preferGetMethod || !b) {\n    return c;\n  }\n\n  a = [];\n  b.operationName && a.push(\"operationName=\" + encodeURIComponent(b.operationName));\n  b.query && a.push(\"query=\" + encodeURIComponent(b.query.replace(/([\\s,]|#[^\\n\\r]+)+/g, \" \").trim()));\n  b.variables && a.push(\"variables=\" + encodeURIComponent(u(b.variables)));\n  b.extensions && a.push(\"extensions=\" + encodeURIComponent(u(b.extensions)));\n  return c + \"?\" + a.join(\"&\");\n}\n\nfunction makeFetchOptions(a, b) {\n  var c = \"query\" === a.operationName && !!a.context.preferGetMethod;\n  return h({}, a = \"function\" == typeof a.context.fetchOptions ? a.context.fetchOptions() : a.context.fetchOptions || {}, {\n    body: !c && b ? JSON.stringify(b) : void 0,\n    method: c ? \"GET\" : \"POST\",\n    headers: h({}, {\n      \"content-type\": \"application/json\"\n    }, a.headers)\n  });\n}\n\nfunction makeFetchSource(a, b, c) {\n  return make(function (d) {\n    var e = d.next,\n        f = d.complete,\n        g = \"undefined\" != typeof AbortController ? new AbortController() : null,\n        m = !1;\n    Promise.resolve().then(function () {\n      if (!m) {\n        return g && (c.signal = g.signal), function x(a, b, c) {\n          var e,\n              d = !1;\n          return (a.context.fetch || fetch)(b, c).then(function (a) {\n            e = a;\n            d = 200 > a.status || a.status >= (\"manual\" === c.redirect ? 400 : 300);\n            return a.json();\n          }).then(function (b) {\n            if (!(\"data\" in b) && !(\"errors\" in b)) {\n              throw Error(\"No Content\");\n            }\n\n            return v(a, b, e);\n          }).catch(function (b) {\n            if (\"AbortError\" !== b.name) {\n              return w(a, d ? Error(e.statusText) : b, e);\n            }\n          });\n        }(a, b, c);\n      }\n    }).then(function (a) {\n      m || (m = !0, a && e(a), f());\n    });\n    return function () {\n      m = !0;\n      g && g.abort();\n    };\n  });\n}\n\nimport { Kind } from \"graphql/language/kinds\";\nimport { print } from \"graphql/language/printer\";\nimport { GraphQLError } from \"graphql/error/GraphQLError\";\nimport { make } from \"wonka\";\n\nvar p = function (a) {\n  function b(b) {\n    var f,\n        c = b.networkError,\n        e = b.response;\n\n    f = function k(a, b) {\n      var d = \"\";\n\n      if (void 0 !== a) {\n        return d = \"[Network] \" + a.message;\n      }\n\n      void 0 !== b && b.forEach(function c(a) {\n        d += \"[GraphQL] \" + a.message + \"\\n\";\n      });\n      return d.trim();\n    }(c, b = (b.graphQLErrors || []).map(l));\n\n    a.call(this, f);\n    this.name = \"CombinedError\";\n    this.message = f;\n    this.graphQLErrors = b;\n    this.networkError = c;\n    this.response = e;\n  }\n\n  a && (b.__proto__ = a);\n  (b.prototype = Object.create(a && a.prototype)).constructor = b;\n  b.prototype.toString = n;\n  return b;\n}(Error),\n    q = new Set(),\n    r = new WeakMap();\n\nexport { p as C, h as _, w as a, makeFetchBody as b, makeFetchURL as c, makeFetchOptions as d, makeFetchSource as e, v as m, u as s };","map":null,"metadata":{},"sourceType":"module"}