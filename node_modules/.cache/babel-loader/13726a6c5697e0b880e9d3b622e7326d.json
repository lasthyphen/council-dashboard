{"ast":null,"code":"import _slicedToArray from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useCallback,useEffect,useMemo,useRef,useState}from'react';import{captureException}from'@sentry/browser';// hooks\nimport{useCourtConfig}from'../providers/CourtConfig';import{useActivity}from'../providers/ActivityProvider';import{useRequestQueue}from'../providers/RequestQueue';import{useRequestProcessor}from'./useRequestProcessor';import{useContract,useContractReadOnly}from'../web3-contracts';// services\nimport{requestAutoReveal as requestAutoRevealApi}from'../services/autoReveal';// utils\nimport radspec from'../radspec';import{retryMax}from'../utils/retry-max';import actions from'../actions/court-action-types';import{getKnownToken}from'../utils/known-tokens';import{getModuleAddress}from'../utils/court-utils';import{bigNum,formatUnits}from'../lib/math-utils';import{getFunctionSignature}from'../lib/web3-utils';import{CourtModuleType}from'../types/court-module-types';import{networkReserveAddress}from'../networks';import{getVoteId,hashPassword,hashVote,saveCodeInLocalStorage}from'../utils/crvoting-utils';// abis\nimport aragonCourtAbi from'../abi/AragonCourt.json';import courtSubscriptionsAbi from'../abi/CourtSubscriptions.json';import courtTreasuryAbi from'../abi/CourtTreasury.json';import disputeManagerAbi from'../abi/DisputeManager.json';import jurorRegistryAbi from'../abi/JurorRegistry.json';import tokenAbi from'../abi/ERC20.json';import votingAbi from'../abi/CRVoting.json';var GAS_LIMIT=1200000;var ANJ_ACTIVATE_GAS_LIMIT=500000;var ANJ_ACTIONS_GAS_LIMIT=325000;var ACTIVATE_SELECTOR=getFunctionSignature('activate(uint256)');// ANJ contract\nfunction useANJTokenContract(){var _useCourtConfig=useCourtConfig(),anjToken=_useCourtConfig.anjToken;var anjTokenAddress=anjToken?anjToken.id:null;return useContract(anjTokenAddress,tokenAbi);}// Fee token contract\nfunction useFeeTokenContract(){var _useCourtConfig2=useCourtConfig(),feeToken=_useCourtConfig2.feeToken;var feeTokenAddress=feeToken?feeToken.id:null;return useContract(feeTokenAddress,tokenAbi);}// Court contracts\nfunction useCourtContract(moduleType,abi){var _ref=useCourtConfig()||{},id=_ref.id,modules=_ref.modules;var contractAddress;if(moduleType===CourtModuleType.AragonCourt){contractAddress=id;}else{contractAddress=getModuleAddress(modules,moduleType);}return useContract(contractAddress,abi);}/**\n * All ANJ interactions\n * @returns {Object} all available functions around ANJ balances\n */export function useANJActions(){var processRequests=useRequestProcessor();var jurorRegistryContract=useCourtContract(CourtModuleType.JurorsRegistry,jurorRegistryAbi);var anjTokenContract=useANJTokenContract();// activate ANJ directly from available balance\nvar activateANJ=useCallback(function(amount){var formattedAmount=formatUnits(amount);return processRequests([{action:function action(){return jurorRegistryContract.activate(amount,{gasLimit:ANJ_ACTIVATE_GAS_LIMIT});},description:radspec[actions.ACTIVATE_ANJ]({amount:formattedAmount}),type:actions.ACTIVATE_ANJ}]);},[jurorRegistryContract,processRequests]);var deactivateANJ=useCallback(function(amount){var formattedAmount=formatUnits(amount);return processRequests([{action:function action(){return jurorRegistryContract.deactivate(amount,{gasLimit:ANJ_ACTIONS_GAS_LIMIT});},description:radspec[actions.DEACTIVATE_ANJ]({amount:formattedAmount}),type:actions.DEACTIVATE_ANJ}]);},[jurorRegistryContract,processRequests]);// approve, stake and activate ANJ\nvar stakeActivateANJ=useCallback(function(amount){var formattedAmount=formatUnits(amount);return processRequests([{action:function action(){return anjTokenContract.approveAndCall(jurorRegistryContract.address,amount,ACTIVATE_SELECTOR,{gasLimit:ANJ_ACTIVATE_GAS_LIMIT});},description:radspec[actions.ACTIVATE_ANJ]({amount:formattedAmount}),type:actions.ACTIVATE_ANJ}]);},[anjTokenContract,jurorRegistryContract,processRequests]);var withdrawANJ=useCallback(function(amount){var formattedAmount=formatUnits(amount);return processRequests([{action:function action(){return jurorRegistryContract.unstake(amount,'0x',{gasLimit:ANJ_ACTIONS_GAS_LIMIT});},description:radspec[actions.WITHDRAW_ANJ]({amount:formattedAmount}),type:actions.WITHDRAW_ANJ}]);},[jurorRegistryContract,processRequests]);return{activateANJ:activateANJ,deactivateANJ:deactivateANJ,stakeActivateANJ:stakeActivateANJ,withdrawANJ:withdrawANJ};}/**\n * All dispute interactions\n * @returns {Object} all available functions around a dispute\n */export function useDisputeActions(){var processRequests=useRequestProcessor();var disputeManagerContract=useCourtContract(CourtModuleType.DisputeManager,disputeManagerAbi);var votingContract=useCourtContract(CourtModuleType.Voting,votingAbi);var aragonCourtContract=useCourtContract(CourtModuleType.AragonCourt,aragonCourtAbi);var feeTokenContract=useFeeTokenContract();// Draft jurors\nvar draft=useCallback(function(disputeId){return processRequests([{action:function action(){return disputeManagerContract.draft(disputeId,{gasLimit:GAS_LIMIT});},description:radspec[actions.DRAFT_JURY]({disputeId:disputeId}),type:actions.DRAFT_JURY}]);},[disputeManagerContract,processRequests]);// Request auto reveal\nvar autoReveal=useCallback(function(account,disputeId,roundId,outcome,password){return{action:function(){var _action=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",requestAutoRevealApi(account,disputeId,roundId,outcome,password));case 1:case\"end\":return _context.stop();}}},_callee);}));function action(){return _action.apply(this,arguments);}return action;}(),isTx:false,description:'Enable auto-reveal service',onError:'Failed to enable auto-reveal service',onSuccess:'Auto-reveal service enabled!'};},[]);var requestAutoReveal=useCallback(function(){return processRequests([autoReveal.apply(void 0,arguments)]);},[autoReveal,processRequests]);// Commit\nvar commit=useCallback(function(account,disputeId,roundId,outcome,password,revealServiceEnabled){var voteId=getVoteId(disputeId,roundId);var commitment=hashVote(outcome,password);var requestQueue=[{action:function action(){return votingContract.commit(voteId,commitment);},description:radspec[actions.COMMIT_VOTE]({disputeId:disputeId,roundId:roundId,outcome:outcome}),type:actions.COMMIT_VOTE,ensureConfirmation:true,// Callback function to run after main tx\ncallback:function callback(){return saveCodeInLocalStorage(account,disputeId,password);}}];// If juror opted-in for the reveal service we'll send the commitment and password to the court-server\nif(revealServiceEnabled){requestQueue.push(autoReveal(account,disputeId,roundId,outcome,password));}return processRequests(requestQueue);},[autoReveal,processRequests,votingContract]);// Reveal\nvar reveal=useCallback(function(disputeId,roundId,voter,outcome,password){var voteId=getVoteId(disputeId,roundId);return processRequests([{action:function action(){return votingContract.reveal(voteId,voter,outcome,hashPassword(password));},description:radspec[actions.REVEAL_VOTE]({disputeId:disputeId,roundId:roundId}),type:actions.REVEAL_VOTE}]);},[processRequests,votingContract]);// Leak\nvar leak=useCallback(function(voteId,voter,outcome,salt){return processRequests([{action:function action(){return votingContract.leak(voteId,voter,outcome,salt);},description:radspec[actions.LEAK_VOTE]({voteId:voteId,voter:voter}),type:actions.LEAK_VOTE}]);},[processRequests,votingContract]);var approveFeeDeposit=useCallback(function(value){return{action:function action(){return feeTokenContract.approve(disputeManagerContract.address,value);},description:radspec[actions.APPROVE_FEE_DEPOSIT]({amount:formatUnits(value)}),type:actions.APPROVE_FEE_DEPOSIT};},[disputeManagerContract,feeTokenContract]);// Appeal round of dispute\nvar appeal=useCallback(function(disputeId,roundId,ruling){return{action:function action(){return disputeManagerContract.createAppeal(disputeId,roundId,ruling,{gasLimit:GAS_LIMIT});},description:radspec[actions.APPEAL_RULING]({disputeId:disputeId,roundId:roundId,ruling:ruling}),type:actions.APPEAL_RULING};},[disputeManagerContract]);// Confirm appeal round of dispute\nvar confirmAppeal=useCallback(function(disputeId,roundId,ruling){return{action:function action(){return disputeManagerContract.confirmAppeal(disputeId,roundId,ruling,{gasLimit:GAS_LIMIT});},description:radspec[actions.CONFIRM_APPEAL]({disputeId:disputeId,roundId:roundId,ruling:ruling}),type:actions.CONFIRM_APPEAL};},[disputeManagerContract]);// General function that will appeal or confirm appeal a given round on a given dispute\nvar appealRound=useCallback(function(disputeId,roundId,ruling,requiredDeposit,allowance,confirm){var requestQueue=[];// Check if requires pre-transactions\nif(allowance.lt(requiredDeposit)){// Some ERC20s don't allow setting a new allowance if the current allowance is positive\nif(!allowance.eq(0)){// Reset allowance\nrequestQueue.push(_objectSpread({},approveFeeDeposit(0),{ensureConfirmation:true}));}// Approve fee deposit for appealing\nrequestQueue.push(_objectSpread({},approveFeeDeposit(requiredDeposit),{ensureConfirmation:true}));}var request=confirm?confirmAppeal:appeal;requestQueue.push(request(disputeId,roundId,ruling));return processRequests(requestQueue);},[appeal,approveFeeDeposit,confirmAppeal,processRequests]);var executeRuling=useCallback(function(disputeId){return processRequests([{action:function action(){return aragonCourtContract.executeRuling(disputeId,{gasLimit:GAS_LIMIT});},description:radspec[actions.EXECUTE_RULING]({disputeId:disputeId}),type:actions.EXECUTE_RULING}]);},[aragonCourtContract,processRequests]);return{appealRound:appealRound,requestAutoReveal:requestAutoReveal,commit:commit,draft:draft,executeRuling:executeRuling,leak:leak,reveal:reveal};}export function useHeartbeat(){var _useActivity=useActivity(),addActivity=_useActivity.addActivity;var _useRequestQueue=useRequestQueue(),addRequests=_useRequestQueue.addRequests;var aragonCourtContract=useCourtContract(CourtModuleType.AragonCourt,aragonCourtAbi);var heartbeatRequest=useCallback(function(transitions){var ensureConfirmation=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var description=radspec[actions.HEARTBEAT]({transitions:transitions});return{intent:function intent(){return addActivity(aragonCourtContract.heartbeat(transitions),actions.HEARTBEAT,description);},description:description,isTx:true,ensureConfirmation:ensureConfirmation};},[addActivity,aragonCourtContract]);var heartbeat=useCallback(function(transitions){return addRequests(heartbeatRequest(transitions));},[addRequests,heartbeatRequest]);return{heartbeat:heartbeat,heartbeatRequest:heartbeatRequest};}export function useRewardActions(){var processRequests=useRequestProcessor();var _useCourtSubscription=useCourtSubscriptionActions(),claimFees=_useCourtSubscription.claimFees;var disputeManagerContract=useCourtContract(CourtModuleType.DisputeManager,disputeManagerAbi);var treasuryContract=useCourtContract(CourtModuleType.Treasury,courtTreasuryAbi);var settleReward=useCallback(function(disputeId,roundId,juror){return{action:function action(){return disputeManagerContract.settleReward(disputeId,roundId,juror,{gasLimit:GAS_LIMIT});},description:radspec[actions.SETTLE_REWARD]({roundId:roundId,disputeId:disputeId}),type:actions.SETTLE_REWARD};},[disputeManagerContract]);var settleAppealDeposit=useCallback(function(disputeId,roundId){return{action:function action(){return disputeManagerContract.settleAppealDeposit(disputeId,roundId,{gasLimit:GAS_LIMIT});},description:radspec[actions.SETTLE_APPEAL_DEPOSIT]({roundId:roundId,disputeId:disputeId}),type:actions.SETTLE_APPEAL_DEPOSIT};},[disputeManagerContract]);var withdraw=useCallback(function(token,to,amount){return{action:function action(){return treasuryContract.withdraw(token,to,amount,{gasLimit:ANJ_ACTIONS_GAS_LIMIT});},description:radspec[actions.CLAIM_REWARDS]({amount:formatUnits(amount)}),type:actions.CLAIM_REWARDS};},[treasuryContract]);var claimRewards=useCallback(function(account,arbitrableFees,appealFees,treasuryFees,subscriptionFees,feeTokenAddress){var requestQueue=[];// Claim all arbitrable fee rewards\nvar _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=arbitrableFees[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var arbitrableFee=_step.value;var disputeId=arbitrableFee.disputeId,rounds=arbitrableFee.rounds;var _iteratorNormalCompletion4=true;var _didIteratorError4=false;var _iteratorError4=undefined;try{for(var _iterator4=rounds[Symbol.iterator](),_step4;!(_iteratorNormalCompletion4=(_step4=_iterator4.next()).done);_iteratorNormalCompletion4=true){var roundId=_step4.value;requestQueue.push(settleReward(disputeId,roundId,account));}}catch(err){_didIteratorError4=true;_iteratorError4=err;}finally{try{if(!_iteratorNormalCompletion4&&_iterator4.return!=null){_iterator4.return();}}finally{if(_didIteratorError4){throw _iteratorError4;}}}}// Claim all appeal fee rewards\n}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return!=null){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=appealFees[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var appealFee=_step2.value;var _disputeId=appealFee.disputeId,_rounds=appealFee.rounds;var _iteratorNormalCompletion5=true;var _didIteratorError5=false;var _iteratorError5=undefined;try{for(var _iterator5=_rounds[Symbol.iterator](),_step5;!(_iteratorNormalCompletion5=(_step5=_iterator5.next()).done);_iteratorNormalCompletion5=true){var _roundId=_step5.value;requestQueue.push(settleAppealDeposit(_disputeId,_roundId));}}catch(err){_didIteratorError5=true;_iteratorError5=err;}finally{try{if(!_iteratorNormalCompletion5&&_iterator5.return!=null){_iterator5.return();}}finally{if(_didIteratorError5){throw _iteratorError5;}}}}// If we have settlements to do, then we'll make sure that the last\n// settlement is confirmed before withdrawing total fees from the treasury\n}catch(err){_didIteratorError2=true;_iteratorError2=err;}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return!=null){_iterator2.return();}}finally{if(_didIteratorError2){throw _iteratorError2;}}}if(requestQueue.length>0){var lastSettlement=requestQueue.pop();requestQueue.push(_objectSpread({},lastSettlement,{ensureConfirmation:true}));}// Withdraw funds from treasury\nif(treasuryFees.gt(0)){requestQueue.push(withdraw(feeTokenAddress,account,treasuryFees));}// Claim subscription fees\nvar _iteratorNormalCompletion3=true;var _didIteratorError3=false;var _iteratorError3=undefined;try{for(var _iterator3=subscriptionFees[Symbol.iterator](),_step3;!(_iteratorNormalCompletion3=(_step3=_iterator3.next()).done);_iteratorNormalCompletion3=true){var subscriptionFee=_step3.value;requestQueue.push(claimFees(subscriptionFee.periodId));}}catch(err){_didIteratorError3=true;_iteratorError3=err;}finally{try{if(!_iteratorNormalCompletion3&&_iterator3.return!=null){_iterator3.return();}}finally{if(_didIteratorError3){throw _iteratorError3;}}}return processRequests(requestQueue);},[claimFees,processRequests,settleAppealDeposit,settleReward,withdraw]);return{claimRewards:claimRewards};}export function useCourtSubscriptionActions(){var courtSubscriptionsContract=useCourtContract(CourtModuleType.Subscriptions,courtSubscriptionsAbi);var claimFees=useCallback(function(periodId){return{action:function action(){return courtSubscriptionsContract.claimFees(periodId);},description:radspec[actions.CLAIM_SUBSCRIPTION_FEES]({periodId:periodId}),type:actions.CLAIM_SUBSCRIPTION_FEES};},[courtSubscriptionsContract]);var getJurorShare=useCallback(function(juror,periodId){return courtSubscriptionsContract.getJurorShare(juror,periodId);},[courtSubscriptionsContract]);var getters=useMemo(function(){return courtSubscriptionsContract?{getJurorShare:getJurorShare}:null;},[courtSubscriptionsContract,getJurorShare]);return{claimFees:claimFees,getters:getters};}/**\n *\n * @param {string} disputeId id of the dispute\n * @param {string} roundId id of the round\n * @returns {Object} appeal deposit and confirm appeal deposit amounts\n */export function useAppealDeposits(disputeId,roundId){var _useState=useState({amounts:[bigNum(0),bigNum(0)],error:false}),_useState2=_slicedToArray(_useState,2),appealDeposits=_useState2[0],setAppealDeposits=_useState2[1];var disputeManagerContract=useCourtContract(CourtModuleType.DisputeManager,disputeManagerAbi);useEffect(function(){var cancelled=false;var fetchNextRoundDetails=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(disputeManagerContract){_context2.next=2;break;}return _context2.abrupt(\"return\");case 2:retryMax(function(){return disputeManagerContract.getNextRoundDetails(disputeId,roundId).then(function(nextRound){var appealDeposit=nextRound[6];var confirmAppealDeposit=nextRound[7];if(!cancelled){setAppealDeposits({amounts:[appealDeposit,confirmAppealDeposit],error:false});}}).catch(function(err){captureException(err);if(!cancelled){setAppealDeposits(function(appealDeposits){return _objectSpread({},appealDeposits,{error:true});});}});});case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function fetchNextRoundDetails(){return _ref2.apply(this,arguments);};}();fetchNextRoundDetails();return function(){cancelled=true;};},[disputeId,disputeManagerContract,roundId]);return[appealDeposits.amounts,appealDeposits.error];}export function useFeeBalanceOf(account){var _useState3=useState({amount:bigNum(0),error:false}),_useState4=_slicedToArray(_useState3,2),feeBalance=_useState4[0],setFeeBalance=_useState4[1];var feeTokenContract=useFeeTokenContract();useEffect(function(){var cancelled=false;var getFeeBalance=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(feeTokenContract){_context3.next=2;break;}return _context3.abrupt(\"return\");case 2:retryMax(function(){return feeTokenContract.balanceOf(account);}).then(function(balance){if(!cancelled){setFeeBalance({amount:balance,error:false});}}).catch(function(err){captureException(err);if(!cancelled){setFeeBalance(function(feeBalance){return _objectSpread({},feeBalance,{error:true});});}});case 3:case\"end\":return _context3.stop();}}},_callee3);}));return function getFeeBalance(){return _ref3.apply(this,arguments);};}();getFeeBalance();return function(){cancelled=true;};},[account,feeTokenContract]);return[feeBalance.amount,feeBalance.error];}export function useAppealFeeAllowance(owner){var _useState5=useState({amount:bigNum(0),error:false}),_useState6=_slicedToArray(_useState5,2),allowance=_useState6[0],setAllowance=_useState6[1];var courtConfig=useCourtConfig();var disputeManagerAddress=getModuleAddress(courtConfig.modules,CourtModuleType.DisputeManager);var feeTokenContract=useFeeTokenContract();useEffect(function(){var cancelled=false;var getFeeAllowance=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(feeTokenContract){_context4.next=2;break;}return _context4.abrupt(\"return\");case 2:retryMax(function(){return feeTokenContract.allowance(owner,disputeManagerAddress);}).then(function(allowance){if(!cancelled){setAllowance({amount:allowance,error:false});}}).catch(function(err){captureException(err);if(!cancelled){setAllowance(function(allowance){return _objectSpread({},allowance,{error:true});});}});case 3:case\"end\":return _context4.stop();}}},_callee4);}));return function getFeeAllowance(){return _ref4.apply(this,arguments);};}();getFeeAllowance();return function(){cancelled=true;};},[disputeManagerAddress,feeTokenContract,owner]);return[allowance.amount,allowance.error];}export function useActiveBalanceOfAt(juror,termId){var jurorRegistryContract=useCourtContract(CourtModuleType.JurorsRegistry,jurorRegistryAbi);var _useState7=useState({amount:bigNum(-1),error:false}),_useState8=_slicedToArray(_useState7,2),activeBalance=_useState8[0],setActiveBalance=_useState8[1];useEffect(function(){var cancelled=false;var getActiveBalanceOfAt=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:if(jurorRegistryContract){_context5.next=2;break;}return _context5.abrupt(\"return\");case 2:retryMax(function(){return jurorRegistryContract.activeBalanceOfAt(juror,termId);}).then(function(balance){if(!cancelled){setActiveBalance({amount:balance,error:false});}}).catch(function(err){captureException(err);if(!cancelled){setActiveBalance(function(balance){return _objectSpread({},balance,{error:true});});}});case 3:case\"end\":return _context5.stop();}}},_callee5);}));return function getActiveBalanceOfAt(){return _ref5.apply(this,arguments);};}();getActiveBalanceOfAt();return function(){cancelled=true;};},[juror,jurorRegistryContract,termId]);return[activeBalance.amount,activeBalance.error];}export function useTotalANTStakedPolling(){var timeout=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1000;var _useState9=useState(bigNum(-1)),_useState10=_slicedToArray(_useState9,2),totalANTStaked=_useState10[0],setTotalANTStaked=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),error=_useState12[0],setError=_useState12[1];var _ref6=getKnownToken('ANT')||{},antAddress=_ref6.address;var antContract=useContractReadOnly(antAddress,tokenAbi);// We are starting in 0 in order to immediately make the fetch call\nvar controlledTimeout=useRef(0);useEffect(function(){var cancelled=false;var timeoutId;// This stat is only relevant and shown on mainnet\nif(!networkReserveAddress){return setError(true);}if(!antContract){return;}var fetchTotalANTBalance=function fetchTotalANTBalance(){timeoutId=setTimeout(function(){var vaultBalancePromise=antContract.balanceOf(networkReserveAddress);return vaultBalancePromise.then(function(antInVault){if(!cancelled){setTotalANTStaked(antInVault);}}).catch(function(err){console.error(\"Error fetching balance: \".concat(err,\" retrying...\"));setError(true);}).finally(function(){if(!cancelled){clearTimeout(timeoutId);controlledTimeout.current=timeout;fetchTotalANTBalance();}});},controlledTimeout.current);};fetchTotalANTBalance();return function(){cancelled=true;clearTimeout(timeoutId);};},[antContract,controlledTimeout,timeout]);return[totalANTStaked,error];}","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/hooks/useCourtContracts.js"],"names":["useCallback","useEffect","useMemo","useRef","useState","captureException","useCourtConfig","useActivity","useRequestQueue","useRequestProcessor","useContract","useContractReadOnly","requestAutoReveal","requestAutoRevealApi","radspec","retryMax","actions","getKnownToken","getModuleAddress","bigNum","formatUnits","getFunctionSignature","CourtModuleType","networkReserveAddress","getVoteId","hashPassword","hashVote","saveCodeInLocalStorage","aragonCourtAbi","courtSubscriptionsAbi","courtTreasuryAbi","disputeManagerAbi","jurorRegistryAbi","tokenAbi","votingAbi","GAS_LIMIT","ANJ_ACTIVATE_GAS_LIMIT","ANJ_ACTIONS_GAS_LIMIT","ACTIVATE_SELECTOR","useANJTokenContract","anjToken","anjTokenAddress","id","useFeeTokenContract","feeToken","feeTokenAddress","useCourtContract","moduleType","abi","modules","contractAddress","AragonCourt","useANJActions","processRequests","jurorRegistryContract","JurorsRegistry","anjTokenContract","activateANJ","amount","formattedAmount","action","activate","gasLimit","description","ACTIVATE_ANJ","type","deactivateANJ","deactivate","DEACTIVATE_ANJ","stakeActivateANJ","approveAndCall","address","withdrawANJ","unstake","WITHDRAW_ANJ","useDisputeActions","disputeManagerContract","DisputeManager","votingContract","Voting","aragonCourtContract","feeTokenContract","draft","disputeId","DRAFT_JURY","autoReveal","account","roundId","outcome","password","isTx","onError","onSuccess","commit","revealServiceEnabled","voteId","commitment","requestQueue","COMMIT_VOTE","ensureConfirmation","callback","push","reveal","voter","REVEAL_VOTE","leak","salt","LEAK_VOTE","approveFeeDeposit","value","approve","APPROVE_FEE_DEPOSIT","appeal","ruling","createAppeal","APPEAL_RULING","confirmAppeal","CONFIRM_APPEAL","appealRound","requiredDeposit","allowance","confirm","lt","eq","request","executeRuling","EXECUTE_RULING","useHeartbeat","addActivity","addRequests","heartbeatRequest","transitions","HEARTBEAT","intent","heartbeat","useRewardActions","useCourtSubscriptionActions","claimFees","treasuryContract","Treasury","settleReward","juror","SETTLE_REWARD","settleAppealDeposit","SETTLE_APPEAL_DEPOSIT","withdraw","token","to","CLAIM_REWARDS","claimRewards","arbitrableFees","appealFees","treasuryFees","subscriptionFees","arbitrableFee","rounds","appealFee","length","lastSettlement","pop","gt","subscriptionFee","periodId","courtSubscriptionsContract","Subscriptions","CLAIM_SUBSCRIPTION_FEES","getJurorShare","getters","useAppealDeposits","amounts","error","appealDeposits","setAppealDeposits","cancelled","fetchNextRoundDetails","getNextRoundDetails","then","nextRound","appealDeposit","confirmAppealDeposit","catch","err","useFeeBalanceOf","feeBalance","setFeeBalance","getFeeBalance","balanceOf","balance","useAppealFeeAllowance","owner","setAllowance","courtConfig","disputeManagerAddress","getFeeAllowance","useActiveBalanceOfAt","termId","activeBalance","setActiveBalance","getActiveBalanceOfAt","activeBalanceOfAt","useTotalANTStakedPolling","timeout","totalANTStaked","setTotalANTStaked","setError","antAddress","antContract","controlledTimeout","timeoutId","fetchTotalANTBalance","setTimeout","vaultBalancePromise","antInVault","console","finally","clearTimeout","current"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { captureException } from '@sentry/browser'\n\n// hooks\nimport { useCourtConfig } from '../providers/CourtConfig'\nimport { useActivity } from '../providers/ActivityProvider'\nimport { useRequestQueue } from '../providers/RequestQueue'\nimport { useRequestProcessor } from './useRequestProcessor'\nimport { useContract, useContractReadOnly } from '../web3-contracts'\n\n// services\nimport { requestAutoReveal as requestAutoRevealApi } from '../services/autoReveal'\n\n// utils\nimport radspec from '../radspec'\nimport { retryMax } from '../utils/retry-max'\nimport actions from '../actions/court-action-types'\nimport { getKnownToken } from '../utils/known-tokens'\nimport { getModuleAddress } from '../utils/court-utils'\nimport { bigNum, formatUnits } from '../lib/math-utils'\nimport { getFunctionSignature } from '../lib/web3-utils'\nimport { CourtModuleType } from '../types/court-module-types'\nimport { networkReserveAddress } from '../networks'\nimport {\n  getVoteId,\n  hashPassword,\n  hashVote,\n  saveCodeInLocalStorage,\n} from '../utils/crvoting-utils'\n\n// abis\nimport aragonCourtAbi from '../abi/AragonCourt.json'\nimport courtSubscriptionsAbi from '../abi/CourtSubscriptions.json'\nimport courtTreasuryAbi from '../abi/CourtTreasury.json'\nimport disputeManagerAbi from '../abi/DisputeManager.json'\nimport jurorRegistryAbi from '../abi/JurorRegistry.json'\nimport tokenAbi from '../abi/ERC20.json'\nimport votingAbi from '../abi/CRVoting.json'\n\nconst GAS_LIMIT = 1200000\nconst ANJ_ACTIVATE_GAS_LIMIT = 500000\nconst ANJ_ACTIONS_GAS_LIMIT = 325000\nconst ACTIVATE_SELECTOR = getFunctionSignature('activate(uint256)')\n\n// ANJ contract\nfunction useANJTokenContract() {\n  const { anjToken } = useCourtConfig()\n\n  const anjTokenAddress = anjToken ? anjToken.id : null\n\n  return useContract(anjTokenAddress, tokenAbi)\n}\n\n// Fee token contract\nfunction useFeeTokenContract() {\n  const { feeToken } = useCourtConfig()\n\n  const feeTokenAddress = feeToken ? feeToken.id : null\n\n  return useContract(feeTokenAddress, tokenAbi)\n}\n\n// Court contracts\nfunction useCourtContract(moduleType, abi) {\n  const { id, modules } = useCourtConfig() || {}\n\n  let contractAddress\n  if (moduleType === CourtModuleType.AragonCourt) {\n    contractAddress = id\n  } else {\n    contractAddress = getModuleAddress(modules, moduleType)\n  }\n\n  return useContract(contractAddress, abi)\n}\n\n/**\n * All ANJ interactions\n * @returns {Object} all available functions around ANJ balances\n */\nexport function useANJActions() {\n  const processRequests = useRequestProcessor()\n  const jurorRegistryContract = useCourtContract(\n    CourtModuleType.JurorsRegistry,\n    jurorRegistryAbi\n  )\n  const anjTokenContract = useANJTokenContract()\n\n  // activate ANJ directly from available balance\n  const activateANJ = useCallback(\n    amount => {\n      const formattedAmount = formatUnits(amount)\n\n      return processRequests([\n        {\n          action: () =>\n            jurorRegistryContract.activate(amount, {\n              gasLimit: ANJ_ACTIVATE_GAS_LIMIT,\n            }),\n          description: radspec[actions.ACTIVATE_ANJ]({\n            amount: formattedAmount,\n          }),\n          type: actions.ACTIVATE_ANJ,\n        },\n      ])\n    },\n    [jurorRegistryContract, processRequests]\n  )\n\n  const deactivateANJ = useCallback(\n    amount => {\n      const formattedAmount = formatUnits(amount)\n\n      return processRequests([\n        {\n          action: () =>\n            jurorRegistryContract.deactivate(amount, {\n              gasLimit: ANJ_ACTIONS_GAS_LIMIT,\n            }),\n          description: radspec[actions.DEACTIVATE_ANJ]({\n            amount: formattedAmount,\n          }),\n          type: actions.DEACTIVATE_ANJ,\n        },\n      ])\n    },\n    [jurorRegistryContract, processRequests]\n  )\n\n  // approve, stake and activate ANJ\n  const stakeActivateANJ = useCallback(\n    amount => {\n      const formattedAmount = formatUnits(amount)\n\n      return processRequests([\n        {\n          action: () =>\n            anjTokenContract.approveAndCall(\n              jurorRegistryContract.address,\n              amount,\n              ACTIVATE_SELECTOR,\n              { gasLimit: ANJ_ACTIVATE_GAS_LIMIT }\n            ),\n          description: radspec[actions.ACTIVATE_ANJ]({\n            amount: formattedAmount,\n          }),\n          type: actions.ACTIVATE_ANJ,\n        },\n      ])\n    },\n    [anjTokenContract, jurorRegistryContract, processRequests]\n  )\n\n  const withdrawANJ = useCallback(\n    amount => {\n      const formattedAmount = formatUnits(amount)\n\n      return processRequests([\n        {\n          action: () =>\n            jurorRegistryContract.unstake(amount, '0x', {\n              gasLimit: ANJ_ACTIONS_GAS_LIMIT,\n            }),\n          description: radspec[actions.WITHDRAW_ANJ]({\n            amount: formattedAmount,\n          }),\n          type: actions.WITHDRAW_ANJ,\n        },\n      ])\n    },\n    [jurorRegistryContract, processRequests]\n  )\n\n  return { activateANJ, deactivateANJ, stakeActivateANJ, withdrawANJ }\n}\n\n/**\n * All dispute interactions\n * @returns {Object} all available functions around a dispute\n */\nexport function useDisputeActions() {\n  const processRequests = useRequestProcessor()\n  const disputeManagerContract = useCourtContract(\n    CourtModuleType.DisputeManager,\n    disputeManagerAbi\n  )\n  const votingContract = useCourtContract(CourtModuleType.Voting, votingAbi)\n\n  const aragonCourtContract = useCourtContract(\n    CourtModuleType.AragonCourt,\n    aragonCourtAbi\n  )\n\n  const feeTokenContract = useFeeTokenContract()\n\n  // Draft jurors\n  const draft = useCallback(\n    disputeId => {\n      return processRequests([\n        {\n          action: () =>\n            disputeManagerContract.draft(disputeId, {\n              gasLimit: GAS_LIMIT,\n            }),\n          description: radspec[actions.DRAFT_JURY]({ disputeId }),\n          type: actions.DRAFT_JURY,\n        },\n      ])\n    },\n    [disputeManagerContract, processRequests]\n  )\n\n  // Request auto reveal\n  const autoReveal = useCallback(\n    (account, disputeId, roundId, outcome, password) => {\n      return {\n        action: async () =>\n          requestAutoRevealApi(account, disputeId, roundId, outcome, password),\n        isTx: false,\n        description: 'Enable auto-reveal service',\n        onError: 'Failed to enable auto-reveal service',\n        onSuccess: 'Auto-reveal service enabled!',\n      }\n    },\n    []\n  )\n\n  const requestAutoReveal = useCallback(\n    (...params) => processRequests([autoReveal(...params)]),\n    [autoReveal, processRequests]\n  )\n\n  // Commit\n  const commit = useCallback(\n    (account, disputeId, roundId, outcome, password, revealServiceEnabled) => {\n      const voteId = getVoteId(disputeId, roundId)\n      const commitment = hashVote(outcome, password)\n\n      const requestQueue = [\n        {\n          action: () => votingContract.commit(voteId, commitment),\n          description: radspec[actions.COMMIT_VOTE]({\n            disputeId,\n            roundId,\n            outcome,\n          }),\n          type: actions.COMMIT_VOTE,\n          ensureConfirmation: true,\n          // Callback function to run after main tx\n          callback: () => saveCodeInLocalStorage(account, disputeId, password),\n        },\n      ]\n\n      // If juror opted-in for the reveal service we'll send the commitment and password to the court-server\n      if (revealServiceEnabled) {\n        requestQueue.push(\n          autoReveal(account, disputeId, roundId, outcome, password)\n        )\n      }\n\n      return processRequests(requestQueue)\n    },\n    [autoReveal, processRequests, votingContract]\n  )\n\n  // Reveal\n  const reveal = useCallback(\n    (disputeId, roundId, voter, outcome, password) => {\n      const voteId = getVoteId(disputeId, roundId)\n\n      return processRequests([\n        {\n          action: () =>\n            votingContract.reveal(\n              voteId,\n              voter,\n              outcome,\n              hashPassword(password)\n            ),\n          description: radspec[actions.REVEAL_VOTE]({\n            disputeId,\n            roundId,\n          }),\n          type: actions.REVEAL_VOTE,\n        },\n      ])\n    },\n    [processRequests, votingContract]\n  )\n\n  // Leak\n  const leak = useCallback(\n    (voteId, voter, outcome, salt) => {\n      return processRequests([\n        {\n          action: () => votingContract.leak(voteId, voter, outcome, salt),\n          description: radspec[actions.LEAK_VOTE]({ voteId, voter }),\n          type: actions.LEAK_VOTE,\n        },\n      ])\n    },\n    [processRequests, votingContract]\n  )\n\n  const approveFeeDeposit = useCallback(\n    value => {\n      return {\n        action: () =>\n          feeTokenContract.approve(disputeManagerContract.address, value),\n        description: radspec[actions.APPROVE_FEE_DEPOSIT]({\n          amount: formatUnits(value),\n        }),\n        type: actions.APPROVE_FEE_DEPOSIT,\n      }\n    },\n    [disputeManagerContract, feeTokenContract]\n  )\n\n  // Appeal round of dispute\n  const appeal = useCallback(\n    (disputeId, roundId, ruling) => {\n      return {\n        action: () =>\n          disputeManagerContract.createAppeal(disputeId, roundId, ruling, {\n            gasLimit: GAS_LIMIT,\n          }),\n        description: radspec[actions.APPEAL_RULING]({\n          disputeId,\n          roundId,\n          ruling,\n        }),\n        type: actions.APPEAL_RULING,\n      }\n    },\n    [disputeManagerContract]\n  )\n\n  // Confirm appeal round of dispute\n  const confirmAppeal = useCallback(\n    (disputeId, roundId, ruling) => {\n      return {\n        action: () =>\n          disputeManagerContract.confirmAppeal(disputeId, roundId, ruling, {\n            gasLimit: GAS_LIMIT,\n          }),\n        description: radspec[actions.CONFIRM_APPEAL]({\n          disputeId,\n          roundId,\n          ruling,\n        }),\n        type: actions.CONFIRM_APPEAL,\n      }\n    },\n    [disputeManagerContract]\n  )\n\n  // General function that will appeal or confirm appeal a given round on a given dispute\n  const appealRound = useCallback(\n    (disputeId, roundId, ruling, requiredDeposit, allowance, confirm) => {\n      const requestQueue = []\n\n      // Check if requires pre-transactions\n      if (allowance.lt(requiredDeposit)) {\n        // Some ERC20s don't allow setting a new allowance if the current allowance is positive\n        if (!allowance.eq(0)) {\n          // Reset allowance\n          requestQueue.push({\n            ...approveFeeDeposit(0),\n            ensureConfirmation: true,\n          })\n        }\n\n        // Approve fee deposit for appealing\n        requestQueue.push({\n          ...approveFeeDeposit(requiredDeposit),\n          ensureConfirmation: true,\n        })\n      }\n\n      const request = confirm ? confirmAppeal : appeal\n\n      requestQueue.push(request(disputeId, roundId, ruling))\n\n      return processRequests(requestQueue)\n    },\n    [appeal, approveFeeDeposit, confirmAppeal, processRequests]\n  )\n\n  const executeRuling = useCallback(\n    disputeId => {\n      return processRequests([\n        {\n          action: () =>\n            aragonCourtContract.executeRuling(disputeId, {\n              gasLimit: GAS_LIMIT,\n            }),\n          description: radspec[actions.EXECUTE_RULING]({ disputeId }),\n          type: actions.EXECUTE_RULING,\n        },\n      ])\n    },\n    [aragonCourtContract, processRequests]\n  )\n\n  return {\n    appealRound,\n    requestAutoReveal,\n    commit,\n    draft,\n    executeRuling,\n    leak,\n    reveal,\n  }\n}\n\nexport function useHeartbeat() {\n  const { addActivity } = useActivity()\n  const { addRequests } = useRequestQueue()\n  const aragonCourtContract = useCourtContract(\n    CourtModuleType.AragonCourt,\n    aragonCourtAbi\n  )\n\n  const heartbeatRequest = useCallback(\n    (transitions, ensureConfirmation = false) => {\n      const description = radspec[actions.HEARTBEAT]({ transitions })\n\n      return {\n        intent: () =>\n          addActivity(\n            aragonCourtContract.heartbeat(transitions),\n            actions.HEARTBEAT,\n            description\n          ),\n        description,\n        isTx: true,\n        ensureConfirmation,\n      }\n    },\n    [addActivity, aragonCourtContract]\n  )\n\n  const heartbeat = useCallback(\n    transitions => {\n      return addRequests(heartbeatRequest(transitions))\n    },\n    [addRequests, heartbeatRequest]\n  )\n\n  return { heartbeat, heartbeatRequest }\n}\n\nexport function useRewardActions() {\n  const processRequests = useRequestProcessor()\n  const { claimFees } = useCourtSubscriptionActions()\n  const disputeManagerContract = useCourtContract(\n    CourtModuleType.DisputeManager,\n    disputeManagerAbi\n  )\n\n  const treasuryContract = useCourtContract(\n    CourtModuleType.Treasury,\n    courtTreasuryAbi\n  )\n\n  const settleReward = useCallback(\n    (disputeId, roundId, juror) => {\n      return {\n        action: () =>\n          disputeManagerContract.settleReward(disputeId, roundId, juror, {\n            gasLimit: GAS_LIMIT,\n          }),\n        description: radspec[actions.SETTLE_REWARD]({ roundId, disputeId }),\n        type: actions.SETTLE_REWARD,\n      }\n    },\n    [disputeManagerContract]\n  )\n\n  const settleAppealDeposit = useCallback(\n    (disputeId, roundId) => {\n      return {\n        action: () =>\n          disputeManagerContract.settleAppealDeposit(disputeId, roundId, {\n            gasLimit: GAS_LIMIT,\n          }),\n        description: radspec[actions.SETTLE_APPEAL_DEPOSIT]({\n          roundId,\n          disputeId,\n        }),\n        type: actions.SETTLE_APPEAL_DEPOSIT,\n      }\n    },\n    [disputeManagerContract]\n  )\n\n  const withdraw = useCallback(\n    (token, to, amount) => {\n      return {\n        action: () =>\n          treasuryContract.withdraw(token, to, amount, {\n            gasLimit: ANJ_ACTIONS_GAS_LIMIT,\n          }),\n        description: radspec[actions.CLAIM_REWARDS]({\n          amount: formatUnits(amount),\n        }),\n        type: actions.CLAIM_REWARDS,\n      }\n    },\n    [treasuryContract]\n  )\n\n  const claimRewards = useCallback(\n    (\n      account,\n      arbitrableFees,\n      appealFees,\n      treasuryFees,\n      subscriptionFees,\n      feeTokenAddress\n    ) => {\n      const requestQueue = []\n\n      // Claim all arbitrable fee rewards\n      for (const arbitrableFee of arbitrableFees) {\n        const { disputeId, rounds } = arbitrableFee\n        for (const roundId of rounds) {\n          requestQueue.push(settleReward(disputeId, roundId, account))\n        }\n      }\n\n      // Claim all appeal fee rewards\n      for (const appealFee of appealFees) {\n        const { disputeId, rounds } = appealFee\n        for (const roundId of rounds) {\n          requestQueue.push(settleAppealDeposit(disputeId, roundId))\n        }\n      }\n\n      // If we have settlements to do, then we'll make sure that the last\n      // settlement is confirmed before withdrawing total fees from the treasury\n      if (requestQueue.length > 0) {\n        const lastSettlement = requestQueue.pop()\n        requestQueue.push({\n          ...lastSettlement,\n          ensureConfirmation: true,\n        })\n      }\n\n      // Withdraw funds from treasury\n      if (treasuryFees.gt(0)) {\n        requestQueue.push(withdraw(feeTokenAddress, account, treasuryFees))\n      }\n\n      // Claim subscription fees\n      for (const subscriptionFee of subscriptionFees) {\n        requestQueue.push(claimFees(subscriptionFee.periodId))\n      }\n\n      return processRequests(requestQueue)\n    },\n    [claimFees, processRequests, settleAppealDeposit, settleReward, withdraw]\n  )\n\n  return { claimRewards }\n}\n\nexport function useCourtSubscriptionActions() {\n  const courtSubscriptionsContract = useCourtContract(\n    CourtModuleType.Subscriptions,\n    courtSubscriptionsAbi\n  )\n\n  const claimFees = useCallback(\n    periodId => {\n      return {\n        action: () => courtSubscriptionsContract.claimFees(periodId),\n        description: radspec[actions.CLAIM_SUBSCRIPTION_FEES]({\n          periodId,\n        }),\n        type: actions.CLAIM_SUBSCRIPTION_FEES,\n      }\n    },\n    [courtSubscriptionsContract]\n  )\n\n  const getJurorShare = useCallback(\n    (juror, periodId) => {\n      return courtSubscriptionsContract.getJurorShare(juror, periodId)\n    },\n    [courtSubscriptionsContract]\n  )\n\n  const getters = useMemo(\n    () => (courtSubscriptionsContract ? { getJurorShare } : null),\n    [courtSubscriptionsContract, getJurorShare]\n  )\n\n  return {\n    claimFees,\n    getters,\n  }\n}\n\n/**\n *\n * @param {string} disputeId id of the dispute\n * @param {string} roundId id of the round\n * @returns {Object} appeal deposit and confirm appeal deposit amounts\n */\nexport function useAppealDeposits(disputeId, roundId) {\n  const [appealDeposits, setAppealDeposits] = useState({\n    amounts: [bigNum(0), bigNum(0)],\n    error: false,\n  })\n\n  const disputeManagerContract = useCourtContract(\n    CourtModuleType.DisputeManager,\n    disputeManagerAbi\n  )\n\n  useEffect(() => {\n    let cancelled = false\n\n    const fetchNextRoundDetails = async () => {\n      if (!disputeManagerContract) {\n        return\n      }\n\n      retryMax(() =>\n        disputeManagerContract\n          .getNextRoundDetails(disputeId, roundId)\n          .then(nextRound => {\n            const appealDeposit = nextRound[6]\n            const confirmAppealDeposit = nextRound[7]\n\n            if (!cancelled) {\n              setAppealDeposits({\n                amounts: [appealDeposit, confirmAppealDeposit],\n                error: false,\n              })\n            }\n          })\n          .catch(err => {\n            captureException(err)\n            if (!cancelled) {\n              setAppealDeposits(appealDeposits => ({\n                ...appealDeposits,\n                error: true,\n              }))\n            }\n          })\n      )\n    }\n\n    fetchNextRoundDetails()\n\n    return () => {\n      cancelled = true\n    }\n  }, [disputeId, disputeManagerContract, roundId])\n\n  return [appealDeposits.amounts, appealDeposits.error]\n}\n\nexport function useFeeBalanceOf(account) {\n  const [feeBalance, setFeeBalance] = useState({\n    amount: bigNum(0),\n    error: false,\n  })\n\n  const feeTokenContract = useFeeTokenContract()\n\n  useEffect(() => {\n    let cancelled = false\n\n    const getFeeBalance = async () => {\n      if (!feeTokenContract) return\n\n      retryMax(() => feeTokenContract.balanceOf(account))\n        .then(balance => {\n          if (!cancelled) {\n            setFeeBalance({ amount: balance, error: false })\n          }\n        })\n        .catch(err => {\n          captureException(err)\n          if (!cancelled) {\n            setFeeBalance(feeBalance => ({\n              ...feeBalance,\n              error: true,\n            }))\n          }\n        })\n    }\n\n    getFeeBalance()\n\n    return () => {\n      cancelled = true\n    }\n  }, [account, feeTokenContract])\n\n  return [feeBalance.amount, feeBalance.error]\n}\n\nexport function useAppealFeeAllowance(owner) {\n  const [allowance, setAllowance] = useState({\n    amount: bigNum(0),\n    error: false,\n  })\n\n  const courtConfig = useCourtConfig()\n  const disputeManagerAddress = getModuleAddress(\n    courtConfig.modules,\n    CourtModuleType.DisputeManager\n  )\n  const feeTokenContract = useFeeTokenContract()\n\n  useEffect(() => {\n    let cancelled = false\n\n    const getFeeAllowance = async () => {\n      if (!feeTokenContract) return\n\n      retryMax(() => feeTokenContract.allowance(owner, disputeManagerAddress))\n        .then(allowance => {\n          if (!cancelled) {\n            setAllowance({ amount: allowance, error: false })\n          }\n        })\n        .catch(err => {\n          captureException(err)\n          if (!cancelled) {\n            setAllowance(allowance => ({\n              ...allowance,\n              error: true,\n            }))\n          }\n        })\n    }\n\n    getFeeAllowance()\n\n    return () => {\n      cancelled = true\n    }\n  }, [disputeManagerAddress, feeTokenContract, owner])\n\n  return [allowance.amount, allowance.error]\n}\n\nexport function useActiveBalanceOfAt(juror, termId) {\n  const jurorRegistryContract = useCourtContract(\n    CourtModuleType.JurorsRegistry,\n    jurorRegistryAbi\n  )\n  const [activeBalance, setActiveBalance] = useState({\n    amount: bigNum(-1),\n    error: false,\n  })\n\n  useEffect(() => {\n    let cancelled = false\n\n    const getActiveBalanceOfAt = async () => {\n      if (!jurorRegistryContract) return\n\n      retryMax(() => jurorRegistryContract.activeBalanceOfAt(juror, termId))\n        .then(balance => {\n          if (!cancelled) {\n            setActiveBalance({ amount: balance, error: false })\n          }\n        })\n        .catch(err => {\n          captureException(err)\n          if (!cancelled) {\n            setActiveBalance(balance => ({\n              ...balance,\n              error: true,\n            }))\n          }\n        })\n    }\n\n    getActiveBalanceOfAt()\n\n    return () => {\n      cancelled = true\n    }\n  }, [juror, jurorRegistryContract, termId])\n\n  return [activeBalance.amount, activeBalance.error]\n}\n\nexport function useTotalANTStakedPolling(timeout = 1000) {\n  const [totalANTStaked, setTotalANTStaked] = useState(bigNum(-1))\n  const [error, setError] = useState(false)\n  const { address: antAddress } = getKnownToken('ANT') || {}\n  const antContract = useContractReadOnly(antAddress, tokenAbi)\n\n  // We are starting in 0 in order to immediately make the fetch call\n  const controlledTimeout = useRef(0)\n\n  useEffect(() => {\n    let cancelled = false\n    let timeoutId\n\n    // This stat is only relevant and shown on mainnet\n    if (!networkReserveAddress) {\n      return setError(true)\n    }\n\n    if (!antContract) {\n      return\n    }\n\n    const fetchTotalANTBalance = () => {\n      timeoutId = setTimeout(() => {\n        const vaultBalancePromise = antContract.balanceOf(networkReserveAddress)\n\n        return vaultBalancePromise\n          .then(antInVault => {\n            if (!cancelled) {\n              setTotalANTStaked(antInVault)\n            }\n          })\n          .catch(err => {\n            console.error(`Error fetching balance: ${err} retrying...`)\n            setError(true)\n          })\n          .finally(() => {\n            if (!cancelled) {\n              clearTimeout(timeoutId)\n              controlledTimeout.current = timeout\n              fetchTotalANTBalance()\n            }\n          })\n      }, controlledTimeout.current)\n    }\n\n    fetchTotalANTBalance()\n\n    return () => {\n      cancelled = true\n      clearTimeout(timeoutId)\n    }\n  }, [antContract, controlledTimeout, timeout])\n\n  return [totalANTStaked, error]\n}\n"]},"metadata":{},"sourceType":"module"}