{"ast":null,"code":"import { ACCOUNT_STATUS_ANONYMUS, ACCOUNT_STATUS_JUROR_ACTIVE, ACCOUNT_STATUS_JUROR_INACTIVE } from '../types/account-status-types';\nconst HIGH_PROBABILITY_BASE = 0.1;\nexport function getAccountStatus(balances, minActiveBalance) {\n  const {\n    activeBalance\n  } = balances;\n  if (activeBalance.amount.gte(minActiveBalance)) return ACCOUNT_STATUS_JUROR_ACTIVE;\n  if (!isANJHolder(balances)) return ACCOUNT_STATUS_ANONYMUS;\n  return ACCOUNT_STATUS_JUROR_INACTIVE;\n}\n\nfunction isANJHolder(balances) {\n  return Object.values(balances).reduce((isHolder, balance) => isHolder || balance.amount.gt(0), false);\n}\n\nexport function getProbabilityText(probability) {\n  return probability >= HIGH_PROBABILITY_BASE ? 'High' : 'Low';\n}","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/utils/account-utils.js"],"names":["ACCOUNT_STATUS_ANONYMUS","ACCOUNT_STATUS_JUROR_ACTIVE","ACCOUNT_STATUS_JUROR_INACTIVE","HIGH_PROBABILITY_BASE","getAccountStatus","balances","minActiveBalance","activeBalance","amount","gte","isANJHolder","Object","values","reduce","isHolder","balance","gt","getProbabilityText","probability"],"mappings":"AAAA,SACEA,uBADF,EAEEC,2BAFF,EAGEC,6BAHF,QAIO,+BAJP;AAMA,MAAMC,qBAAqB,GAAG,GAA9B;AAEA,OAAO,SAASC,gBAAT,CAA0BC,QAA1B,EAAoCC,gBAApC,EAAsD;AAC3D,QAAM;AAAEC,IAAAA;AAAF,MAAoBF,QAA1B;AAEA,MAAIE,aAAa,CAACC,MAAd,CAAqBC,GAArB,CAAyBH,gBAAzB,CAAJ,EACE,OAAOL,2BAAP;AAEF,MAAI,CAACS,WAAW,CAACL,QAAD,CAAhB,EAA4B,OAAOL,uBAAP;AAE5B,SAAOE,6BAAP;AACD;;AAED,SAASQ,WAAT,CAAqBL,QAArB,EAA+B;AAC7B,SAAOM,MAAM,CAACC,MAAP,CAAcP,QAAd,EAAwBQ,MAAxB,CACL,CAACC,QAAD,EAAWC,OAAX,KAAuBD,QAAQ,IAAIC,OAAO,CAACP,MAAR,CAAeQ,EAAf,CAAkB,CAAlB,CAD9B,EAEL,KAFK,CAAP;AAID;;AAED,OAAO,SAASC,kBAAT,CAA4BC,WAA5B,EAAyC;AAC9C,SAAOA,WAAW,IAAIf,qBAAf,GAAuC,MAAvC,GAAgD,KAAvD;AACD","sourcesContent":["import {\n  ACCOUNT_STATUS_ANONYMUS,\n  ACCOUNT_STATUS_JUROR_ACTIVE,\n  ACCOUNT_STATUS_JUROR_INACTIVE,\n} from '../types/account-status-types'\n\nconst HIGH_PROBABILITY_BASE = 0.1\n\nexport function getAccountStatus(balances, minActiveBalance) {\n  const { activeBalance } = balances\n\n  if (activeBalance.amount.gte(minActiveBalance))\n    return ACCOUNT_STATUS_JUROR_ACTIVE\n\n  if (!isANJHolder(balances)) return ACCOUNT_STATUS_ANONYMUS\n\n  return ACCOUNT_STATUS_JUROR_INACTIVE\n}\n\nfunction isANJHolder(balances) {\n  return Object.values(balances).reduce(\n    (isHolder, balance) => isHolder || balance.amount.gt(0),\n    false\n  )\n}\n\nexport function getProbabilityText(probability) {\n  return probability >= HIGH_PROBABILITY_BASE ? 'High' : 'Low'\n}\n"]},"metadata":{},"sourceType":"module"}