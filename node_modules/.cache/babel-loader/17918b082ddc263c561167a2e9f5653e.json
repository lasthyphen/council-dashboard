{"ast":null,"code":"import { useCallback, useState } from 'react';\nimport { useANJBalances } from './useANJ';\nimport { useSidePanel } from './useSidePanel';\nimport useJurorRewards from './useJurorRewards';\nimport useJurorAppealCollaterals from './useJurorAppealCollaterals';\nimport { useANJActions, useRewardActions } from './useCourtContracts';\nimport { useDashboardState } from '../components/Dashboard/DashboardStateProvider';\nexport const REQUEST_MODE = {\n  ACTIVATE: Symbol('ACTIVATE'),\n  DEACTIVATE: Symbol('DEACTIVATE'),\n  STAKE_ACTIVATE: Symbol('STAKE_ACTIVATE'),\n  WITHDRAW: Symbol('WITHDRAW')\n};\nconst stringMapping = {\n  [REQUEST_MODE.ACTIVATE]: 'Activate',\n  [REQUEST_MODE.STAKE_ACTIVATE]: 'Activate',\n  [REQUEST_MODE.DEACTIVATE]: 'Deactivate',\n  [REQUEST_MODE.WITHDRAW]: 'Withdraw'\n};\nexport function getRequestModeString(mode) {\n  return stringMapping[mode];\n}\nexport function usePanelRequestMode(requestPanelOpen) {\n  const [requestMode, setRequestMode] = useState(REQUEST_MODE.ACTIVATE);\n  const updateMode = useCallback(newMode => {\n    setRequestMode(newMode);\n    requestPanelOpen();\n  }, [requestPanelOpen]);\n  return [requestMode, updateMode];\n} // Requests to set new mode and open side panel\n\nexport function usePanelRequestActions(request) {\n  // TODO: Should we implement only one request function to recieve the request mode ?\n  const activateANJ = useCallback(() => {\n    request(REQUEST_MODE.ACTIVATE);\n  }, [request]);\n  const deactivateANJ = useCallback(() => {\n    request(REQUEST_MODE.DEACTIVATE);\n  }, [request]);\n  const stakeActivateANJ = useCallback(() => {\n    request(REQUEST_MODE.STAKE_ACTIVATE);\n  }, [request]);\n  const withdrawANJ = useCallback(() => {\n    request(REQUEST_MODE.WITHDRAW);\n  }, [request]);\n  return {\n    activateANJ,\n    deactivateANJ,\n    stakeActivateANJ,\n    withdrawANJ\n  };\n}\nexport function useDashboardLogic() {\n  const {\n    activateANJ,\n    deactivateANJ,\n    stakeActivateANJ,\n    withdrawANJ\n  } = useANJActions();\n  const rewards = useJurorRewards();\n  const anjBalances = useANJBalances();\n  const panelState = useSidePanel();\n  const appealCollaterals = useJurorAppealCollaterals();\n  const {\n    treasury,\n    fetching: fetchingData,\n    errors: errorsFetching\n  } = useDashboardState();\n  const [mode, setMode] = usePanelRequestMode(panelState.requestOpen);\n  const requests = usePanelRequestActions(setMode);\n  const {\n    claimRewards\n  } = useRewardActions();\n  const actions = {\n    activateANJ: mode === REQUEST_MODE.STAKE_ACTIVATE ? stakeActivateANJ : activateANJ,\n    deactivateANJ,\n    withdrawANJ,\n    claimRewards\n  };\n  return {\n    actions,\n    anjBalances,\n    appealCollaterals,\n    errorsFetching,\n    fetchingData,\n    mode,\n    panelState,\n    requests,\n    rewards,\n    treasury\n  };\n}","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/hooks/dashboard-logic.js"],"names":["useCallback","useState","useANJBalances","useSidePanel","useJurorRewards","useJurorAppealCollaterals","useANJActions","useRewardActions","useDashboardState","REQUEST_MODE","ACTIVATE","Symbol","DEACTIVATE","STAKE_ACTIVATE","WITHDRAW","stringMapping","getRequestModeString","mode","usePanelRequestMode","requestPanelOpen","requestMode","setRequestMode","updateMode","newMode","usePanelRequestActions","request","activateANJ","deactivateANJ","stakeActivateANJ","withdrawANJ","useDashboardLogic","rewards","anjBalances","panelState","appealCollaterals","treasury","fetching","fetchingData","errors","errorsFetching","setMode","requestOpen","requests","claimRewards","actions"],"mappings":"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","sourcesContent":["import { useCallback, useState } from 'react'\n\nimport { useANJBalances } from './useANJ'\nimport { useSidePanel } from './useSidePanel'\nimport useJurorRewards from './useJurorRewards'\nimport useJurorAppealCollaterals from './useJurorAppealCollaterals'\nimport { useANJActions, useRewardActions } from './useCourtContracts'\nimport { useDashboardState } from '../components/Dashboard/DashboardStateProvider'\n\nexport const REQUEST_MODE = {\n  ACTIVATE: Symbol('ACTIVATE'),\n  DEACTIVATE: Symbol('DEACTIVATE'),\n  STAKE_ACTIVATE: Symbol('STAKE_ACTIVATE'),\n  WITHDRAW: Symbol('WITHDRAW'),\n}\n\nconst stringMapping = {\n  [REQUEST_MODE.ACTIVATE]: 'Activate',\n  [REQUEST_MODE.STAKE_ACTIVATE]: 'Activate',\n  [REQUEST_MODE.DEACTIVATE]: 'Deactivate',\n  [REQUEST_MODE.WITHDRAW]: 'Withdraw',\n}\n\nexport function getRequestModeString(mode) {\n  return stringMapping[mode]\n}\n\nexport function usePanelRequestMode(requestPanelOpen) {\n  const [requestMode, setRequestMode] = useState(REQUEST_MODE.ACTIVATE)\n\n  const updateMode = useCallback(\n    newMode => {\n      setRequestMode(newMode)\n      requestPanelOpen()\n    },\n    [requestPanelOpen]\n  )\n\n  return [requestMode, updateMode]\n}\n\n// Requests to set new mode and open side panel\nexport function usePanelRequestActions(request) {\n  // TODO: Should we implement only one request function to recieve the request mode ?\n  const activateANJ = useCallback(() => {\n    request(REQUEST_MODE.ACTIVATE)\n  }, [request])\n\n  const deactivateANJ = useCallback(() => {\n    request(REQUEST_MODE.DEACTIVATE)\n  }, [request])\n\n  const stakeActivateANJ = useCallback(() => {\n    request(REQUEST_MODE.STAKE_ACTIVATE)\n  }, [request])\n\n  const withdrawANJ = useCallback(() => {\n    request(REQUEST_MODE.WITHDRAW)\n  }, [request])\n\n  return { activateANJ, deactivateANJ, stakeActivateANJ, withdrawANJ }\n}\n\nexport function useDashboardLogic() {\n  const {\n    activateANJ,\n    deactivateANJ,\n    stakeActivateANJ,\n    withdrawANJ,\n  } = useANJActions()\n\n  const rewards = useJurorRewards()\n  const anjBalances = useANJBalances()\n  const panelState = useSidePanel()\n\n  const appealCollaterals = useJurorAppealCollaterals()\n  const {\n    treasury,\n    fetching: fetchingData,\n    errors: errorsFetching,\n  } = useDashboardState()\n\n  const [mode, setMode] = usePanelRequestMode(panelState.requestOpen)\n  const requests = usePanelRequestActions(setMode)\n\n  const { claimRewards } = useRewardActions()\n  const actions = {\n    activateANJ:\n      mode === REQUEST_MODE.STAKE_ACTIVATE ? stakeActivateANJ : activateANJ,\n    deactivateANJ,\n    withdrawANJ,\n    claimRewards,\n  }\n\n  return {\n    actions,\n    anjBalances,\n    appealCollaterals,\n    errorsFetching,\n    fetchingData,\n    mode,\n    panelState,\n    requests,\n    rewards,\n    treasury,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}