{"ast":null,"code":"import _slicedToArray from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useCallback,useState,useMemo}from'react';export function useSidePanel(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),visible=_useState2[0],setVisible=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),opened=_useState4[0],setOpened=_useState4[1];var requestOpen=useCallback(function(){setVisible(true);setOpened(false);},[]);var endTransition=setOpened;var requestClose=useCallback(function(){setVisible(false);setOpened(false);},[setVisible,setOpened]);return useMemo(function(){return{visible:visible,opened:opened,requestOpen:requestOpen,endTransition:endTransition,requestClose:requestClose};},[endTransition,opened,requestClose,requestOpen,visible]);}","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/hooks/useSidePanel.js"],"names":["useCallback","useState","useMemo","useSidePanel","visible","setVisible","opened","setOpened","requestOpen","endTransition","requestClose"],"mappings":"4HAAA,OAASA,WAAT,CAAsBC,QAAtB,CAAgCC,OAAhC,KAA+C,OAA/C,CAEA,MAAO,SAASC,CAAAA,YAAT,EAAwB,eACCF,QAAQ,CAAC,KAAD,CADT,wCACtBG,OADsB,eACbC,UADa,8BAEDJ,QAAQ,CAAC,KAAD,CAFP,yCAEtBK,MAFsB,eAEdC,SAFc,eAI7B,GAAMC,CAAAA,WAAW,CAAGR,WAAW,CAAC,UAAM,CACpCK,UAAU,CAAC,IAAD,CAAV,CACAE,SAAS,CAAC,KAAD,CAAT,CACD,CAH8B,CAG5B,EAH4B,CAA/B,CAKA,GAAME,CAAAA,aAAa,CAAGF,SAAtB,CAEA,GAAMG,CAAAA,YAAY,CAAGV,WAAW,CAAC,UAAM,CACrCK,UAAU,CAAC,KAAD,CAAV,CACAE,SAAS,CAAC,KAAD,CAAT,CACD,CAH+B,CAG7B,CAACF,UAAD,CAAaE,SAAb,CAH6B,CAAhC,CAKA,MAAOL,CAAAA,OAAO,CAAC,UAAM,CACnB,MAAO,CACLE,OAAO,CAAPA,OADK,CAELE,MAAM,CAANA,MAFK,CAGLE,WAAW,CAAXA,WAHK,CAILC,aAAa,CAAbA,aAJK,CAKLC,YAAY,CAAZA,YALK,CAAP,CAOD,CARa,CAQX,CAACD,aAAD,CAAgBH,MAAhB,CAAwBI,YAAxB,CAAsCF,WAAtC,CAAmDJ,OAAnD,CARW,CAAd,CASD","sourcesContent":["import { useCallback, useState, useMemo } from 'react'\n\nexport function useSidePanel() {\n  const [visible, setVisible] = useState(false)\n  const [opened, setOpened] = useState(false)\n\n  const requestOpen = useCallback(() => {\n    setVisible(true)\n    setOpened(false)\n  }, [])\n\n  const endTransition = setOpened\n\n  const requestClose = useCallback(() => {\n    setVisible(false)\n    setOpened(false)\n  }, [setVisible, setOpened])\n\n  return useMemo(() => {\n    return {\n      visible,\n      opened,\n      requestOpen,\n      endTransition,\n      requestClose,\n    }\n  }, [endTransition, opened, requestClose, requestOpen, visible])\n}\n"]},"metadata":{},"sourceType":"module"}