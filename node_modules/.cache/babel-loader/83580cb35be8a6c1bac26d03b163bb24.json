{"ast":null,"code":"import{networkConfigs,getNetworkConfig,getInternalNetworkName,RINKEBY_COURT,RINKEBY_STAGING_COURT}from'../networks';var PRECEDENCE_CAMPAIGN_DISPUTES={main:new Map([[networkConfigs.main.court,new Map(new Array(21).fill().map(function(_,index){return[String(index+1)];}))]]),rinkeby:new Map([[RINKEBY_COURT,new Map([])],[RINKEBY_STAGING_COURT,new Map([['0']])]]),ropsten:new Map([[networkConfigs.ropsten.court,new Map([])]]),local:new Map([[networkConfigs.local.court,new Map([])]])};export function getPrecedenceCampaignDisputesByCourt(){var courtAddress=getNetworkConfig().court;return PRECEDENCE_CAMPAIGN_DISPUTES[getInternalNetworkName()].get(courtAddress);}","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/flagged-disputes/precedence-campaign-disputes.js"],"names":["networkConfigs","getNetworkConfig","getInternalNetworkName","RINKEBY_COURT","RINKEBY_STAGING_COURT","PRECEDENCE_CAMPAIGN_DISPUTES","main","Map","court","Array","fill","map","_","index","String","rinkeby","ropsten","local","getPrecedenceCampaignDisputesByCourt","courtAddress","get"],"mappings":"AAAA,OACEA,cADF,CAEEC,gBAFF,CAGEC,sBAHF,CAIEC,aAJF,CAKEC,qBALF,KAMO,aANP,CAQA,GAAMC,CAAAA,4BAA4B,CAAG,CACnCC,IAAI,CAAE,GAAIC,CAAAA,GAAJ,CAAQ,CACZ,CACEP,cAAc,CAACM,IAAf,CAAoBE,KADtB,CAEE,GAAID,CAAAA,GAAJ,CAAQ,GAAIE,CAAAA,KAAJ,CAAU,EAAV,EAAcC,IAAd,GAAqBC,GAArB,CAAyB,SAACC,CAAD,CAAIC,KAAJ,QAAc,CAACC,MAAM,CAACD,KAAK,CAAG,CAAT,CAAP,CAAd,EAAzB,CAAR,CAFF,CADY,CAAR,CAD6B,CAOnCE,OAAO,CAAE,GAAIR,CAAAA,GAAJ,CAAQ,CACf,CAACJ,aAAD,CAAgB,GAAII,CAAAA,GAAJ,CAAQ,EAAR,CAAhB,CADe,CAEf,CAACH,qBAAD,CAAwB,GAAIG,CAAAA,GAAJ,CAAQ,CAAC,CAAC,GAAD,CAAD,CAAR,CAAxB,CAFe,CAAR,CAP0B,CAWnCS,OAAO,CAAE,GAAIT,CAAAA,GAAJ,CAAQ,CAAC,CAACP,cAAc,CAACgB,OAAf,CAAuBR,KAAxB,CAA+B,GAAID,CAAAA,GAAJ,CAAQ,EAAR,CAA/B,CAAD,CAAR,CAX0B,CAYnCU,KAAK,CAAE,GAAIV,CAAAA,GAAJ,CAAQ,CAAC,CAACP,cAAc,CAACiB,KAAf,CAAqBT,KAAtB,CAA6B,GAAID,CAAAA,GAAJ,CAAQ,EAAR,CAA7B,CAAD,CAAR,CAZ4B,CAArC,CAeA,MAAO,SAASW,CAAAA,oCAAT,EAAgD,CACrD,GAAMC,CAAAA,YAAY,CAAGlB,gBAAgB,GAAGO,KAAxC,CAEA,MAAOH,CAAAA,4BAA4B,CAACH,sBAAsB,EAAvB,CAA5B,CAAuDkB,GAAvD,CACLD,YADK,CAAP,CAGD","sourcesContent":["import {\n  networkConfigs,\n  getNetworkConfig,\n  getInternalNetworkName,\n  RINKEBY_COURT,\n  RINKEBY_STAGING_COURT,\n} from '../networks'\n\nconst PRECEDENCE_CAMPAIGN_DISPUTES = {\n  main: new Map([\n    [\n      networkConfigs.main.court,\n      new Map(new Array(21).fill().map((_, index) => [String(index + 1)])),\n    ],\n  ]),\n  rinkeby: new Map([\n    [RINKEBY_COURT, new Map([])],\n    [RINKEBY_STAGING_COURT, new Map([['0']])],\n  ]),\n  ropsten: new Map([[networkConfigs.ropsten.court, new Map([])]]),\n  local: new Map([[networkConfigs.local.court, new Map([])]]),\n}\n\nexport function getPrecedenceCampaignDisputesByCourt() {\n  const courtAddress = getNetworkConfig().court\n\n  return PRECEDENCE_CAMPAIGN_DISPUTES[getInternalNetworkName()].get(\n    courtAddress\n  )\n}\n"]},"metadata":{},"sourceType":"module"}