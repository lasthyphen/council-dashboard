{"ast":null,"code":"import { AbstractConnector } from '@web3-react/abstract-connector';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar TorusConnector =\n/*#__PURE__*/\nfunction (_AbstractConnector) {\n  _inheritsLoose(TorusConnector, _AbstractConnector);\n\n  function TorusConnector(_ref) {\n    var _this;\n\n    var chainId = _ref.chainId,\n        _ref$initOptions = _ref.initOptions,\n        initOptions = _ref$initOptions === void 0 ? {} : _ref$initOptions,\n        _ref$constructorOptio = _ref.constructorOptions,\n        constructorOptions = _ref$constructorOptio === void 0 ? {} : _ref$constructorOptio,\n        _ref$loginOptions = _ref.loginOptions,\n        loginOptions = _ref$loginOptions === void 0 ? {} : _ref$loginOptions;\n    _this = _AbstractConnector.call(this, {\n      supportedChainIds: [chainId]\n    }) || this;\n    _this.chainId = chainId;\n    _this.initOptions = initOptions;\n    _this.constructorOptions = constructorOptions;\n    _this.loginOptions = loginOptions;\n    return _this;\n  }\n\n  var _proto = TorusConnector.prototype;\n\n  _proto.activate = function activate() {\n    try {\n      var _temp3 = function _temp3() {\n        return Promise.resolve(_this3.torus.login(_this3.loginOptions).then(function (accounts) {\n          return accounts[0];\n        })).then(function (account) {\n          return {\n            provider: _this3.torus.provider,\n            account: account\n          };\n        });\n      };\n\n      var _this3 = this;\n\n      var _temp4 = function () {\n        if (!_this3.torus) {\n          return Promise.resolve(import('@toruslabs/torus-embed').then(function (m) {\n            var _m$default;\n\n            return (_m$default = m == null ? void 0 : m[\"default\"]) != null ? _m$default : m;\n          })).then(function (Torus) {\n            _this3.torus = new Torus(_this3.constructorOptions);\n            return Promise.resolve(_this3.torus.init(_this3.initOptions)).then(function () {});\n          });\n        }\n      }();\n\n      return Promise.resolve(_temp4 && _temp4.then ? _temp4.then(_temp3) : _temp3(_temp4));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.getProvider = function getProvider() {\n    try {\n      var _this5 = this;\n\n      return Promise.resolve(_this5.torus.provider);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.getChainId = function getChainId() {\n    try {\n      var _this7 = this;\n\n      return Promise.resolve(_this7.chainId);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.getAccount = function getAccount() {\n    try {\n      var _this9 = this;\n\n      return Promise.resolve(_this9.torus.ethereum.send('eth_accounts').then(function (accounts) {\n        return accounts[0];\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.deactivate = function deactivate() {\n    return Promise.resolve();\n  };\n\n  _proto.close = function close() {\n    try {\n      var _this11 = this;\n\n      return Promise.resolve(_this11.torus.cleanUp()).then(function () {\n        _this11.emitDeactivate();\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  return TorusConnector;\n}(AbstractConnector);\n\nexport { TorusConnector };","map":null,"metadata":{},"sourceType":"module"}