{"ast":null,"code":"import _slicedToArray from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _styled2 from\"styled-components\";import _styled from\"styled-components\";import React,{useState}from'react';import{GU,Tabs,Tag}from'@aragon/ui';import NoTasks from'./NoTasks';import NoMyTasks from'./NoMyTasks';import TaskTable from'./TasksTable';import TasksLoading from'../LoadingCard';import TitleHeader from'../TitleHeader';import ErrorLoading from'../Errors/ErrorLoading';import{useWallet}from'../../providers/Wallet';import useFilteredTasks from'../../hooks/useFilteredTasks';var _StyledDiv=_styled(\"div\").withConfig({displayName:\"Tasks___StyledDiv\",componentId:\"uk8qae-0\"})([\"padding-bottom:\",\"px;\"],function(p){return p._css;});var _StyledTabs=_styled(Tabs).withConfig({displayName:\"Tasks___StyledTabs\",componentId:\"uk8qae-1\"})([\"margin-bottom:0px;\"]);var Tasks=React.memo(function(_ref){var onlyTable=_ref.onlyTable;var wallet=useWallet();var _useState=useState(0),_useState2=_slicedToArray(_useState,2),screenIndex=_useState2[0],setScreenIndex=_useState2[1];var getMyTasksSelected=function getMyTasksSelected(){if(onlyTable){if(wallet.account){return true;}return false;}return screenIndex===0;};var myTasksSelected=getMyTasksSelected();var _useFilteredTasks=useFilteredTasks(myTasksSelected,wallet.account),tasks=_useFilteredTasks.tasks,tasksFetching=_useFilteredTasks.fetching,errorLoading=_useFilteredTasks.error,filtersSelected=_useFilteredTasks.filtersSelected,setFiltersSelected=_useFilteredTasks.setFiltersSelected,emptyFilterResults=_useFilteredTasks.emptyFilterResults,handleClearFilters=_useFilteredTasks.handleClearFilters,selectedDateRange=_useFilteredTasks.selectedDateRange,handleSelectedDateRangeChange=_useFilteredTasks.handleSelectedDateRangeChange,selectedPhase=_useFilteredTasks.selectedPhase,handleSelectedPhaseChange=_useFilteredTasks.handleSelectedPhaseChange,openTasksNumber=_useFilteredTasks.openTasksNumber,jurorOpenTaskNumber=_useFilteredTasks.jurorOpenTaskNumber,taskActionsString=_useFilteredTasks.taskActionsString;var handleTabChange=function handleTabChange(screenIndex){setFiltersSelected(false);handleClearFilters();setScreenIndex(screenIndex);};return React.createElement(_StyledDiv,{_css:3*GU},!onlyTable&&React.createElement(TitleHeader,{title:\"Tasks\"}),!onlyTable&&React.createElement(_StyledTabs,{items:[React.createElement(\"div\",null,React.createElement(\"span\",null,\"My Tasks \"),React.createElement(Tag,{limitDigits:4,label:jurorOpenTaskNumber,size:\"small\"})),React.createElement(\"div\",null,React.createElement(\"span\",null,\"All Tasks \"),React.createElement(Tag,{limitDigits:4,label:openTasksNumber,size:\"small\"}))],selected:screenIndex,onChange:handleTabChange}),function(){if(errorLoading){return React.createElement(ErrorLoading,{subject:\"tasks\",errors:[errorLoading.message]});}if(tasksFetching){return React.createElement(TasksLoading,null);}if(!filtersSelected&&tasks.length===0){return myTasksSelected?React.createElement(NoMyTasks,null):React.createElement(NoTasks,null);}return React.createElement(TaskTable,{tasks:tasks,emptyFilterResults:emptyFilterResults,onClearFilters:handleClearFilters,dateRangeFilter:selectedDateRange,onDateRangeChange:handleSelectedDateRangeChange,phaseFilter:selectedPhase,onPhaseChange:handleSelectedPhaseChange,phaseTypes:taskActionsString,onlyTable:onlyTable});}());});export default Tasks;","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/Tasks/Tasks.js"],"names":["React","useState","GU","Tabs","Tag","NoTasks","NoMyTasks","TaskTable","TasksLoading","TitleHeader","ErrorLoading","useWallet","useFilteredTasks","Tasks","memo","onlyTable","wallet","screenIndex","setScreenIndex","getMyTasksSelected","account","myTasksSelected","tasks","tasksFetching","fetching","errorLoading","error","filtersSelected","setFiltersSelected","emptyFilterResults","handleClearFilters","selectedDateRange","handleSelectedDateRangeChange","selectedPhase","handleSelectedPhaseChange","openTasksNumber","jurorOpenTaskNumber","taskActionsString","handleTabChange","message","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { GU, Tabs, Tag } from '@aragon/ui'\n\nimport NoTasks from './NoTasks'\nimport NoMyTasks from './NoMyTasks'\nimport TaskTable from './TasksTable'\nimport TasksLoading from '../LoadingCard'\nimport TitleHeader from '../TitleHeader'\nimport ErrorLoading from '../Errors/ErrorLoading'\nimport { useWallet } from '../../providers/Wallet'\nimport useFilteredTasks from '../../hooks/useFilteredTasks'\n\nconst Tasks = React.memo(({ onlyTable }) => {\n  const wallet = useWallet()\n\n  const [screenIndex, setScreenIndex] = useState(0)\n\n  const getMyTasksSelected = () => {\n    if (onlyTable) {\n      if (wallet.account) {\n        return true\n      }\n      return false\n    }\n    return screenIndex === 0\n  }\n\n  const myTasksSelected = getMyTasksSelected()\n\n  const {\n    tasks,\n    fetching: tasksFetching,\n    error: errorLoading,\n    filtersSelected,\n    setFiltersSelected,\n    emptyFilterResults,\n    handleClearFilters,\n    selectedDateRange,\n    handleSelectedDateRangeChange,\n    selectedPhase,\n    handleSelectedPhaseChange,\n    openTasksNumber,\n    jurorOpenTaskNumber,\n    taskActionsString,\n  } = useFilteredTasks(myTasksSelected, wallet.account)\n\n  const handleTabChange = screenIndex => {\n    setFiltersSelected(false)\n    handleClearFilters()\n    setScreenIndex(screenIndex)\n  }\n\n  return (\n    <div\n      css={`\n        padding-bottom: ${3 * GU}px;\n      `}\n    >\n      {!onlyTable && <TitleHeader title=\"Tasks\" />}\n      {/* Commented since we are not launching V1 with this component\n      <TaskBox\n        openTasks={openTasks}\n        completedTasks={completedTasks}\n        incompleteTasks={incompleteTasks}\n      /> */}\n      {!onlyTable && (\n        <Tabs\n          css={`\n            margin-bottom: 0px;\n          `}\n          items={[\n            <div>\n              <span>My Tasks </span>\n              <Tag limitDigits={4} label={jurorOpenTaskNumber} size=\"small\" />\n            </div>,\n            <div>\n              <span>All Tasks </span>\n              <Tag limitDigits={4} label={openTasksNumber} size=\"small\" />\n            </div>,\n          ]}\n          selected={screenIndex}\n          onChange={handleTabChange}\n        />\n      )}\n\n      {(() => {\n        if (errorLoading) {\n          return (\n            <ErrorLoading subject=\"tasks\" errors={[errorLoading.message]} />\n          )\n        }\n        if (tasksFetching) {\n          return <TasksLoading />\n        }\n\n        if (!filtersSelected && tasks.length === 0) {\n          return myTasksSelected ? <NoMyTasks /> : <NoTasks />\n        }\n        return (\n          <TaskTable\n            tasks={tasks}\n            emptyFilterResults={emptyFilterResults}\n            onClearFilters={handleClearFilters}\n            dateRangeFilter={selectedDateRange}\n            onDateRangeChange={handleSelectedDateRangeChange}\n            phaseFilter={selectedPhase}\n            onPhaseChange={handleSelectedPhaseChange}\n            phaseTypes={taskActionsString}\n            onlyTable={onlyTable}\n          />\n        )\n      })()}\n    </div>\n  )\n})\n\nexport default Tasks\n"]},"metadata":{},"sourceType":"module"}