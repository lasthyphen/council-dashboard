{"ast":null,"code":"import _slicedToArray from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _styled4 from\"styled-components\";import _styled3 from\"styled-components\";import _styled2 from\"styled-components\";import _styled from\"styled-components\";import React from'react';import styled from'styled-components';import{Button,GU,Help,Info,useTheme,useViewport}from'@aragon/ui';import{useActiveBalanceOfAt}from'../../../hooks/useCourtContracts';import{useCourtConfig}from'../../../providers/CourtConfig';import{useWallet}from'../../../providers/Wallet';import{VOTE_OPTION_REFUSE,VOTE_OPTION_IN_FAVOR,VOTE_OPTION_AGAINST}from'../../../utils/crvoting-utils';function DisputeVoting(_ref){var draftTermId=_ref.draftTermId,isFinalRound=_ref.isFinalRound,isJurorDrafted=_ref.isJurorDrafted,onRequestCommit=_ref.onRequestCommit;if(isFinalRound){return React.createElement(VotingFinalRound,{draftTermId:draftTermId,onRequestCommit:onRequestCommit});}return React.createElement(VotingActions,{canJurorVote:isJurorDrafted,onRequestCommit:onRequestCommit});}function VotingFinalRound(_ref2){var draftTermId=_ref2.draftTermId,onRequestCommit=_ref2.onRequestCommit;var wallet=useWallet();var _useCourtConfig=useCourtConfig(),minActiveBalance=_useCourtConfig.minActiveBalance;// On a final round we must check if the connected account had the minimum active balance at term `disputeDraftTermId` to be able to vote\n// Note that in a final round, every juror can vote (there's no drafting phase).\nvar _useActiveBalanceOfAt=useActiveBalanceOfAt(wallet.account,draftTermId),_useActiveBalanceOfAt2=_slicedToArray(_useActiveBalanceOfAt,1),activeBalance=_useActiveBalanceOfAt2[0];var canJurorVoteFinalRound=activeBalance.gte(minActiveBalance);return React.createElement(VotingActions,{canJurorVote:canJurorVoteFinalRound,onRequestCommit:onRequestCommit});}var _StyledDiv=styled(\"div\").withConfig({displayName:\"DisputeVoting___StyledDiv\",componentId:\"sc-5cibbh-0\"})([\"display:flex;justify-content:space-between;flex-direction:\",\";width:100%;margin-bottom:\",\"px;\"],function(p){return p._css;},function(p){return p._css2;});function VotingActions(_ref3){var canJurorVote=_ref3.canJurorVote,onRequestCommit=_ref3.onRequestCommit;var wallet=useWallet();var _useViewport=useViewport(),below=_useViewport.below;var compactMode=below('medium');var buttonWidth=compactMode?'100% ':\"calc((100% - \".concat(2*GU,\"px) /  3)\");return React.createElement(\"div\",null,React.createElement(_StyledDiv,{_css:compactMode?'column':'row',_css2:1.5*GU},React.createElement(VotingButton,{compactMode:compactMode,disabled:!canJurorVote,mode:\"positive\",onClick:function onClick(){return onRequestCommit(VOTE_OPTION_IN_FAVOR);},width:buttonWidth},\"Allow action\"),React.createElement(VotingButton,{compactMode:compactMode,disabled:!canJurorVote,mode:\"negative\",onClick:function onClick(){return onRequestCommit(VOTE_OPTION_AGAINST);},width:buttonWidth},\"Block action\"),React.createElement(VotingButton,{compactMode:compactMode,disabled:!canJurorVote,onClick:function onClick(){return onRequestCommit(VOTE_OPTION_REFUSE);},width:buttonWidth},\"Refuse to vote\")),React.createElement(RefuseToVoteHint,{compactMode:compactMode,width:buttonWidth}),React.createElement(Info,{mode:canJurorVote?'description':'warning'},function(){if(!wallet.account)return'You cannot vote on this dispute because your Ethereum account is not connected.';return canJurorVote?' You will be asked a one-time-use code before you can commit your vote.':'You cannot vote on this dispute with the current enabled address.';}()));}var _StyledDiv2=styled(\"div\").withConfig({displayName:\"DisputeVoting___StyledDiv2\",componentId:\"sc-5cibbh-1\"})([\"display:flex;align-items:center;justify-content:\",\";margin-bottom:\",\"px;\"],function(p){return p._css3;},function(p){return p._css4;});var _StyledDiv3=styled(\"div\").withConfig({displayName:\"DisputeVoting___StyledDiv3\",componentId:\"sc-5cibbh-2\"})([\"width:\",\";color:\",\";\"],function(p){return p._css5;},function(p){return p._css6;});var _StyledSpan=styled(\"span\").withConfig({displayName:\"DisputeVoting___StyledSpan\",componentId:\"sc-5cibbh-3\"})([\"margin-right:\",\"px;\"],function(p){return p._css7;});var RefuseToVoteHint=function RefuseToVoteHint(_ref4){var compactMode=_ref4.compactMode,width=_ref4.width;var theme=useTheme();return React.createElement(_StyledDiv2,{_css3:compactMode?'center':'flex-end',_css4:1.5*GU},React.createElement(_StyledDiv3,{_css5:width,_css6:theme.help},React.createElement(Container,{as:compactMode?'label':'div',compactMode:compactMode},React.createElement(_StyledSpan,{_css7:0.5*GU},\"Why refuse to vote?\"),React.createElement(Help,{hint:\"\"},React.createElement(\"p\",null,\"You can refuse to vote for many reasons, for example if you consider that the evidence was not conclusive enough or the description was incoherent.\"),React.createElement(\"p\",null,\"Remember that you should vote the way that you think the plurality of jurors will vote, since you will be penalized if your vote is in the minority.\")))));};var VotingButton=styled(Button).withConfig({displayName:\"DisputeVoting__VotingButton\",componentId:\"sc-5cibbh-4\"})([\"width:\",\";margin-bottom:\",\"px;\"],function(_ref5){var width=_ref5.width;return width;},function(_ref6){var compactMode=_ref6.compactMode;return(compactMode?1:0)*GU;});var Container=styled.div.withConfig({displayName:\"DisputeVoting__Container\",componentId:\"sc-5cibbh-5\"})([\"display:flex;align-items:center;justify-content:center;cursor:\",\";\"],function(_ref7){var compactMode=_ref7.compactMode;return compactMode?'pointer':'';});export default DisputeVoting;","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/Disputes/actions/DisputeVoting.js"],"names":["React","styled","Button","GU","Help","Info","useTheme","useViewport","useActiveBalanceOfAt","useCourtConfig","useWallet","VOTE_OPTION_REFUSE","VOTE_OPTION_IN_FAVOR","VOTE_OPTION_AGAINST","DisputeVoting","draftTermId","isFinalRound","isJurorDrafted","onRequestCommit","VotingFinalRound","wallet","minActiveBalance","account","activeBalance","canJurorVoteFinalRound","gte","VotingActions","canJurorVote","below","compactMode","buttonWidth","RefuseToVoteHint","width","theme","help","VotingButton","Container","div"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Button, GU, Help, Info, useTheme, useViewport } from '@aragon/ui'\nimport { useActiveBalanceOfAt } from '../../../hooks/useCourtContracts'\nimport { useCourtConfig } from '../../../providers/CourtConfig'\nimport { useWallet } from '../../../providers/Wallet'\nimport {\n  VOTE_OPTION_REFUSE,\n  VOTE_OPTION_IN_FAVOR,\n  VOTE_OPTION_AGAINST,\n} from '../../../utils/crvoting-utils'\n\nfunction DisputeVoting({\n  draftTermId,\n  isFinalRound,\n  isJurorDrafted,\n  onRequestCommit,\n}) {\n  if (isFinalRound) {\n    return (\n      <VotingFinalRound\n        draftTermId={draftTermId}\n        onRequestCommit={onRequestCommit}\n      />\n    )\n  }\n\n  return (\n    <VotingActions\n      canJurorVote={isJurorDrafted}\n      onRequestCommit={onRequestCommit}\n    />\n  )\n}\n\nfunction VotingFinalRound({ draftTermId, onRequestCommit }) {\n  const wallet = useWallet()\n  const { minActiveBalance } = useCourtConfig()\n\n  // On a final round we must check if the connected account had the minimum active balance at term `disputeDraftTermId` to be able to vote\n  // Note that in a final round, every juror can vote (there's no drafting phase).\n  const [activeBalance] = useActiveBalanceOfAt(wallet.account, draftTermId)\n\n  const canJurorVoteFinalRound = activeBalance.gte(minActiveBalance)\n\n  return (\n    <VotingActions\n      canJurorVote={canJurorVoteFinalRound}\n      onRequestCommit={onRequestCommit}\n    />\n  )\n}\n\nfunction VotingActions({ canJurorVote, onRequestCommit }) {\n  const wallet = useWallet()\n  const { below } = useViewport()\n  const compactMode = below('medium')\n\n  const buttonWidth = compactMode ? '100% ' : `calc((100% - ${2 * GU}px) /  3)`\n\n  return (\n    <div>\n      <div\n        css={`\n          display: flex;\n          justify-content: space-between;\n          flex-direction: ${compactMode ? 'column' : 'row'};\n          width: 100%;\n          margin-bottom: ${1.5 * GU}px;\n        `}\n      >\n        <VotingButton\n          compactMode={compactMode}\n          disabled={!canJurorVote}\n          mode=\"positive\"\n          onClick={() => onRequestCommit(VOTE_OPTION_IN_FAVOR)}\n          width={buttonWidth}\n        >\n          Allow action\n        </VotingButton>\n        <VotingButton\n          compactMode={compactMode}\n          disabled={!canJurorVote}\n          mode=\"negative\"\n          onClick={() => onRequestCommit(VOTE_OPTION_AGAINST)}\n          width={buttonWidth}\n        >\n          Block action\n        </VotingButton>\n\n        <VotingButton\n          compactMode={compactMode}\n          disabled={!canJurorVote}\n          onClick={() => onRequestCommit(VOTE_OPTION_REFUSE)}\n          width={buttonWidth}\n        >\n          Refuse to vote\n        </VotingButton>\n      </div>\n      <RefuseToVoteHint compactMode={compactMode} width={buttonWidth} />\n      <Info mode={canJurorVote ? 'description' : 'warning'}>\n        {(() => {\n          if (!wallet.account)\n            return 'You cannot vote on this dispute because your Ethereum account is not connected.'\n\n          return canJurorVote\n            ? ' You will be asked a one-time-use code before you can commit your vote.'\n            : 'You cannot vote on this dispute with the current enabled address.'\n        })()}\n      </Info>\n    </div>\n  )\n}\n\nconst RefuseToVoteHint = ({ compactMode, width }) => {\n  const theme = useTheme()\n\n  return (\n    <div\n      css={`\n        display: flex;\n        align-items: center;\n        justify-content: ${compactMode ? 'center' : 'flex-end'};\n        margin-bottom: ${1.5 * GU}px;\n      `}\n    >\n      <div\n        css={`\n          width: ${width};\n          color: ${theme.help};\n        `}\n      >\n        <Container as={compactMode ? 'label' : 'div'} compactMode={compactMode}>\n          <span\n            css={`\n              margin-right: ${0.5 * GU}px;\n            `}\n          >\n            Why refuse to vote?\n          </span>\n          <Help hint=\"\">\n            <p>\n              You can refuse to vote for many reasons, for example if you\n              consider that the evidence was not conclusive enough or the\n              description was incoherent.\n            </p>\n            <p>\n              Remember that you should vote the way that you think the plurality\n              of jurors will vote, since you will be penalized if your vote is\n              in the minority.\n            </p>\n          </Help>\n        </Container>\n      </div>\n    </div>\n  )\n}\n\nconst VotingButton = styled(Button)`\n  width: ${({ width }) => width};\n  margin-bottom: ${({ compactMode }) => (compactMode ? 1 : 0) * GU}px;\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: ${({ compactMode }) => (compactMode ? 'pointer' : '')};\n`\n\nexport default DisputeVoting\n"]},"metadata":{},"sourceType":"module"}