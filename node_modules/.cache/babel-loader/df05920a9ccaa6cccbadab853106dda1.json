{"ast":null,"code":"import _regeneratorRuntime from \"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, privateMap, value) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to set private field on non-instance\");\n  }\n\n  privateMap.set(receiver, value);\n  return value;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, privateMap) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to get private field on non-instance\");\n  }\n\n  return privateMap.get(receiver);\n};\n\nvar _org, _provider;\n\nimport TransactionPath from './TransactionPath';\nimport { calculateTransactionPath } from '../utils/path/calculatePath';\nimport { describeTransactionPath } from '../utils/descriptions';\n\nvar TransactionIntent =\n/*#__PURE__*/\nfunction () {\n  function TransactionIntent(data, org, provider) {\n    _classCallCheck(this, TransactionIntent);\n\n    _org.set(this, void 0);\n\n    _provider.set(this, void 0);\n\n    __classPrivateFieldSet(this, _org, org);\n\n    __classPrivateFieldSet(this, _provider, provider);\n\n    this.contractAddress = data.contractAddress;\n    this.functionArgs = data.functionArgs;\n    this.functionName = data.functionName;\n  }\n\n  _createClass(TransactionIntent, [{\n    key: \"paths\",\n    value: function () {\n      var _paths = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(account, // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      options) {\n        var _this = this;\n\n        var apps, _ref, forwardingFeePretransaction, path, describedPath;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return __classPrivateFieldGet(this, _org).apps();\n\n              case 2:\n                apps = _context.sent;\n                _context.next = 5;\n                return calculateTransactionPath(account, this.contractAddress, this.functionName, this.functionArgs, apps, __classPrivateFieldGet(this, _provider));\n\n              case 5:\n                _ref = _context.sent;\n                forwardingFeePretransaction = _ref.forwardingFeePretransaction;\n                path = _ref.path;\n                _context.next = 10;\n                return describeTransactionPath(path, apps, __classPrivateFieldGet(this, _provider));\n\n              case 10:\n                describedPath = _context.sent;\n                return _context.abrupt(\"return\", new TransactionPath({\n                  apps: apps.filter(function (app) {\n                    return path.map(function (transaction) {\n                      return transaction.to;\n                    }).some(function (address) {\n                      return address === app.address;\n                    });\n                  }),\n                  destination: apps.find(function (app) {\n                    return app.address == _this.contractAddress;\n                  }),\n                  forwardingFeePretransaction: forwardingFeePretransaction,\n                  transactions: describedPath\n                }));\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function paths(_x, _x2) {\n        return _paths.apply(this, arguments);\n      }\n\n      return paths;\n    }()\n  }, {\n    key: \"transactions\",\n    value: function () {\n      var _transactions = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(account, options) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.paths(account, options);\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent.transactions);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function transactions(_x3, _x4) {\n        return _transactions.apply(this, arguments);\n      }\n\n      return transactions;\n    }()\n  }]);\n\n  return TransactionIntent;\n}();\n\nexport { TransactionIntent as default };\n_org = new WeakMap(), _provider = new WeakMap();","map":null,"metadata":{},"sourceType":"module"}