{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  query AppealsByTaker($taker: Bytes!) {\\n    appeals(where: { taker: $taker }) {\\n      id\\n      round {\\n        number\\n        settledPenalties\\n        dispute {\\n          id\\n          finalRuling\\n          lastRoundId\\n          rounds {\\n            jurorsNumber\\n            number\\n          }\\n        }\\n      }\\n      appealedRuling\\n      appealDeposit\\n      taker\\n      opposedRuling\\n      confirmAppealDeposit\\n      settled\\n      settledAt\\n    }\\n  }\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  query AppealsByMaker($maker: Bytes!) {\\n    appeals(where: { maker: $maker }) {\\n      id\\n      round {\\n        number\\n        settledPenalties\\n        dispute {\\n          id\\n          finalRuling\\n          lastRoundId\\n          rounds {\\n            jurorsNumber\\n            number\\n          }\\n        }\\n      }\\n      maker\\n      appealedRuling\\n      appealDeposit\\n      opposedRuling\\n      confirmAppealDeposit\\n      settled\\n      settledAt\\n    }\\n  }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import gql from'graphql-tag';export var AppealsByMaker=gql(_templateObject());export var AppealsByTaker=gql(_templateObject2());","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/queries/appeals.js"],"names":["gql","AppealsByMaker","AppealsByTaker"],"mappings":"21CAAA,MAAOA,CAAAA,GAAP,KAAgB,aAAhB,CAEA,MAAO,IAAMC,CAAAA,cAAc,CAAGD,GAAH,mBAApB,CA4BP,MAAO,IAAME,CAAAA,cAAc,CAAGF,GAAH,oBAApB","sourcesContent":["import gql from 'graphql-tag'\n\nexport const AppealsByMaker = gql`\n  query AppealsByMaker($maker: Bytes!) {\n    appeals(where: { maker: $maker }) {\n      id\n      round {\n        number\n        settledPenalties\n        dispute {\n          id\n          finalRuling\n          lastRoundId\n          rounds {\n            jurorsNumber\n            number\n          }\n        }\n      }\n      maker\n      appealedRuling\n      appealDeposit\n      opposedRuling\n      confirmAppealDeposit\n      settled\n      settledAt\n    }\n  }\n`\n\nexport const AppealsByTaker = gql`\n  query AppealsByTaker($taker: Bytes!) {\n    appeals(where: { taker: $taker }) {\n      id\n      round {\n        number\n        settledPenalties\n        dispute {\n          id\n          finalRuling\n          lastRoundId\n          rounds {\n            jurorsNumber\n            number\n          }\n        }\n      }\n      appealedRuling\n      appealDeposit\n      taker\n      opposedRuling\n      confirmAppealDeposit\n      settled\n      settledAt\n    }\n  }\n`\n"]},"metadata":{},"sourceType":"module"}