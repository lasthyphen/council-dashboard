{"ast":null,"code":"\"use strict\"; // Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\n\nvar _classCallCheck = require(\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/createClass\");\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WalletLinkRelay = void 0;\n\nvar bind_decorator_1 = __importDefault(require(\"bind-decorator\"));\n\nvar rxjs_1 = require(\"rxjs\");\n\nvar operators_1 = require(\"rxjs/operators\");\n\nvar WalletLinkConnection_1 = require(\"../connection/WalletLinkConnection\");\n\nvar util_1 = require(\"../util\");\n\nvar aes256gcm = __importStar(require(\"./aes256gcm\"));\n\nvar Session_1 = require(\"./Session\");\n\nvar Web3Method_1 = require(\"./Web3Method\");\n\nvar Web3RequestCanceledMessage_1 = require(\"./Web3RequestCanceledMessage\");\n\nvar Web3RequestMessage_1 = require(\"./Web3RequestMessage\");\n\nvar Web3Response_1 = require(\"./Web3Response\");\n\nvar Web3ResponseMessage_1 = require(\"./Web3ResponseMessage\");\n\nvar WalletLinkRelayAbstract_1 = require(\"./WalletLinkRelayAbstract\");\n\nvar WalletLinkRelay =\n/*#__PURE__*/\nfunction () {\n  function WalletLinkRelay(options) {\n    var _this = this;\n\n    _classCallCheck(this, WalletLinkRelay);\n\n    this.accountsCallback = null;\n    this.chainIdCallback = null;\n    this.jsonRpcUrlCallback = null;\n    this.appName = \"\";\n    this.appLogoUrl = null;\n    this.walletLinkUrl = options.walletLinkUrl;\n    this.storage = options.storage;\n    this.session = Session_1.Session.load(options.storage) || new Session_1.Session(options.storage).save();\n    this.relayEventManager = options.relayEventManager;\n    this.connection = new WalletLinkConnection_1.WalletLinkConnection(this.session.id, this.session.key, this.walletLinkUrl);\n    this.connection.incomingEvent$.pipe(operators_1.filter(function (m) {\n      return m.event === \"Web3Response\";\n    })).subscribe({\n      next: this.handleIncomingEvent\n    }); // if session is marked destroyed, reset and reload\n\n    this.connection.sessionConfig$.pipe(operators_1.filter(function (c) {\n      return !!c.metadata && c.metadata.__destroyed === \"1\";\n    })).subscribe({\n      next: this.resetAndReload\n    });\n    this.connection.sessionConfig$.pipe(operators_1.filter(function (c) {\n      return c.metadata && c.metadata.WalletUsername !== undefined;\n    })).pipe(operators_1.mergeMap(function (c) {\n      return aes256gcm.decrypt(c.metadata.WalletUsername, _this.session.secret);\n    })).subscribe({\n      next: function next(walletUsername) {\n        _this.storage.setItem(WalletLinkRelayAbstract_1.WALLET_USER_NAME_KEY, walletUsername);\n      }\n    });\n    this.connection.sessionConfig$.pipe(operators_1.filter(function (c) {\n      return c.metadata && c.metadata.ChainId !== undefined;\n    })).pipe(operators_1.mergeMap(function (c) {\n      return aes256gcm.decrypt(c.metadata.ChainId, _this.session.secret);\n    })).pipe(operators_1.distinctUntilChanged()).subscribe({\n      next: function next(chainId) {\n        if (_this.chainIdCallback) {\n          _this.chainIdCallback(chainId);\n        }\n      }\n    });\n    this.connection.sessionConfig$.pipe(operators_1.filter(function (c) {\n      return c.metadata && c.metadata.JsonRpcUrl !== undefined;\n    })).pipe(operators_1.mergeMap(function (c) {\n      return aes256gcm.decrypt(c.metadata.JsonRpcUrl, _this.session.secret);\n    })).pipe(operators_1.distinctUntilChanged()).subscribe({\n      next: function next(jsonRpcURl) {\n        if (_this.jsonRpcUrlCallback) {\n          _this.jsonRpcUrlCallback(jsonRpcURl);\n        }\n      }\n    });\n    this.connection.sessionConfig$.pipe(operators_1.filter(function (c) {\n      return c.metadata && c.metadata.EthereumAddress !== undefined;\n    })).pipe(operators_1.mergeMap(function (c) {\n      return aes256gcm.decrypt(c.metadata.EthereumAddress, _this.session.secret);\n    })).subscribe({\n      next: function next(selectedAddress) {\n        if (_this.accountsCallback) {\n          _this.accountsCallback([selectedAddress]);\n        }\n\n        if (WalletLinkRelay.accountRequestCallbackIds.size > 0) {\n          // We get the ethereum address from the metadata.  If for whatever\n          // reason we don't get a response via an explicit web3 message\n          // we can still fulfill the eip1102 request.\n          Array.from(WalletLinkRelay.accountRequestCallbackIds.values()).forEach(function (id) {\n            var message = Web3ResponseMessage_1.Web3ResponseMessage({\n              id: id,\n              response: Web3Response_1.RequestEthereumAccountsResponse([selectedAddress])\n            });\n\n            _this.invokeCallback(Object.assign(Object.assign({}, message), {\n              id: id\n            }));\n          });\n          WalletLinkRelay.accountRequestCallbackIds.clear();\n        }\n      }\n    });\n    this.ui = options.walletLinkUIConstructor({\n      walletLinkUrl: options.walletLinkUrl,\n      version: options.version,\n      darkMode: options.darkMode,\n      session: this.session,\n      connected$: this.connection.connected$\n    });\n    this.connection.connect();\n  }\n\n  _createClass(WalletLinkRelay, [{\n    key: \"attachUI\",\n    value: function attachUI() {\n      this.ui.attach();\n    }\n  }, {\n    key: \"resetAndReload\",\n    value: function resetAndReload() {\n      var _this2 = this;\n\n      this.connection.setSessionMetadata(\"__destroyed\", \"1\").pipe(operators_1.timeout(1000), operators_1.catchError(function (_) {\n        return rxjs_1.of(null);\n      })).subscribe(function (_) {\n        _this2.connection.destroy();\n\n        _this2.storage.clear();\n\n        _this2.ui.reloadUI();\n      });\n    }\n  }, {\n    key: \"setAppInfo\",\n    value: function setAppInfo(appName, appLogoUrl) {\n      this.appName = appName;\n      this.appLogoUrl = appLogoUrl;\n    }\n  }, {\n    key: \"getStorageItem\",\n    value: function getStorageItem(key) {\n      return this.storage.getItem(key);\n    }\n  }, {\n    key: \"setStorageItem\",\n    value: function setStorageItem(key, value) {\n      this.storage.setItem(key, value);\n    }\n  }, {\n    key: \"childRequestEthereumAccounts\",\n    value: function childRequestEthereumAccounts(childSessionId, childSessionSecret, dappName, dappLogoURL, dappURL) {\n      return this.sendChildRequest({\n        method: Web3Method_1.Web3Method.childRequestEthereumAccounts,\n        params: {\n          sessionId: childSessionId,\n          sessionSecret: childSessionSecret,\n          appName: dappName,\n          appLogoURL: dappLogoURL,\n          appURL: dappURL\n        }\n      });\n    }\n  }, {\n    key: \"requestEthereumAccounts\",\n    value: function requestEthereumAccounts() {\n      return this.sendRequest({\n        method: Web3Method_1.Web3Method.requestEthereumAccounts,\n        params: {\n          appName: this.appName,\n          appLogoUrl: this.appLogoUrl || null\n        }\n      });\n    }\n  }, {\n    key: \"signEthereumMessage\",\n    value: function signEthereumMessage(message, address, addPrefix, typedDataJson) {\n      return this.sendRequest({\n        method: Web3Method_1.Web3Method.signEthereumMessage,\n        params: {\n          message: util_1.hexStringFromBuffer(message, true),\n          address: address,\n          addPrefix: addPrefix,\n          typedDataJson: typedDataJson || null\n        }\n      });\n    }\n  }, {\n    key: \"ethereumAddressFromSignedMessage\",\n    value: function ethereumAddressFromSignedMessage(message, signature, addPrefix) {\n      return this.sendRequest({\n        method: Web3Method_1.Web3Method.ethereumAddressFromSignedMessage,\n        params: {\n          message: util_1.hexStringFromBuffer(message, true),\n          signature: util_1.hexStringFromBuffer(signature, true),\n          addPrefix: addPrefix\n        }\n      });\n    }\n  }, {\n    key: \"signEthereumTransaction\",\n    value: function signEthereumTransaction(params) {\n      return this.sendRequest({\n        method: Web3Method_1.Web3Method.signEthereumTransaction,\n        params: {\n          fromAddress: params.fromAddress,\n          toAddress: params.toAddress,\n          weiValue: util_1.bigIntStringFromBN(params.weiValue),\n          data: util_1.hexStringFromBuffer(params.data, true),\n          nonce: params.nonce,\n          gasPriceInWei: params.gasPriceInWei ? util_1.bigIntStringFromBN(params.gasPriceInWei) : null,\n          maxFeePerGas: params.gasPriceInWei ? util_1.bigIntStringFromBN(params.gasPriceInWei) : null,\n          maxPriorityFeePerGas: params.gasPriceInWei ? util_1.bigIntStringFromBN(params.gasPriceInWei) : null,\n          gasLimit: params.gasLimit ? util_1.bigIntStringFromBN(params.gasLimit) : null,\n          chainId: params.chainId,\n          shouldSubmit: false\n        }\n      });\n    }\n  }, {\n    key: \"signAndSubmitEthereumTransaction\",\n    value: function signAndSubmitEthereumTransaction(params) {\n      return this.sendRequest({\n        method: Web3Method_1.Web3Method.signEthereumTransaction,\n        params: {\n          fromAddress: params.fromAddress,\n          toAddress: params.toAddress,\n          weiValue: util_1.bigIntStringFromBN(params.weiValue),\n          data: util_1.hexStringFromBuffer(params.data, true),\n          nonce: params.nonce,\n          gasPriceInWei: params.gasPriceInWei ? util_1.bigIntStringFromBN(params.gasPriceInWei) : null,\n          maxFeePerGas: params.maxFeePerGas ? util_1.bigIntStringFromBN(params.maxFeePerGas) : null,\n          maxPriorityFeePerGas: params.maxPriorityFeePerGas ? util_1.bigIntStringFromBN(params.maxPriorityFeePerGas) : null,\n          gasLimit: params.gasLimit ? util_1.bigIntStringFromBN(params.gasLimit) : null,\n          chainId: params.chainId,\n          shouldSubmit: true\n        }\n      });\n    }\n  }, {\n    key: \"submitEthereumTransaction\",\n    value: function submitEthereumTransaction(signedTransaction, chainId) {\n      return this.sendRequest({\n        method: Web3Method_1.Web3Method.submitEthereumTransaction,\n        params: {\n          signedTransaction: util_1.hexStringFromBuffer(signedTransaction, true),\n          chainId: chainId\n        }\n      });\n    }\n  }, {\n    key: \"scanQRCode\",\n    value: function scanQRCode(regExp) {\n      return this.sendRequest({\n        method: Web3Method_1.Web3Method.scanQRCode,\n        params: {\n          regExp: regExp\n        }\n      });\n    }\n  }, {\n    key: \"arbitraryRequest\",\n    value: function arbitraryRequest(data) {\n      return this.sendRequest({\n        method: Web3Method_1.Web3Method.arbitrary,\n        params: {\n          data: data\n        }\n      });\n    }\n  }, {\n    key: \"addEthereumChain\",\n    value: function addEthereumChain(chainId, blockExplorerUrls, chainName, iconUrls, nativeCurrency) {\n      return this.sendRequest({\n        method: Web3Method_1.Web3Method.addEthereumChain,\n        params: {\n          chainId: chainId,\n          blockExplorerUrls: blockExplorerUrls,\n          chainName: chainName,\n          iconUrls: iconUrls,\n          nativeCurrency: nativeCurrency\n        }\n      });\n    }\n    /**\n     *\n     * @param request a request to connect the child session using a parent session's connection\n     *\n     * A note on why we're not using the sendRequest method.  The sendRequest function doesn't have\n     * any way to tell when a message has been sent - it either times out after 60 seconds, or\n     * waits until it gets a response from the mobile client.  In the case of sending a child request,\n     * we don't wait for a response from the mobile client, we continue as soon as we know the server\n     * has received the message.  Hence why we have a separate method here.\n     */\n\n  }, {\n    key: \"sendChildRequest\",\n    value: function sendChildRequest(request) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        var id = util_1.randomBytesHex(8);\n        var message = Web3RequestMessage_1.Web3RequestMessage({\n          id: id,\n          request: request\n        });\n\n        _this3.publishEvent(\"Web3Request\", message, true).subscribe({\n          next: function next(ret) {\n            resolve(Web3Response_1.ChildRequestEthereumAccountsResponse(ret));\n          },\n          error: function error(err) {\n            reject(new Error(err.message));\n          }\n        });\n      });\n    }\n  }, {\n    key: \"sendRequest\",\n    value: function sendRequest(request) {\n      var _this4 = this;\n\n      return new Promise(function (resolve, reject) {\n        var _a;\n\n        var hideSnackbarItem = null;\n        var id = util_1.randomBytesHex(8);\n        var isRequestAccounts = request.method === Web3Method_1.Web3Method.requestEthereumAccounts;\n        var isSwitchEthereumChain = request.method === Web3Method_1.Web3Method.switchEthereumChain;\n\n        var cancel = function cancel() {\n          _this4.publishWeb3RequestCanceledEvent(id);\n\n          _this4.handleWeb3ResponseMessage(Web3ResponseMessage_1.Web3ResponseMessage({\n            id: id,\n            response: Web3Response_1.ErrorResponse(request.method, \"User rejected request\")\n          }));\n\n          hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n        };\n\n        if (isRequestAccounts) {\n          var userAgent = ((_a = window === null || window === void 0 ? void 0 : window.navigator) === null || _a === void 0 ? void 0 : _a.userAgent) || null;\n\n          if (userAgent && /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(userAgent)) {\n            window.location.href = \"https://go.cb-w.com/xoXnYwQimhb?cb_url=\".concat(window.location.href);\n            return;\n          }\n\n          if (_this4.ui.inlineAccountsResponse()) {\n            var onAccounts = function onAccounts(accounts) {\n              _this4.handleWeb3ResponseMessage(Web3ResponseMessage_1.Web3ResponseMessage({\n                id: id,\n                response: Web3Response_1.RequestEthereumAccountsResponse(accounts)\n              }));\n            };\n\n            _this4.ui.requestEthereumAccounts({\n              onCancel: cancel,\n              onAccounts: onAccounts\n            });\n          } else {\n            _this4.ui.requestEthereumAccounts({\n              onCancel: cancel\n            });\n          }\n\n          WalletLinkRelay.accountRequestCallbackIds.add(id);\n        } else if (request.method === Web3Method_1.Web3Method.switchEthereumChain || request.method === Web3Method_1.Web3Method.addEthereumChain) {\n          var _cancel = function _cancel() {\n            _this4.handleWeb3ResponseMessage(Web3ResponseMessage_1.Web3ResponseMessage({\n              id: id,\n              response: Web3Response_1.SwitchEthereumChainResponse(false)\n            }));\n          };\n\n          var approve = function approve() {\n            _this4.handleWeb3ResponseMessage(Web3ResponseMessage_1.Web3ResponseMessage({\n              id: id,\n              response: Web3Response_1.SwitchEthereumChainResponse(true)\n            }));\n          };\n\n          _this4.ui.switchEthereumChain({\n            onCancel: _cancel,\n            onApprove: approve,\n            chainId: request.params.chainId\n          });\n\n          if (!_this4.ui.inlineSwitchEthereumChain()) {\n            hideSnackbarItem = _this4.ui.showConnecting({\n              onCancel: _cancel,\n              onResetConnection: _this4.resetAndReload\n            });\n          }\n        } else {\n          hideSnackbarItem = _this4.ui.showConnecting({\n            onCancel: cancel,\n            onResetConnection: _this4.resetAndReload\n          });\n        }\n\n        _this4.relayEventManager.callbacks.set(id, function (response) {\n          _this4.ui.hideRequestEthereumAccounts();\n\n          hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n\n          if (response.errorMessage) {\n            return reject(new Error(response.errorMessage));\n          }\n\n          resolve(response);\n        });\n\n        if (isRequestAccounts && _this4.ui.inlineAccountsResponse() || isSwitchEthereumChain && _this4.ui.inlineSwitchEthereumChain()) {\n          return;\n        }\n\n        _this4.publishWeb3RequestEvent(id, request);\n      });\n    }\n  }, {\n    key: \"setConnectDisabled\",\n    value: function setConnectDisabled(disabled) {\n      this.ui.setConnectDisabled(disabled);\n    }\n  }, {\n    key: \"setAccountsCallback\",\n    value: function setAccountsCallback(accountsCallback) {\n      this.accountsCallback = accountsCallback;\n    }\n  }, {\n    key: \"setChainIdCallback\",\n    value: function setChainIdCallback(chainIdCallback) {\n      this.chainIdCallback = chainIdCallback;\n    }\n  }, {\n    key: \"setJsonRpcUrlCallback\",\n    value: function setJsonRpcUrlCallback(jsonRpcUrlCallback) {\n      this.jsonRpcUrlCallback = jsonRpcUrlCallback;\n    }\n  }, {\n    key: \"publishWeb3RequestEvent\",\n    value: function publishWeb3RequestEvent(id, request) {\n      var _this5 = this;\n\n      var message = Web3RequestMessage_1.Web3RequestMessage({\n        id: id,\n        request: request\n      });\n      this.publishEvent(\"Web3Request\", message, true).subscribe({\n        error: function error(err) {\n          _this5.handleWeb3ResponseMessage(Web3ResponseMessage_1.Web3ResponseMessage({\n            id: message.id,\n            response: {\n              method: message.request.method,\n              errorMessage: err.message\n            }\n          }));\n        }\n      });\n    }\n  }, {\n    key: \"publishWeb3RequestCanceledEvent\",\n    value: function publishWeb3RequestCanceledEvent(id) {\n      var message = Web3RequestCanceledMessage_1.Web3RequestCanceledMessage(id);\n      this.publishEvent(\"Web3RequestCanceled\", message, false).subscribe();\n    }\n  }, {\n    key: \"publishEvent\",\n    value: function publishEvent(event, message, callWebhook) {\n      var _this6 = this;\n\n      var secret = this.session.secret;\n      return new rxjs_1.Observable(function (subscriber) {\n        aes256gcm.encrypt(JSON.stringify(Object.assign(Object.assign({}, message), {\n          origin: location.origin\n        })), secret).then(function (encrypted) {\n          subscriber.next(encrypted);\n          subscriber.complete();\n        });\n      }).pipe(operators_1.mergeMap(function (encrypted) {\n        return _this6.connection.publishEvent(event, encrypted, callWebhook);\n      }));\n    }\n  }, {\n    key: \"handleIncomingEvent\",\n    value: function handleIncomingEvent(event) {\n      var _this7 = this;\n\n      try {\n        aes256gcm.decrypt(event.data, this.session.secret).pipe(operators_1.map(function (c) {\n          return JSON.parse(c);\n        })).subscribe({\n          next: function next(json) {\n            var message = Web3ResponseMessage_1.isWeb3ResponseMessage(json) ? json : null;\n\n            if (!message) {\n              return;\n            }\n\n            _this7.handleWeb3ResponseMessage(message);\n          }\n        });\n      } catch (_a) {\n        return;\n      }\n    }\n  }, {\n    key: \"handleWeb3ResponseMessage\",\n    value: function handleWeb3ResponseMessage(message) {\n      var _this8 = this;\n\n      var response = message.response;\n\n      if (Web3Response_1.isRequestEthereumAccountsResponse(response)) {\n        Array.from(WalletLinkRelay.accountRequestCallbackIds.values()).forEach(function (id) {\n          return _this8.invokeCallback(Object.assign(Object.assign({}, message), {\n            id: id\n          }));\n        });\n        WalletLinkRelay.accountRequestCallbackIds.clear();\n        return;\n      }\n\n      this.invokeCallback(message);\n    }\n  }, {\n    key: \"invokeCallback\",\n    value: function invokeCallback(message) {\n      var callback = this.relayEventManager.callbacks.get(message.id);\n\n      if (callback) {\n        callback(message.response);\n        this.relayEventManager.callbacks.delete(message.id);\n      }\n    }\n  }, {\n    key: \"switchEthereumChain\",\n    value: function switchEthereumChain(chainId) {\n      return this.sendRequest({\n        method: Web3Method_1.Web3Method.switchEthereumChain,\n        params: {\n          chainId: chainId\n        }\n      });\n    }\n  }]);\n\n  return WalletLinkRelay;\n}();\n\nWalletLinkRelay.accountRequestCallbackIds = new Set();\n\n__decorate([bind_decorator_1.default], WalletLinkRelay.prototype, \"resetAndReload\", null);\n\n__decorate([bind_decorator_1.default], WalletLinkRelay.prototype, \"handleIncomingEvent\", null);\n\nexports.WalletLinkRelay = WalletLinkRelay;","map":null,"metadata":{},"sourceType":"script"}