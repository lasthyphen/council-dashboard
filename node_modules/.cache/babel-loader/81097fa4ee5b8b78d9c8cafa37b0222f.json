{"ast":null,"code":"import _slicedToArray from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _styled8 from\"styled-components\";import _styled7 from\"styled-components\";import _styled6 from\"styled-components\";import _styled5 from\"styled-components\";import _styled4 from\"styled-components\";import _styled3 from\"styled-components\";import _styled2 from\"styled-components\";import _styled from\"styled-components\";import React,{useMemo}from'react';import{Distribution,GU,Help,Tag,textStyle,useTheme}from'@aragon/ui';import{useWallet}from'../../providers/Wallet';import{isValidOutcome,getTotalOutcomeWeight,filterByValidOutcome,juryOutcomeToString,OUTCOMES}from'../../utils/crvoting-utils';import{getPercentage}from'../../lib/math-utils';import{getJurorDraft}from'../../utils/juror-draft-utils';import{getDisputeLastRound}from'../../utils/dispute-utils';var getOutcomeColor=function getOutcomeColor(outcome,theme){if(outcome===OUTCOMES.InFavor)return theme.positive;if(outcome===OUTCOMES.Against)return theme.negative;return theme.hint;};var _StyledSpan=_styled(\"span\").withConfig({displayName:\"DisputeCurrentRuling___StyledSpan\",componentId:\"sc-1oqq48r-0\"})([\"\",\" color:\",\"\"],function(p){return p._css;},function(p){return p._css2;});var _StyledDiv=_styled(\"div\").withConfig({displayName:\"DisputeCurrentRuling___StyledDiv\",componentId:\"sc-1oqq48r-1\"})([\"display:flex;align-items:center;justify-content:space-between;width:100%;\"]);var _StyledDiv2=_styled(\"div\").withConfig({displayName:\"DisputeCurrentRuling___StyledDiv2\",componentId:\"sc-1oqq48r-2\"})([\"display:flex;align-items:center;\"]);var _StyledDiv3=_styled(\"div\").withConfig({displayName:\"DisputeCurrentRuling___StyledDiv3\",componentId:\"sc-1oqq48r-3\"})([\"background:\",\";width:8px;height:8px;margin-right:\",\"px;border-radius:50%;\"],function(p){return p._css3;},function(p){return p._css4;});var _StyledSpan2=_styled(\"span\").withConfig({displayName:\"DisputeCurrentRuling___StyledSpan2\",componentId:\"sc-1oqq48r-4\"})([\"color:\",\";width:220px;\"],function(p){return p._css5;});var _StyledSpan3=_styled(\"span\").withConfig({displayName:\"DisputeCurrentRuling___StyledSpan3\",componentId:\"sc-1oqq48r-5\"})([\"margin-right:\",\"px;\"],function(p){return p._css6;});var _StyledDiv4=_styled(\"div\").withConfig({displayName:\"DisputeCurrentRuling___StyledDiv4\",componentId:\"sc-1oqq48r-6\"})([\"display:flex;align-items:center;\"]);var _StyledSpan4=_styled(\"span\").withConfig({displayName:\"DisputeCurrentRuling___StyledSpan4\",componentId:\"sc-1oqq48r-7\"})([\"color:\",\";margin-right:\",\"px;\"],function(p){return p._css7;},function(p){return p._css8;});function DisputeCurrentRuling(_ref){var dispute=_ref.dispute;var theme=useTheme();var wallet=useWallet();var lastRound=getDisputeLastRound(dispute);var jurorDraft=getJurorDraft(lastRound,wallet.account);var _ref2=jurorDraft||{},_ref2$outcome=_ref2.outcome,myOutcome=_ref2$outcome===void 0?0:_ref2$outcome,_ref2$weight=_ref2.weight,myWeight=_ref2$weight===void 0?0:_ref2$weight;var distribution=useOutcomeDistribution(lastRound);// distribution is sorted by weight so we can return colors in corresponding order\nvar colors=distribution.map(function(_ref3){var outcome=_ref3.outcome;return getOutcomeColor(outcome,theme);});var myDistributionIndex=distribution.findIndex(function(_ref4){var outcome=_ref4.outcome;return outcome===myOutcome;});return React.createElement(\"div\",null,React.createElement(Distribution,{heading:React.createElement(_StyledSpan,{_css:textStyle('label2'),_css2:theme.contentSecondary},\"Current ruling\"),items:distribution.map(function(_ref5){var outcome=_ref5.outcome,weight=_ref5.weight;return{item:juryOutcomeToString(outcome),percentage:weight};}),renderFullLegendItem:function renderFullLegendItem(_ref6){var color=_ref6.color,item=_ref6.item,index=_ref6.index,percentage=_ref6.percentage;// We'll show the juror voting weight hint if any juror has been drafted more than once for this last round\nvar showVotingWeightHint=index===0&&lastRound.jurorsNumber!==lastRound.jurors.length;var showMyWeight=myWeight>1;return React.createElement(_StyledDiv,null,React.createElement(_StyledDiv2,null,React.createElement(_StyledDiv3,{_css3:color,_css4:1*GU}),React.createElement(_StyledSpan2,{key:index,_css5:theme.contentSecondary},item),React.createElement(_StyledSpan3,{_css6:1*GU},percentage,\"%\"),myDistributionIndex===index&&React.createElement(Tag,null,\"You\")),showVotingWeightHint&&React.createElement(_StyledDiv4,null,React.createElement(_StyledSpan4,{_css7:theme.help,_css8:0.5*GU},showMyWeight?'Your voting weight':'Voting weight'),React.createElement(Help,{hint:\"\"},showMyWeight?'You have been':'The same juror can be',' ',\"drafted multiple times to arbitrate the same dispute for the same round. When that happens,\",' ',showMyWeight?'your':'their',\" voting weight\",' ',showMyWeight?'is':'will be',\" proportional to the number of times \",showMyWeight?'you':'they',\" are drafted.\")));},colors:colors}));}var useFilteredOutcomes=function useFilteredOutcomes(round){var jurors=round.jurors;return useMemo(function(){var totalValidOutcomes=jurors.filter(function(_ref7){var outcome=_ref7.outcome;return isValidOutcome(outcome);});return[totalValidOutcomes,filterByValidOutcome(totalValidOutcomes)];},[jurors]);};function useOutcomeDistribution(round){var _useFilteredOutcomes=useFilteredOutcomes(round),_useFilteredOutcomes2=_slicedToArray(_useFilteredOutcomes,2),totalValidOutcomes=_useFilteredOutcomes2[0],filteredOutcomes=_useFilteredOutcomes2[1];return useMemo(function(){var totalWeight=getTotalOutcomeWeight(totalValidOutcomes);return filteredOutcomes.map(function(_ref8){var outcomes=_ref8.outcomes,outcome=_ref8.outcome;var partialWeight=getTotalOutcomeWeight(outcomes);return{outcome:outcome,weight:getPercentage(partialWeight,totalWeight)};}).sort(function(outcome1,outcome2){return outcome2.weight-outcome1.weight;});},[filteredOutcomes,totalValidOutcomes]);}export default DisputeCurrentRuling;","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/Disputes/DisputeCurrentRuling.js"],"names":["React","useMemo","Distribution","GU","Help","Tag","textStyle","useTheme","useWallet","isValidOutcome","getTotalOutcomeWeight","filterByValidOutcome","juryOutcomeToString","OUTCOMES","getPercentage","getJurorDraft","getDisputeLastRound","getOutcomeColor","outcome","theme","InFavor","positive","Against","negative","hint","DisputeCurrentRuling","dispute","wallet","lastRound","jurorDraft","account","myOutcome","weight","myWeight","distribution","useOutcomeDistribution","colors","map","myDistributionIndex","findIndex","contentSecondary","item","percentage","color","index","showVotingWeightHint","jurorsNumber","jurors","length","showMyWeight","help","useFilteredOutcomes","round","totalValidOutcomes","filter","filteredOutcomes","totalWeight","outcomes","partialWeight","sort","outcome1","outcome2"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\nimport { Distribution, GU, Help, Tag, textStyle, useTheme } from '@aragon/ui'\nimport { useWallet } from '../../providers/Wallet'\nimport {\n  isValidOutcome,\n  getTotalOutcomeWeight,\n  filterByValidOutcome,\n  juryOutcomeToString,\n  OUTCOMES,\n} from '../../utils/crvoting-utils'\nimport { getPercentage } from '../../lib/math-utils'\nimport { getJurorDraft } from '../../utils/juror-draft-utils'\nimport { getDisputeLastRound } from '../../utils/dispute-utils'\n\nconst getOutcomeColor = (outcome, theme) => {\n  if (outcome === OUTCOMES.InFavor) return theme.positive\n  if (outcome === OUTCOMES.Against) return theme.negative\n\n  return theme.hint\n}\n\nfunction DisputeCurrentRuling({ dispute }) {\n  const theme = useTheme()\n  const wallet = useWallet()\n\n  const lastRound = getDisputeLastRound(dispute)\n  const jurorDraft = getJurorDraft(lastRound, wallet.account)\n\n  const { outcome: myOutcome = 0, weight: myWeight = 0 } = jurorDraft || {}\n  const distribution = useOutcomeDistribution(lastRound)\n\n  // distribution is sorted by weight so we can return colors in corresponding order\n  const colors = distribution.map(({ outcome }) =>\n    getOutcomeColor(outcome, theme)\n  )\n\n  const myDistributionIndex = distribution.findIndex(\n    ({ outcome }) => outcome === myOutcome\n  )\n\n  return (\n    <div>\n      <Distribution\n        heading={\n          <span\n            css={`\n              ${textStyle('label2')}\n              color: ${theme.contentSecondary}\n            `}\n          >\n            Current ruling\n          </span>\n        }\n        items={distribution.map(({ outcome, weight }) => ({\n          item: juryOutcomeToString(outcome),\n          percentage: weight,\n        }))}\n        renderFullLegendItem={({ color, item, index, percentage }) => {\n          // We'll show the juror voting weight hint if any juror has been drafted more than once for this last round\n          const showVotingWeightHint =\n            index === 0 && lastRound.jurorsNumber !== lastRound.jurors.length\n          const showMyWeight = myWeight > 1\n\n          return (\n            <div\n              css={`\n                display: flex;\n                align-items: center;\n                justify-content: space-between;\n                width: 100%;\n              `}\n            >\n              <div\n                css={`\n                  display: flex;\n                  align-items: center;\n                `}\n              >\n                <div\n                  css={`\n                    background: ${color};\n                    width: 8px;\n                    height: 8px;\n                    margin-right: ${1 * GU}px;\n                    border-radius: 50%;\n                  `}\n                />\n\n                <span\n                  key={index}\n                  css={`\n                    color: ${theme.contentSecondary};\n                    width: 220px;\n                  `}\n                >\n                  {item}\n                </span>\n                <span\n                  css={`\n                    margin-right: ${1 * GU}px;\n                  `}\n                >\n                  {percentage}%\n                </span>\n                {myDistributionIndex === index && <Tag>You</Tag>}\n              </div>\n              {showVotingWeightHint && (\n                <div\n                  css={`\n                    display: flex;\n                    align-items: center;\n                  `}\n                >\n                  <span\n                    css={`\n                      color: ${theme.help};\n                      margin-right: ${0.5 * GU}px;\n                    `}\n                  >\n                    {showMyWeight ? 'Your voting weight' : 'Voting weight'}\n                  </span>\n                  <Help hint=\"\">\n                    {showMyWeight ? 'You have been' : 'The same juror can be'}{' '}\n                    drafted multiple times to arbitrate the same dispute for the\n                    same round. When that happens,{' '}\n                    {showMyWeight ? 'your' : 'their'} voting weight{' '}\n                    {showMyWeight ? 'is' : 'will be'} proportional to the number\n                    of times {showMyWeight ? 'you' : 'they'} are drafted.\n                  </Help>\n                </div>\n              )}\n            </div>\n          )\n        }}\n        colors={colors}\n      />\n    </div>\n  )\n}\n\nconst useFilteredOutcomes = round => {\n  const { jurors } = round\n\n  return useMemo(() => {\n    const totalValidOutcomes = jurors.filter(({ outcome }) =>\n      isValidOutcome(outcome)\n    )\n    return [totalValidOutcomes, filterByValidOutcome(totalValidOutcomes)]\n  }, [jurors])\n}\n\nfunction useOutcomeDistribution(round) {\n  const [totalValidOutcomes, filteredOutcomes] = useFilteredOutcomes(round)\n\n  return useMemo(() => {\n    const totalWeight = getTotalOutcomeWeight(totalValidOutcomes)\n\n    return filteredOutcomes\n      .map(({ outcomes, outcome }) => {\n        const partialWeight = getTotalOutcomeWeight(outcomes)\n        return {\n          outcome,\n          weight: getPercentage(partialWeight, totalWeight),\n        }\n      })\n      .sort((outcome1, outcome2) => outcome2.weight - outcome1.weight)\n  }, [filteredOutcomes, totalValidOutcomes])\n}\n\nexport default DisputeCurrentRuling\n"]},"metadata":{},"sourceType":"module"}