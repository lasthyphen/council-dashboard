{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/regenerator\");\n\nvar _toConsumableArray = require(\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _asyncToGenerator = require(\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/inherits\");\n\nvar BaseFilter = require('./base-filter');\n\nvar getBlocksForRange = require('./getBlocksForRange');\n\nvar _require = require('./hexUtils'),\n    incrementHexInt = _require.incrementHexInt;\n\nvar TxFilter =\n/*#__PURE__*/\nfunction (_BaseFilter) {\n  \"use strict\";\n\n  _inherits(TxFilter, _BaseFilter);\n\n  function TxFilter(_ref) {\n    var _this;\n\n    var provider = _ref.provider;\n\n    _classCallCheck(this, TxFilter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TxFilter).call(this));\n    _this.type = 'tx';\n    _this.provider = provider;\n    return _this;\n  }\n\n  _createClass(TxFilter, [{\n    key: \"update\",\n    value: function () {\n      var _update = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref2) {\n        var oldBlock, toBlock, fromBlock, blocks, blockTxHashes, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, block;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                oldBlock = _ref2.oldBlock;\n                toBlock = oldBlock;\n                fromBlock = incrementHexInt(oldBlock);\n                _context.next = 5;\n                return getBlocksForRange({\n                  provider: this.provider,\n                  fromBlock: fromBlock,\n                  toBlock: toBlock\n                });\n\n              case 5:\n                blocks = _context.sent;\n                blockTxHashes = [];\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _iteratorError = undefined;\n                _context.prev = 10;\n\n                for (_iterator = blocks[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  block = _step.value;\n                  blockTxHashes.push.apply(blockTxHashes, _toConsumableArray(block.transactions));\n                } // add to results\n\n\n                _context.next = 18;\n                break;\n\n              case 14:\n                _context.prev = 14;\n                _context.t0 = _context[\"catch\"](10);\n                _didIteratorError = true;\n                _iteratorError = _context.t0;\n\n              case 18:\n                _context.prev = 18;\n                _context.prev = 19;\n\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                  _iterator.return();\n                }\n\n              case 21:\n                _context.prev = 21;\n\n                if (!_didIteratorError) {\n                  _context.next = 24;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 24:\n                return _context.finish(21);\n\n              case 25:\n                return _context.finish(18);\n\n              case 26:\n                this.addResults(blockTxHashes);\n\n              case 27:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[10, 14, 18, 26], [19,, 21, 25]]);\n      }));\n\n      function update(_x) {\n        return _update.apply(this, arguments);\n      }\n\n      return update;\n    }()\n  }]);\n\n  return TxFilter;\n}(BaseFilter);\n\nmodule.exports = TxFilter;","map":null,"metadata":{},"sourceType":"script"}