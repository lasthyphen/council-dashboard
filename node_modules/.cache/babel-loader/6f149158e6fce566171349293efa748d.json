{"ast":null,"code":"import _slicedToArray from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _styled14 from\"styled-components\";import _styled13 from\"styled-components\";import _styled12 from\"styled-components\";import _styled11 from\"styled-components\";import _styled10 from\"styled-components\";import _styled9 from\"styled-components\";import _styled8 from\"styled-components\";import _styled7 from\"styled-components\";import _styled6 from\"styled-components\";import _styled5 from\"styled-components\";import _styled4 from\"styled-components\";import _styled3 from\"styled-components\";import _styled2 from\"styled-components\";import _styled from\"styled-components\";import React,{useCallback,useRef,useState}from'react';import{Button,GU,IconCopy,IconDownload,Info,Link,Switch,TextInput,textStyle,useToast,useTheme}from'@aragon/ui';import useOneTimeCode from'../../../hooks/useOneTimeCode';import{useWallet}from'../../../providers/Wallet';import IconOneTimeCode from\"../../../assets/IconOneTimeCode.svg\";import{getVoteId,saveAutoRevealPreference}from'../../../utils/crvoting-utils';var _StyledButton=_styled(Button).withConfig({displayName:\"CommitPanel___StyledButton\",componentId:\"a92zkh-0\"})([\"margin-top:\",\"px;\"],function(p){return p._css;});var CommitPanel=React.memo(function CommitPanel(_ref){var dispute=_ref.dispute,onCommit=_ref.onCommit,onDone=_ref.onDone,outcome=_ref.outcome;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),codeSaved=_useState2[0],setCodeSaved=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),codeCopied=_useState4[0],setCodeCopied=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),revealService=_useState6[0],setRevealService=_useState6[1];var _useWallet=useWallet(),connectedAccount=_useWallet.account;var _useOneTimeCode=useOneTimeCode(),oneTimeCode=_useOneTimeCode.oneTimeCode,download=_useOneTimeCode.download;var toast=useToast();var handleCommit=useCallback(function(event){event.preventDefault();saveAutoRevealPreference(connectedAccount,getVoteId(dispute.id,dispute.lastRoundId),revealService);onDone();return onCommit(connectedAccount,dispute.id,dispute.lastRoundId,outcome,oneTimeCode,revealService);},[connectedAccount,dispute.id,dispute.lastRoundId,onCommit,onDone,oneTimeCode,outcome,revealService]);var handleDownloadCode=useCallback(function(){download();setCodeSaved(true);},[download]);var handleCopyCode=useCallback(function(){setCodeCopied(true);toast('One-time-use code copied');},[toast]);var handleRevealService=useCallback(function(checked){setRevealService(checked);toast(checked?'Court auto-reveal service enabled':'Court auto-reveal service disabled');},[toast]);return React.createElement(\"form\",{onSubmit:handleCommit},React.createElement(OneTimeCode,{code:oneTimeCode,onDownload:handleDownloadCode,onCopy:handleCopyCode}),React.createElement(RevealService,{onRevealServiceChange:handleRevealService,revealService:revealService}),React.createElement(InfoSection,{commitEndTime:dispute.nextTransition,copiedOrSaved:codeCopied||codeSaved,revealService:revealService}),React.createElement(_StyledButton,{disabled:!(codeSaved||codeCopied),onClick:handleCommit,type:\"submit\",mode:\"strong\",wide:true,_css:2*GU},\"Commit your vote\"));});var _StyledDiv=_styled(\"div\").withConfig({displayName:\"CommitPanel___StyledDiv\",componentId:\"a92zkh-1\"})([\"display:flex;\"]);var _StyledDiv2=_styled(\"div\").withConfig({displayName:\"CommitPanel___StyledDiv2\",componentId:\"a92zkh-2\"})([\"margin-left:\",\"px;\"],function(p){return p._css2;});var _StyledH=_styled(\"h2\").withConfig({displayName:\"CommitPanel___StyledH\",componentId:\"a92zkh-3\"})([\"display:block;\",\";font-weight:600;\"],function(p){return p._css3;});var _StyledSpan=_styled(\"span\").withConfig({displayName:\"CommitPanel___StyledSpan\",componentId:\"a92zkh-4\"})([\"display:block;\",\";margin-top:\",\"px;\"],function(p){return p._css4;},function(p){return p._css5;});var _StyledDiv3=_styled(\"div\").withConfig({displayName:\"CommitPanel___StyledDiv3\",componentId:\"a92zkh-5\"})([\"margin-top:\",\"px;\"],function(p){return p._css6;});var _StyledTextInput=_styled(TextInput).withConfig({displayName:\"CommitPanel___StyledTextInput\",componentId:\"a92zkh-6\"})([\"height:\",\"px;padding:\",\"px \",\"px;\",\";font-weight:600;resize:none;&:read-only{color:\",\";}\"],function(p){return p._css7;},function(p){return p._css8;},function(p){return p._css9;},function(p){return p._css10;},function(p){return p._css11;});var _StyledDiv4=_styled(\"div\").withConfig({displayName:\"CommitPanel___StyledDiv4\",componentId:\"a92zkh-7\"})([\"margin-top:\",\"px;display:flex;\"],function(p){return p._css12;});var _StyledButton2=_styled(Button).withConfig({displayName:\"CommitPanel___StyledButton2\",componentId:\"a92zkh-8\"})([\"margin-right:\",\"px;flex-grow:1;\"],function(p){return p._css13;});var _StyledButton3=_styled(Button).withConfig({displayName:\"CommitPanel___StyledButton3\",componentId:\"a92zkh-9\"})([\"flex-grow:1;\"]);var OneTimeCode=React.memo(function OneTimeCode(_ref2){var code=_ref2.code,onDownload=_ref2.onDownload,onCopy=_ref2.onCopy;var theme=useTheme();var inputRef=useRef(null);var handleInputFocus=useCallback(function(event){return event.target.select();},[]);var handleCopy=useCallback(function(){if(inputRef.current){inputRef.current.focus();try{document.execCommand('copy');onCopy();}catch(err){console.error('Error copying the one-time-use code');}}},[onCopy]);return React.createElement(React.Fragment,null,React.createElement(_StyledDiv,null,React.createElement(\"img\",{height:6*GU,src:IconOneTimeCode,alt:\"\"}),React.createElement(_StyledDiv2,{_css2:2*GU},React.createElement(_StyledH,{_css3:textStyle('body2')},\"One-time-use code\"),React.createElement(_StyledSpan,{_css4:textStyle('body2'),_css5:1*GU},\"Please save the code displayed below for maximum security.\"))),React.createElement(_StyledDiv3,{_css6:2*GU},React.createElement(_StyledTextInput,{ref:inputRef,onFocus:handleInputFocus,multiline:true,readOnly:true,value:code,wide:true,_css7:10*GU,_css8:1.5*GU,_css9:2*GU,_css10:textStyle('body1'),_css11:theme.accent})),React.createElement(_StyledDiv4,{_css12:2*GU},React.createElement(_StyledButton2,{onClick:onDownload,icon:React.createElement(IconDownload,null),label:\"Download\",_css13:2*GU}),React.createElement(_StyledButton3,{onClick:handleCopy,icon:React.createElement(IconCopy,null),label:\"Copy\"})));});var _StyledDiv5=_styled(\"div\").withConfig({displayName:\"CommitPanel___StyledDiv5\",componentId:\"a92zkh-10\"})([\"display:flex;margin-top:\",\"px;align-items:center;\"],function(p){return p._css14;});var _StyledSpan2=_styled(\"span\").withConfig({displayName:\"CommitPanel___StyledSpan2\",componentId:\"a92zkh-11\"})([\"margin-left:\",\"px;\",\";\"],function(p){return p._css15;},function(p){return p._css16;});var _StyledDiv6=_styled(\"div\").withConfig({displayName:\"CommitPanel___StyledDiv6\",componentId:\"a92zkh-12\"})([\"margin-top:\",\"px;\",\";\"],function(p){return p._css17;},function(p){return p._css18;});var RevealService=React.memo(function RevealService(_ref3){var onRevealServiceChange=_ref3.onRevealServiceChange,revealService=_ref3.revealService;return React.createElement(React.Fragment,null,React.createElement(_StyledDiv5,{_css14:4*GU},React.createElement(Switch,{checked:revealService,onChange:onRevealServiceChange}),React.createElement(_StyledSpan2,{_css15:2*GU,_css16:textStyle('body1')},\"Auto-reveal service.\")),React.createElement(_StyledDiv6,{_css17:1*GU,_css18:textStyle('body2')},\"By enabling this feature you trust Aragon One to reveal your vote on your behalf in this and following disputes. You can always turn off this service later if you choose.\",React.createElement(Link,{href:\"https://support.dijets.io/article/43-dispute-lifecycle#onetime\"},\"Learn more\"),\".\"));});var _StyledInfo=_styled(Info).withConfig({displayName:\"CommitPanel___StyledInfo\",componentId:\"a92zkh-13\"})([\"margin-top:\",\"px;\"],function(p){return p._css19;});var InfoSection=React.memo(function InfoSection(_ref4){var revealService=_ref4.revealService;var content=revealService?\"As a safety measure, you must copy or download this code before you can\\n       commit your vote. This code is valid for revealing your vote for this\\n       dispute only. You won\\u2019t be required to enter this code unless a problem\\n       occurs with our services.\":\"You must copy or download this code before you can commit your vote. You\\n       will later be asked to provide this same code to reveal your vote.\\n       Failure to provide the correct code will result in a monetary penalty to\\n       your account.\";return React.createElement(_StyledInfo,{title:!revealService&&'Action requirement',mode:revealService?'info':'warning',_css19:2*GU},content);});export default CommitPanel;","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/Disputes/panels/CommitPanel.js"],"names":["React","useCallback","useRef","useState","Button","GU","IconCopy","IconDownload","Info","Link","Switch","TextInput","textStyle","useToast","useTheme","useOneTimeCode","useWallet","getVoteId","saveAutoRevealPreference","CommitPanel","memo","dispute","onCommit","onDone","outcome","codeSaved","setCodeSaved","codeCopied","setCodeCopied","revealService","setRevealService","connectedAccount","account","oneTimeCode","download","toast","handleCommit","event","preventDefault","id","lastRoundId","handleDownloadCode","handleCopyCode","handleRevealService","checked","nextTransition","OneTimeCode","code","onDownload","onCopy","theme","inputRef","handleInputFocus","target","select","handleCopy","current","focus","document","execCommand","err","console","error","IconOneTimeCode","accent","RevealService","onRevealServiceChange","InfoSection","content"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef, useState } from 'react'\nimport {\n  Button,\n  GU,\n  IconCopy,\n  IconDownload,\n  Info,\n  Link,\n  Switch,\n  TextInput,\n  textStyle,\n  useToast,\n  useTheme,\n} from '@aragon/ui'\nimport useOneTimeCode from '../../../hooks/useOneTimeCode'\nimport { useWallet } from '../../../providers/Wallet'\nimport IconOneTimeCode from '../../../assets/IconOneTimeCode.svg'\nimport {\n  getVoteId,\n  saveAutoRevealPreference,\n} from '../../../utils/crvoting-utils'\n\nconst CommitPanel = React.memo(function CommitPanel({\n  dispute,\n  onCommit,\n  onDone,\n  outcome,\n}) {\n  const [codeSaved, setCodeSaved] = useState(false)\n  const [codeCopied, setCodeCopied] = useState(false)\n  const [revealService, setRevealService] = useState(true)\n  const { account: connectedAccount } = useWallet()\n  const { oneTimeCode, download } = useOneTimeCode()\n  const toast = useToast()\n\n  const handleCommit = useCallback(\n    event => {\n      event.preventDefault()\n      saveAutoRevealPreference(\n        connectedAccount,\n        getVoteId(dispute.id, dispute.lastRoundId),\n        revealService\n      )\n\n      onDone()\n      return onCommit(\n        connectedAccount,\n        dispute.id,\n        dispute.lastRoundId,\n        outcome,\n        oneTimeCode,\n        revealService\n      )\n    },\n    [\n      connectedAccount,\n      dispute.id,\n      dispute.lastRoundId,\n      onCommit,\n      onDone,\n      oneTimeCode,\n      outcome,\n      revealService,\n    ]\n  )\n\n  const handleDownloadCode = useCallback(() => {\n    download()\n    setCodeSaved(true)\n  }, [download])\n\n  const handleCopyCode = useCallback(() => {\n    setCodeCopied(true)\n    toast('One-time-use code copied')\n  }, [toast])\n\n  const handleRevealService = useCallback(\n    checked => {\n      setRevealService(checked)\n      toast(\n        checked\n          ? 'Court auto-reveal service enabled'\n          : 'Court auto-reveal service disabled'\n      )\n    },\n    [toast]\n  )\n\n  return (\n    <form onSubmit={handleCommit}>\n      <OneTimeCode\n        code={oneTimeCode}\n        onDownload={handleDownloadCode}\n        onCopy={handleCopyCode}\n      />\n      <RevealService\n        onRevealServiceChange={handleRevealService}\n        revealService={revealService}\n      />\n      <InfoSection\n        commitEndTime={dispute.nextTransition}\n        copiedOrSaved={codeCopied || codeSaved}\n        revealService={revealService}\n      />\n      <Button\n        css={`\n          margin-top: ${2 * GU}px;\n        `}\n        disabled={!(codeSaved || codeCopied)}\n        onClick={handleCommit}\n        type=\"submit\"\n        mode=\"strong\"\n        wide\n      >\n        Commit your vote\n      </Button>\n    </form>\n  )\n})\n\nconst OneTimeCode = React.memo(function OneTimeCode({\n  code,\n  onDownload,\n  onCopy,\n}) {\n  const theme = useTheme()\n  const inputRef = useRef(null)\n\n  const handleInputFocus = useCallback(event => event.target.select(), [])\n\n  const handleCopy = useCallback(() => {\n    if (inputRef.current) {\n      inputRef.current.focus()\n\n      try {\n        document.execCommand('copy')\n        onCopy()\n      } catch (err) {\n        console.error('Error copying the one-time-use code')\n      }\n    }\n  }, [onCopy])\n\n  return (\n    <React.Fragment>\n      <div\n        css={`\n          display: flex;\n        `}\n      >\n        <img height={6 * GU} src={IconOneTimeCode} alt=\"\" />\n        <div\n          css={`\n            margin-left: ${2 * GU}px;\n          `}\n        >\n          <h2\n            css={`\n              display: block;\n              ${textStyle('body2')};\n              font-weight: 600;\n            `}\n          >\n            One-time-use code\n          </h2>\n          <span\n            css={`\n              display: block;\n              ${textStyle('body2')};\n              margin-top: ${1 * GU}px;\n            `}\n          >\n            Please save the code displayed below for maximum security.\n          </span>\n        </div>\n      </div>\n      <div\n        css={`\n          margin-top: ${2 * GU}px;\n        `}\n      >\n        <TextInput\n          ref={inputRef}\n          onFocus={handleInputFocus}\n          multiline\n          readOnly\n          value={code}\n          wide\n          css={`\n            height: ${10 * GU}px;\n            padding: ${1.5 * GU}px ${2 * GU}px;\n            ${textStyle('body1')};\n            font-weight: 600;\n            resize: none;\n            &:read-only {\n              color: ${theme.accent};\n            }\n          `}\n        />\n      </div>\n      <div\n        css={`\n          margin-top: ${2 * GU}px;\n          display: flex;\n        `}\n      >\n        <Button\n          css={`\n            margin-right: ${2 * GU}px;\n            flex-grow: 1;\n          `}\n          onClick={onDownload}\n          icon={<IconDownload />}\n          label=\"Download\"\n        />\n        <Button\n          css={`\n            flex-grow: 1;\n          `}\n          onClick={handleCopy}\n          icon={<IconCopy />}\n          label=\"Copy\"\n        />\n      </div>\n    </React.Fragment>\n  )\n})\n\nconst RevealService = React.memo(function RevealService({\n  onRevealServiceChange,\n  revealService,\n}) {\n  return (\n    <React.Fragment>\n      <div\n        css={`\n          display: flex;\n          margin-top: ${4 * GU}px;\n          align-items: center;\n        `}\n      >\n        <Switch checked={revealService} onChange={onRevealServiceChange} />\n        <span\n          css={`\n            margin-left: ${2 * GU}px;\n            ${textStyle('body1')};\n          `}\n        >\n          Auto-reveal service.\n        </span>\n      </div>\n      <div\n        css={`\n          margin-top: ${1 * GU}px;\n          ${textStyle('body2')};\n        `}\n      >\n        By enabling this feature you trust Aragon One to reveal your vote on\n        your behalf in this and following disputes. You can always turn off this\n        service later if you choose.\n        <Link href=\"https://support.dijets.io/article/43-dispute-lifecycle#onetime\">\n          Learn more\n        </Link>\n        .\n      </div>\n    </React.Fragment>\n  )\n})\n\nconst InfoSection = React.memo(function InfoSection({ revealService }) {\n  const content = revealService\n    ? `As a safety measure, you must copy or download this code before you can\n       commit your vote. This code is valid for revealing your vote for this\n       dispute only. You won’t be required to enter this code unless a problem\n       occurs with our services.`\n    : `You must copy or download this code before you can commit your vote. You\n       will later be asked to provide this same code to reveal your vote.\n       Failure to provide the correct code will result in a monetary penalty to\n       your account.`\n\n  return (\n    <Info\n      css={`\n        margin-top: ${2 * GU}px;\n      `}\n      title={!revealService && 'Action requirement'}\n      mode={revealService ? 'info' : 'warning'}\n    >\n      {content}\n    </Info>\n  )\n})\n\nexport default CommitPanel\n"]},"metadata":{},"sourceType":"module"}