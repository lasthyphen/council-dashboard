{"ast":null,"code":"import _regeneratorRuntime from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _styled4 from\"styled-components\";import _styled3 from\"styled-components\";import _styled2 from\"styled-components\";import _styled from\"styled-components\";import React,{useCallback,useState}from'react';import styled from'styled-components';import{Box,Button,GU,TextInput,textStyle,useLayout,useTheme}from'@aragon/ui';import{defaultEthNode,defaultIpfsGateway,defaultSubgraphHttpEndpoint}from'../../../endpoints';import{clearLocalStorageNetworkSettings,setDefaultEthNode,setIpfsGateway,setSubgraphHttpEndpoint}from'../../../local-settings';import{InvalidNetworkType,InvalidURI,NoConnection}from'../../../errors';import{checkValidEthNode,getNetworkType,sanitizeNetworkType}from'../../../lib/web3-utils';import{validHttpFormat}from'../../../lib/uri-utils';import{useEnterKey}from'../../../hooks/useKeyboardArrows';import{useSubgraph}from'../../../providers/Subgraph';var _StyledDiv=styled(\"div\").withConfig({displayName:\"Network___StyledDiv\",componentId:\"sc-1to844h-0\"})([\"margin-bottom:\",\"px;\"],function(p){return p._css;});var _StyledButton=styled(Button).withConfig({displayName:\"Network___StyledButton\",componentId:\"sc-1to844h-1\"})([\"margin-bottom:\",\"px;\"],function(p){return p._css2;});function Network(){var _useNetwork=useNetwork(),ethNode=_useNetwork.ethNode,handleClearNetworkSettings=_useNetwork.handleClearNetworkSettings,handleEthNodeChange=_useNetwork.handleEthNodeChange,handleIpfsGatewayChange=_useNetwork.handleIpfsGatewayChange,handleNetworkChange=_useNetwork.handleNetworkChange,handleSubgraphHttpEndpointChange=_useNetwork.handleSubgraphHttpEndpointChange,ipfsGateway=_useNetwork.ipfsGateway,settingsErrors=_useNetwork.settingsErrors,subgraphHttpEndpoint=_useNetwork.subgraphHttpEndpoint;var _useLayout=useLayout(),layoutName=_useLayout.layoutName;var compact=layoutName==='small';var _ref=settingsErrors||{},ethError=_ref.ethError,httpSubgraphError=_ref.httpSubgraphError;return React.createElement(React.Fragment,null,React.createElement(Box,{heading:\"Node settings\"},React.createElement(Field,{label:\"Ethereum node\",text:ethNode,onTextChange:handleEthNodeChange,error:ethError}),React.createElement(Field,{label:\"IPFS Gateway\",text:ipfsGateway,onTextChange:handleIpfsGatewayChange}),React.createElement(Field,{label:\"Subgraph HTTP endpoint\",text:subgraphHttpEndpoint,onTextChange:handleSubgraphHttpEndpointChange,error:httpSubgraphError}),React.createElement(Button,{mode:\"strong\",onClick:handleNetworkChange,wide:compact},\"Save changes\")),React.createElement(Box,{heading:\"Troubleshooting\"},React.createElement(_StyledDiv,{_css:2*GU},React.createElement(\"span\",null,\"Press this button to reset the network settings to their defaults.\")),React.createElement(_StyledButton,{onClick:handleClearNetworkSettings,wide:compact,_css2:2*GU},\"Reset network settings\")));}var _StyledTextInput=styled(TextInput).withConfig({displayName:\"Network___StyledTextInput\",componentId:\"sc-1to844h-2\"})([\"\",\";color:\",\";\"],function(p){return p._css3;},function(p){return p._css4;});var _StyledSpan=styled(\"span\").withConfig({displayName:\"Network___StyledSpan\",componentId:\"sc-1to844h-3\"})([\"\",\";color:\",\";\"],function(p){return p._css5;},function(p){return p._css6;});function Field(_ref2){var label=_ref2.label,text=_ref2.text,onTextChange=_ref2.onTextChange,error=_ref2.error;var theme=useTheme();return React.createElement(Label,{theme:theme},label,React.createElement(_StyledTextInput,{value:text,wide:true,onChange:onTextChange,_css3:textStyle('body2'),_css4:theme.contentSecondary}),error&&React.createElement(_StyledSpan,{_css5:textStyle('body4'),_css6:theme.negative},error));}var useNetwork=function useNetwork(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),settingsErrors=_useState2[0],setSettingsErrors=_useState2[1];var _useState3=useState(defaultEthNode),_useState4=_slicedToArray(_useState3,2),ethNode=_useState4[0],setEthNodeValue=_useState4[1];var _useState5=useState(defaultIpfsGateway),_useState6=_slicedToArray(_useState5,2),ipfsGateway=_useState6[0],setIpfsGatewayValue=_useState6[1];var _useState7=useState(defaultSubgraphHttpEndpoint),_useState8=_slicedToArray(_useState7,2),subgraphHttpEndpoint=_useState8[0],setSubgraphHttpEndpointValue=_useState8[1];var _useSubgraph=useSubgraph(),resetSubgraphClient=_useSubgraph.resetSubgraphClient;var networkType=getNetworkType();var subgraphChanged=subgraphHttpEndpoint!==defaultSubgraphHttpEndpoint;var defaultsChanged=ipfsGateway!==defaultIpfsGateway||ethNode!==defaultEthNode||subgraphChanged;var handleNetworkChange=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var errors;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(defaultsChanged){_context.next=3;break;}setSettingsErrors(null);return _context.abrupt(\"return\");case 3:_context.next=5;return validateNetworkSettings(ethNode,subgraphHttpEndpoint,networkType);case 5:errors=_context.sent;if(!errors){_context.next=9;break;}setSettingsErrors(errors);return _context.abrupt(\"return\");case 9:setDefaultEthNode(ethNode);setSubgraphHttpEndpoint(subgraphHttpEndpoint);setIpfsGateway(ipfsGateway);if(subgraphChanged){resetSubgraphClient();}window.location.reload();case 14:case\"end\":return _context.stop();}}},_callee);})),[defaultsChanged,ethNode,subgraphHttpEndpoint,networkType,ipfsGateway,subgraphChanged,resetSubgraphClient]);var handleClearNetworkSettings=useCallback(function(){clearLocalStorageNetworkSettings();window.location.reload();},[]);useEnterKey(handleNetworkChange);return{ethNode:ethNode,ipfsGateway:ipfsGateway,subgraphHttpEndpoint:subgraphHttpEndpoint,handleNetworkChange:handleNetworkChange,handleClearNetworkSettings:handleClearNetworkSettings,settingsErrors:settingsErrors,handleEthNodeChange:function handleEthNodeChange(_ref4){var value=_ref4.currentTarget.value;return setEthNodeValue(value);},handleIpfsGatewayChange:function handleIpfsGatewayChange(_ref5){var value=_ref5.currentTarget.value;return setIpfsGatewayValue(value);},handleSubgraphHttpEndpointChange:function handleSubgraphHttpEndpointChange(_ref6){var value=_ref6.currentTarget.value;return setSubgraphHttpEndpointValue(value);}};};function validateNetworkSettings(_x,_x2,_x3){return _validateNetworkSettings.apply(this,arguments);}function _validateNetworkSettings(){_validateNetworkSettings=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(ethNode,subgraphHttpEndpoint,networkType){var settingsErrors;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:settingsErrors={};_context2.prev=1;_context2.next=4;return checkValidEthNode(ethNode);case 4:_context2.next=15;break;case 6:_context2.prev=6;_context2.t0=_context2[\"catch\"](1);if(_context2.t0 instanceof InvalidNetworkType){settingsErrors.ethError=\"Node must be connected to \".concat(sanitizeNetworkType(networkType));}if(_context2.t0 instanceof InvalidURI){settingsErrors.ethError='Must provide HTTP endpoint to node';}if(_context2.t0 instanceof NoConnection){settingsErrors.ethError='Could not connect to node';}if(!validHttpFormat(subgraphHttpEndpoint)){settingsErrors.httpSubgraphError='The URI must use the HTTP protocol';}if(!(Object.entries(settingsErrors).length===0)){_context2.next=14;break;}return _context2.abrupt(\"return\",null);case 14:return _context2.abrupt(\"return\",settingsErrors);case 15:case\"end\":return _context2.stop();}}},_callee2,null,[[1,6]]);}));return _validateNetworkSettings.apply(this,arguments);}var Label=styled.label.withConfig({displayName:\"Network__Label\",componentId:\"sc-1to844h-4\"})([\"color:\",\";display:block;margin-bottom:\",\"px;\"],function(_ref7){var theme=_ref7.theme;return theme.content;},2*GU);export default React.memo(Network);","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/GlobalPreferences/Network/Network.js"],"names":["React","useCallback","useState","styled","Box","Button","GU","TextInput","textStyle","useLayout","useTheme","defaultEthNode","defaultIpfsGateway","defaultSubgraphHttpEndpoint","clearLocalStorageNetworkSettings","setDefaultEthNode","setIpfsGateway","setSubgraphHttpEndpoint","InvalidNetworkType","InvalidURI","NoConnection","checkValidEthNode","getNetworkType","sanitizeNetworkType","validHttpFormat","useEnterKey","useSubgraph","Network","useNetwork","ethNode","handleClearNetworkSettings","handleEthNodeChange","handleIpfsGatewayChange","handleNetworkChange","handleSubgraphHttpEndpointChange","ipfsGateway","settingsErrors","subgraphHttpEndpoint","layoutName","compact","ethError","httpSubgraphError","Field","label","text","onTextChange","error","theme","contentSecondary","negative","setSettingsErrors","setEthNodeValue","setIpfsGatewayValue","setSubgraphHttpEndpointValue","resetSubgraphClient","networkType","subgraphChanged","defaultsChanged","validateNetworkSettings","errors","window","location","reload","value","currentTarget","Object","entries","length","Label","content","memo"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Box,\n  Button,\n  GU,\n  TextInput,\n  textStyle,\n  useLayout,\n  useTheme,\n} from '@aragon/ui'\nimport {\n  defaultEthNode,\n  defaultIpfsGateway,\n  defaultSubgraphHttpEndpoint,\n} from '../../../endpoints'\nimport {\n  clearLocalStorageNetworkSettings,\n  setDefaultEthNode,\n  setIpfsGateway,\n  setSubgraphHttpEndpoint,\n} from '../../../local-settings'\nimport { InvalidNetworkType, InvalidURI, NoConnection } from '../../../errors'\nimport {\n  checkValidEthNode,\n  getNetworkType,\n  sanitizeNetworkType,\n} from '../../../lib/web3-utils'\nimport { validHttpFormat } from '../../../lib/uri-utils'\nimport { useEnterKey } from '../../../hooks/useKeyboardArrows'\nimport { useSubgraph } from '../../../providers/Subgraph'\n\nfunction Network() {\n  const {\n    ethNode,\n    handleClearNetworkSettings,\n    handleEthNodeChange,\n    handleIpfsGatewayChange,\n    handleNetworkChange,\n    handleSubgraphHttpEndpointChange,\n    ipfsGateway,\n    settingsErrors,\n    subgraphHttpEndpoint,\n  } = useNetwork()\n\n  const { layoutName } = useLayout()\n  const compact = layoutName === 'small'\n  const { ethError, httpSubgraphError } = settingsErrors || {}\n\n  return (\n    <React.Fragment>\n      <Box heading=\"Node settings\">\n        <Field\n          label=\"Ethereum node\"\n          text={ethNode}\n          onTextChange={handleEthNodeChange}\n          error={ethError}\n        />\n        <Field\n          label=\"IPFS Gateway\"\n          text={ipfsGateway}\n          onTextChange={handleIpfsGatewayChange}\n        />\n        <Field\n          label=\"Subgraph HTTP endpoint\"\n          text={subgraphHttpEndpoint}\n          onTextChange={handleSubgraphHttpEndpointChange}\n          error={httpSubgraphError}\n        />\n        <Button mode=\"strong\" onClick={handleNetworkChange} wide={compact}>\n          Save changes\n        </Button>\n      </Box>\n      <Box heading=\"Troubleshooting\">\n        <div\n          css={`\n            margin-bottom: ${2 * GU}px;\n          `}\n        >\n          <span>\n            Press this button to reset the network settings to their defaults.\n          </span>\n        </div>\n        <Button\n          css={`\n            margin-bottom: ${2 * GU}px;\n          `}\n          onClick={handleClearNetworkSettings}\n          wide={compact}\n        >\n          Reset network settings\n        </Button>\n      </Box>\n    </React.Fragment>\n  )\n}\n\nfunction Field({ label, text, onTextChange, error }) {\n  const theme = useTheme()\n  return (\n    <Label theme={theme}>\n      {label}\n      <TextInput\n        value={text}\n        wide\n        onChange={onTextChange}\n        css={`\n          ${textStyle('body2')};\n          color: ${theme.contentSecondary};\n        `}\n      />\n      {error && (\n        <span\n          css={`\n            ${textStyle('body4')};\n            color: ${theme.negative};\n          `}\n        >\n          {error}\n        </span>\n      )}\n    </Label>\n  )\n}\n\nconst useNetwork = () => {\n  const [settingsErrors, setSettingsErrors] = useState(null)\n  const [ethNode, setEthNodeValue] = useState(defaultEthNode)\n  const [ipfsGateway, setIpfsGatewayValue] = useState(defaultIpfsGateway)\n  const [subgraphHttpEndpoint, setSubgraphHttpEndpointValue] = useState(\n    defaultSubgraphHttpEndpoint\n  )\n\n  const { resetSubgraphClient } = useSubgraph()\n  const networkType = getNetworkType()\n\n  const subgraphChanged = subgraphHttpEndpoint !== defaultSubgraphHttpEndpoint\n\n  const defaultsChanged =\n    ipfsGateway !== defaultIpfsGateway ||\n    ethNode !== defaultEthNode ||\n    subgraphChanged\n\n  const handleNetworkChange = useCallback(async () => {\n    if (!defaultsChanged) {\n      setSettingsErrors(null)\n      return\n    }\n\n    const errors = await validateNetworkSettings(\n      ethNode,\n      subgraphHttpEndpoint,\n      networkType\n    )\n\n    if (errors) {\n      setSettingsErrors(errors)\n      return\n    }\n    setDefaultEthNode(ethNode)\n    setSubgraphHttpEndpoint(subgraphHttpEndpoint)\n    setIpfsGateway(ipfsGateway)\n\n    if (subgraphChanged) {\n      resetSubgraphClient()\n    }\n    window.location.reload()\n  }, [\n    defaultsChanged,\n    ethNode,\n    subgraphHttpEndpoint,\n    networkType,\n    ipfsGateway,\n    subgraphChanged,\n    resetSubgraphClient,\n  ])\n\n  const handleClearNetworkSettings = useCallback(() => {\n    clearLocalStorageNetworkSettings()\n    window.location.reload()\n  }, [])\n\n  useEnterKey(handleNetworkChange)\n\n  return {\n    ethNode,\n    ipfsGateway,\n    subgraphHttpEndpoint,\n    handleNetworkChange,\n    handleClearNetworkSettings,\n    settingsErrors,\n    handleEthNodeChange: ({ currentTarget: { value } }) =>\n      setEthNodeValue(value),\n    handleIpfsGatewayChange: ({ currentTarget: { value } }) =>\n      setIpfsGatewayValue(value),\n    handleSubgraphHttpEndpointChange: ({ currentTarget: { value } }) =>\n      setSubgraphHttpEndpointValue(value),\n  }\n}\n\nasync function validateNetworkSettings(\n  ethNode,\n  subgraphHttpEndpoint,\n  networkType\n) {\n  const settingsErrors = {}\n  try {\n    await checkValidEthNode(ethNode)\n  } catch (err) {\n    if (err instanceof InvalidNetworkType) {\n      settingsErrors.ethError = `Node must be connected to ${sanitizeNetworkType(\n        networkType\n      )}`\n    }\n    if (err instanceof InvalidURI) {\n      settingsErrors.ethError = 'Must provide HTTP endpoint to node'\n    }\n    if (err instanceof NoConnection) {\n      settingsErrors.ethError = 'Could not connect to node'\n    }\n\n    if (!validHttpFormat(subgraphHttpEndpoint)) {\n      settingsErrors.httpSubgraphError = 'The URI must use the HTTP protocol'\n    }\n\n    if (Object.entries(settingsErrors).length === 0) {\n      return null\n    }\n    return settingsErrors\n  }\n}\n\nconst Label = styled.label`\n  color: ${({ theme }) => theme.content};\n  display: block;\n  margin-bottom: ${2 * GU}px;\n`\n\nexport default React.memo(Network)\n"]},"metadata":{},"sourceType":"module"}