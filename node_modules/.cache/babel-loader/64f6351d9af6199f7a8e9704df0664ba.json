{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n}), exports.default = void 0;\n\nvar _addMilliseconds = _interopRequireDefault(require(\"date-fns/addMilliseconds\")),\n    _addSeconds = _interopRequireDefault(require(\"date-fns/addSeconds\")),\n    _addMinutes = _interopRequireDefault(require(\"date-fns/addMinutes\")),\n    _addHours = _interopRequireDefault(require(\"date-fns/addHours\")),\n    _addDays = _interopRequireDefault(require(\"date-fns/addDays\")),\n    _addWeeks = _interopRequireDefault(require(\"date-fns/addWeeks\")),\n    _addMonths = _interopRequireDefault(require(\"date-fns/addMonths\")),\n    _addYears = _interopRequireDefault(require(\"date-fns/addYears\")),\n    _formatDistanceStrict = _interopRequireDefault(require(\"date-fns/formatDistanceStrict\"));\n\nvar BEST_UNIT = \"best\",\n    ADD_UNIT_FN = new Map([[\"millisecond\", _addMilliseconds.default], [\"second\", _addSeconds.default], [\"minute\", _addMinutes.default], [\"hour\", _addHours.default], [\"day\", _addDays.default], [\"week\", _addWeeks.default], [\"month\", _addMonths.default], [\"year\", _addYears.default]]),\n    DISALLOWED_FROM_UNITS = new Set([\"millisecond\"]);\n\nvar _default = function _default() {\n  return (\n    /*#__PURE__*/\n\n    /**\n    * Transform between time units.\n    *\n    * @param {*} time The base time amount\n    * @param {string} [toUnit] The unit to convert the time to (supported units: 'second', 'minute', 'hour', 'day', 'week', 'month', 'year')\n    *                          Defaults to using the \"best\" unit\n    * @param {string} [fromUnit='second'] The unit to convert the time from (supported units: 'millisecond', 'second', 'minute', 'hour', 'day', 'week', 'month', 'year')\n    * @return {Promise<radspec/evaluator/TypedValue>}\n    */\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(time) {\n        var toUnit,\n            fromUnit,\n            addTime,\n            zeroDate,\n            duration,\n            _args = arguments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                toUnit = _args.length > 1 && _args[1] !== undefined ? _args[1] : BEST_UNIT;\n                fromUnit = _args.length > 2 && _args[2] !== undefined ? _args[2] : \"second\";\n\n                if (!(DISALLOWED_FROM_UNITS.has(fromUnit) || !ADD_UNIT_FN.has(fromUnit))) {\n                  _context.next = 4;\n                  break;\n                }\n\n                throw new Error(\"@transformTime: Time unit '\".concat(fromUnit, \"' is not supported as a fromUnit\"));\n\n              case 4:\n                if (!(toUnit !== BEST_UNIT && !ADD_UNIT_FN.has(toUnit))) {\n                  _context.next = 6;\n                  break;\n                }\n\n                throw new Error(\"@transformTime: Time unit '\".concat(toUnit, \"' is not supported as a toUnit\"));\n\n              case 6:\n                addTime = ADD_UNIT_FN.get(fromUnit), zeroDate = new Date(0), duration = addTime(zeroDate, +time);\n                return _context.abrupt(\"return\", {\n                  type: \"string\",\n                  value: (0, _formatDistanceStrict.default)(zeroDate, duration, toUnit === BEST_UNIT ? {} : {\n                    unit: toUnit\n                  })\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}