{"ast":null,"code":"import _regeneratorRuntime from \"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n// TODO: Remove these linting exceptions after implementation.\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/* eslint-disable @typescript-eslint/no-empty-function */\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, privateMap, value) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to set private field on non-instance\");\n  }\n\n  privateMap.set(receiver, value);\n  return value;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, privateMap) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to get private field on non-instance\");\n  }\n\n  return privateMap.get(receiver);\n};\n\nvar _permissions;\n\nvar ConnectorJson =\n/*#__PURE__*/\nfunction () {\n  function ConnectorJson(config) {\n    _classCallCheck(this, ConnectorJson);\n\n    _permissions.set(this, void 0);\n\n    this.name = 'json';\n    this.config = config;\n    this.network = config.network;\n\n    __classPrivateFieldSet(this, _permissions, config.permissions);\n  }\n\n  _createClass(ConnectorJson, [{\n    key: \"connect\",\n    value: function () {\n      var _connect = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(connection) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.connection = connection;\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function connect(_x) {\n        return _connect.apply(this, arguments);\n      }\n\n      return connect;\n    }()\n  }, {\n    key: \"disconnect\",\n    value: function () {\n      var _disconnect = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                delete this.connection;\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function disconnect() {\n        return _disconnect.apply(this, arguments);\n      }\n\n      return disconnect;\n    }()\n  }, {\n    key: \"permissionsForOrg\",\n    value: function () {\n      var _permissionsForOrg = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", __classPrivateFieldGet(this, _permissions));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function permissionsForOrg() {\n        return _permissionsForOrg.apply(this, arguments);\n      }\n\n      return permissionsForOrg;\n    }()\n  }, {\n    key: \"onPermissionsForOrg\",\n    value: function onPermissionsForOrg(organization, callback) {\n      return {\n        unsubscribe: function unsubscribe() {}\n      };\n    }\n  }, {\n    key: \"app\",\n    value: function () {\n      var _app = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(organization, filters) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                return _context4.abrupt(\"return\", this.appByAddress(organization, ''));\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function app(_x2, _x3) {\n        return _app.apply(this, arguments);\n      }\n\n      return app;\n    }()\n  }, {\n    key: \"apps\",\n    value: function () {\n      var _apps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(filters) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                return _context5.abrupt(\"return\", []);\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function apps(_x4) {\n        return _apps.apply(this, arguments);\n      }\n\n      return apps;\n    }()\n  }, {\n    key: \"appForOrg\",\n    value: function appForOrg(organization) {\n      return new Promise(function (resolve) {\n        resolve();\n      });\n    }\n  }, {\n    key: \"appsForOrg\",\n    value: function appsForOrg(organization) {\n      return new Promise(function (resolve) {\n        resolve([]);\n      });\n    }\n  }, {\n    key: \"onAppForOrg\",\n    value: function onAppForOrg(organization, filters, callback) {\n      return {\n        unsubscribe: function unsubscribe() {}\n      };\n    }\n  }, {\n    key: \"onAppsForOrg\",\n    value: function onAppsForOrg(organization, filters, callback) {\n      return {\n        unsubscribe: function unsubscribe() {}\n      };\n    }\n  }, {\n    key: \"repoForApp\",\n    value: function repoForApp(organization, appAddress) {\n      return new Promise(function (resolve) {\n        resolve();\n      });\n    }\n  }, {\n    key: \"appByAddress\",\n    value: function appByAddress(organization, appAddress) {\n      return new Promise(function (resolve) {\n        resolve();\n      });\n    }\n  }, {\n    key: \"rolesForAddress\",\n    value: function rolesForAddress(organization, appAddress) {\n      return new Promise(function (resolve) {\n        resolve([]);\n      });\n    }\n  }]);\n\n  return ConnectorJson;\n}();\n\n_permissions = new WeakMap();\nexport default ConnectorJson;","map":null,"metadata":{},"sourceType":"module"}