{"ast":null,"code":"import _slicedToArray from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{createClient,Provider as UrqlProvider,cacheExchange,debugExchange}from'urql';import{getFetchExchange}from'../graphql-exchanges';import{devtoolsExchange}from'@urql/devtools';import{defaultSubgraphHttpEndpoint}from'../endpoints';var SubgraphContext=React.createContext({resetSubgraphClient:null});var newClient=function newClient(){return createClient({url:defaultSubgraphHttpEndpoint,exchanges:[debugExchange,devtoolsExchange,cacheExchange,getFetchExchange()]});};function SubGraphProvider(_ref){var children=_ref.children;var _React$useState=React.useState(newClient()),_React$useState2=_slicedToArray(_React$useState,2),client=_React$useState2[0],setClient=_React$useState2[1];return React.createElement(SubgraphContext.Provider,{value:{resetSubgraphClient:function resetSubgraphClient(){return setClient(newClient());}}},React.createElement(UrqlProvider,{value:client},children));}var useSubgraph=function useSubgraph(){return React.useContext(SubgraphContext);};export{SubGraphProvider,useSubgraph};","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/providers/Subgraph.js"],"names":["React","createClient","Provider","UrqlProvider","cacheExchange","debugExchange","getFetchExchange","devtoolsExchange","defaultSubgraphHttpEndpoint","SubgraphContext","createContext","resetSubgraphClient","newClient","url","exchanges","SubGraphProvider","children","useState","client","setClient","useSubgraph","useContext"],"mappings":"4HAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,YADF,CAEEC,QAAQ,GAAIC,CAAAA,YAFd,CAGEC,aAHF,CAIEC,aAJF,KAKO,MALP,CAMA,OAASC,gBAAT,KAAiC,sBAAjC,CAEA,OAASC,gBAAT,KAAiC,gBAAjC,CACA,OAASC,2BAAT,KAA4C,cAA5C,CAEA,GAAMC,CAAAA,eAAe,CAAGT,KAAK,CAACU,aAAN,CAAoB,CAAEC,mBAAmB,CAAE,IAAvB,CAApB,CAAxB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,SAChBX,CAAAA,YAAY,CAAC,CACXY,GAAG,CAAEL,2BADM,CAEXM,SAAS,CAAE,CACTT,aADS,CAETE,gBAFS,CAGTH,aAHS,CAITE,gBAAgB,EAJP,CAFA,CAAD,CADI,EAAlB,CAWA,QAASS,CAAAA,gBAAT,MAAwC,IAAZC,CAAAA,QAAY,MAAZA,QAAY,qBACVhB,KAAK,CAACiB,QAAN,CAAeL,SAAS,EAAxB,CADU,oDAC/BM,MAD+B,qBACvBC,SADuB,qBAGtC,MACE,qBAAC,eAAD,CAAiB,QAAjB,EACE,KAAK,CAAE,CACLR,mBAAmB,CAAE,qCAAMQ,CAAAA,SAAS,CAACP,SAAS,EAAV,CAAf,EADhB,CADT,EAKE,oBAAC,YAAD,EAAc,KAAK,CAAEM,MAArB,EAA8BF,QAA9B,CALF,CADF,CASD,CAED,GAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAMpB,CAAAA,KAAK,CAACqB,UAAN,CAAiBZ,eAAjB,CAAN,EAApB,CAEA,OAASM,gBAAT,CAA2BK,WAA3B","sourcesContent":["import React from 'react'\nimport {\n  createClient,\n  Provider as UrqlProvider,\n  cacheExchange,\n  debugExchange,\n} from 'urql'\nimport { getFetchExchange } from '../graphql-exchanges'\n\nimport { devtoolsExchange } from '@urql/devtools'\nimport { defaultSubgraphHttpEndpoint } from '../endpoints'\n\nconst SubgraphContext = React.createContext({ resetSubgraphClient: null })\n\nconst newClient = () =>\n  createClient({\n    url: defaultSubgraphHttpEndpoint,\n    exchanges: [\n      debugExchange,\n      devtoolsExchange,\n      cacheExchange,\n      getFetchExchange(),\n    ],\n  })\n\nfunction SubGraphProvider({ children }) {\n  const [client, setClient] = React.useState(newClient())\n\n  return (\n    <SubgraphContext.Provider\n      value={{\n        resetSubgraphClient: () => setClient(newClient()),\n      }}\n    >\n      <UrqlProvider value={client}>{children}</UrqlProvider>\n    </SubgraphContext.Provider>\n  )\n}\n\nconst useSubgraph = () => React.useContext(SubgraphContext)\n\nexport { SubGraphProvider, useSubgraph }\n"]},"metadata":{},"sourceType":"module"}