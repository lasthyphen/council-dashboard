{"ast":null,"code":"import _defineProperty from \"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { getNetworkName } from './lib/web3-utils';\nimport env from './environment';\nexport const extendError = (name, {\n  defaultMessage\n}) => {\n  var _temp;\n\n  return _temp = class extends Error {\n    constructor(message = defaultMessage) {\n      super(message);\n\n      _defineProperty(this, \"name\", name);\n    }\n\n  }, _temp;\n};\nexport class DisputeNotFound extends Error {\n  constructor(disputeId) {\n    super(`It looks like there’s no dispute associated with the “DisputeID #${disputeId}” on the Ethereum ${getNetworkName(env('CHAIN_ID'))} network.`);\n\n    _defineProperty(this, \"name\", 'DisputeNotFound');\n\n    this.disputeId = disputeId;\n  }\n\n}\nexport const InvalidNetworkType = extendError('InvalidNetworkType', {\n  defaultMessage: 'The network type is invalid'\n});\nexport const InvalidURI = extendError('InvalidURI', {\n  defaultMessage: 'The URI is invalid'\n});\nexport const NoConnection = extendError('NoConnection', {\n  defaultMessage: 'There is no connection'\n});","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/errors.js"],"names":["getNetworkName","env","extendError","name","defaultMessage","Error","constructor","message","DisputeNotFound","disputeId","InvalidNetworkType","InvalidURI","NoConnection"],"mappings":";AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,GAAP,MAAgB,eAAhB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,IAAD,EAAO;AAAEC,EAAAA;AAAF,CAAP;AAAA;;AAAA,iBACzB,cAAcC,KAAd,CAAoB;AAElBC,IAAAA,WAAW,CAACC,OAAO,GAAGH,cAAX,EAA2B;AACpC,YAAMG,OAAN;;AADoC,oCAD/BJ,IAC+B;AAErC;;AAJiB,GADK;AAAA,CAApB;AAQP,OAAO,MAAMK,eAAN,SAA8BH,KAA9B,CAAoC;AAEzCC,EAAAA,WAAW,CAACG,SAAD,EAAY;AACrB,UACG,oEAAmEA,SAAU,qBAAoBT,cAAc,CAC9GC,GAAG,CAAC,UAAD,CAD2G,CAE9G,WAHJ;;AADqB,kCADhB,iBACgB;;AAMrB,SAAKQ,SAAL,GAAiBA,SAAjB;AACD;;AATwC;AAY3C,OAAO,MAAMC,kBAAkB,GAAGR,WAAW,CAAC,oBAAD,EAAuB;AAClEE,EAAAA,cAAc,EAAE;AADkD,CAAvB,CAAtC;AAGP,OAAO,MAAMO,UAAU,GAAGT,WAAW,CAAC,YAAD,EAAe;AAClDE,EAAAA,cAAc,EAAE;AADkC,CAAf,CAA9B;AAGP,OAAO,MAAMQ,YAAY,GAAGV,WAAW,CAAC,cAAD,EAAiB;AACtDE,EAAAA,cAAc,EAAE;AADsC,CAAjB,CAAhC","sourcesContent":["import { getNetworkName } from './lib/web3-utils'\nimport env from './environment'\n\nexport const extendError = (name, { defaultMessage }) =>\n  class extends Error {\n    name = name\n    constructor(message = defaultMessage) {\n      super(message)\n    }\n  }\n\nexport class DisputeNotFound extends Error {\n  name = 'DisputeNotFound'\n  constructor(disputeId) {\n    super(\n      `It looks like there’s no dispute associated with the “DisputeID #${disputeId}” on the Ethereum ${getNetworkName(\n        env('CHAIN_ID')\n      )} network.`\n    )\n    this.disputeId = disputeId\n  }\n}\n\nexport const InvalidNetworkType = extendError('InvalidNetworkType', {\n  defaultMessage: 'The network type is invalid',\n})\nexport const InvalidURI = extendError('InvalidURI', {\n  defaultMessage: 'The URI is invalid',\n})\nexport const NoConnection = extendError('NoConnection', {\n  defaultMessage: 'There is no connection',\n})\n"]},"metadata":{},"sourceType":"module"}