{"ast":null,"code":"var _jsxFileName = \"/Users/saleemfareed/oneds/court-dashboard/src/components/Markdown.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport remark from 'remark';\nimport remark2react from 'remark-react';\nimport { Link, GU, textStyle, useTheme } from '@aragon/ui';\nconst Markdown = React.memo(({\n  text\n}) => {\n  const theme = useTheme();\n  return React.createElement(Wrapper, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  },\n  /* eslint-disable react/prop-types */\n  remark().use(remark2react, {\n    remarkReactComponents: {\n      a: ({\n        children,\n        ...props\n      }) => {\n        return React.createElement(Link, {\n          href: props.href,\n          external: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, children);\n      }\n    }\n  }).processSync(text).contents\n  /* eslint-enable react/prop-types */\n  );\n});\nMarkdown.propTypes = {\n  text: PropTypes.string\n};\nMarkdown.defaultProps = {\n  text: ''\n};\nconst Wrapper = styled.section.withConfig({\n  displayName: \"Markdown__Wrapper\",\n  componentId: \"bot87k-0\"\n})([\"margin-top:\", \"px;padding-right:\", \"px;h2,h3,h4{font-weight:bold;margin-top:\", \"px;\", \";}p,li{margin:\", \"px 0px \", \"px;}ul{margin:\", \"px \", \"px;list-style:none;}ul li::before{content:'\\u2022';color:\", \";font-weight:bold;display:inline-block;width:1em;margin-left:-1em;}\"], 1 * GU, 1 * GU, 3 * GU, textStyle('title4'), 3 * GU, 1 * GU, 1 * GU, 2 * GU, ({\n  theme\n}) => theme.accent);\nexport default Markdown;","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/Markdown.js"],"names":["React","PropTypes","styled","remark","remark2react","Link","GU","textStyle","useTheme","Markdown","memo","text","theme","use","remarkReactComponents","a","children","props","href","processSync","contents","propTypes","string","defaultProps","Wrapper","section","accent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,IAAT,EAAeC,EAAf,EAAmBC,SAAnB,EAA8BC,QAA9B,QAA8C,YAA9C;AAEA,MAAMC,QAAQ,GAAGT,KAAK,CAACU,IAAN,CAAW,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACxC,QAAMC,KAAK,GAAGJ,QAAQ,EAAtB;AAEA,SACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEI,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI;AACAT,EAAAA,MAAM,GACHU,GADH,CACOT,YADP,EACqB;AACjBU,IAAAA,qBAAqB,EAAE;AACrBC,MAAAA,CAAC,EAAE,CAAC;AAAEC,QAAAA,QAAF;AAAY,WAAGC;AAAf,OAAD,KAA4B;AAC7B,eACE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAEA,KAAK,CAACC,IAAlB;AAAwB,UAAA,QAAQ,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGF,QADH,CADF;AAKD;AAPoB;AADN,GADrB,EAYGG,WAZH,CAYeR,IAZf,EAYqBS;AACrB;AAhBJ,GADF;AAqBD,CAxBgB,CAAjB;AA0BAX,QAAQ,CAACY,SAAT,GAAqB;AACnBV,EAAAA,IAAI,EAAEV,SAAS,CAACqB;AADG,CAArB;AAIAb,QAAQ,CAACc,YAAT,GAAwB;AACtBZ,EAAAA,IAAI,EAAE;AADgB,CAAxB;AAIA,MAAMa,OAAO,GAAGtB,MAAM,CAACuB,OAAV;AAAA;AAAA;AAAA,sRACG,IAAInB,EADP,EAEM,IAAIA,EAFV,EAOK,IAAIA,EAPT,EAQPC,SAAS,CAAC,QAAD,CARF,EAYC,IAAID,EAZL,EAYiB,IAAIA,EAZrB,EAeC,IAAIA,EAfL,EAea,IAAIA,EAfjB,EAoBA,CAAC;AAAEM,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACc,MApBrB,CAAb;AA4BA,eAAejB,QAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport remark from 'remark'\nimport remark2react from 'remark-react'\nimport { Link, GU, textStyle, useTheme } from '@aragon/ui'\n\nconst Markdown = React.memo(({ text }) => {\n  const theme = useTheme()\n\n  return (\n    <Wrapper theme={theme}>\n      {\n        /* eslint-disable react/prop-types */\n        remark()\n          .use(remark2react, {\n            remarkReactComponents: {\n              a: ({ children, ...props }) => {\n                return (\n                  <Link href={props.href} external>\n                    {children}\n                  </Link>\n                )\n              },\n            },\n          })\n          .processSync(text).contents\n        /* eslint-enable react/prop-types */\n      }\n    </Wrapper>\n  )\n})\n\nMarkdown.propTypes = {\n  text: PropTypes.string,\n}\n\nMarkdown.defaultProps = {\n  text: '',\n}\n\nconst Wrapper = styled.section`\n  margin-top: ${1 * GU}px;\n  padding-right: ${1 * GU}px;\n  h2,\n  h3,\n  h4 {\n    font-weight: bold;\n    margin-top: ${3 * GU}px;\n    ${textStyle('title4')};\n  }\n  p,\n  li {\n    margin: ${3 * GU}px 0px ${1 * GU}px;\n  }\n  ul {\n    margin: ${1 * GU}px ${2 * GU}px;\n    list-style: none;\n  }\n  ul li::before {\n    content: 'â€¢';\n    color: ${({ theme }) => theme.accent};\n    font-weight: bold;\n    display: inline-block;\n    width: 1em;\n    margin-left: -1em;\n  }\n`\n\nexport default Markdown\n"]},"metadata":{},"sourceType":"module"}