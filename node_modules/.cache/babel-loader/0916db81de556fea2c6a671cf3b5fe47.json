{"ast":null,"code":"import _regeneratorRuntime from \"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, privateMap, value) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to set private field on non-instance\");\n  }\n\n  privateMap.set(receiver, value);\n  return value;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, privateMap) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to get private field on non-instance\");\n  }\n\n  return privateMap.get(receiver);\n};\n\nvar _metadata;\n\nimport { resolveMetadata, resolveManifest } from '../utils/metadata';\n\nvar Repo =\n/*#__PURE__*/\nfunction () {\n  function Repo(data, metadata, organization) {\n    _classCallCheck(this, Repo);\n\n    _metadata.set(this, void 0);\n\n    __classPrivateFieldSet(this, _metadata, metadata);\n\n    __classPrivateFieldSet(this, _metadata, metadata);\n\n    this.address = data.address;\n    this.contentUri = data.contentUri;\n    this.name = data.name;\n    this.registry = data.registry;\n    this.registryAddress = data.registryAddress;\n  }\n\n  _createClass(Repo, [{\n    key: \"artifact\",\n    get: function get() {\n      return __classPrivateFieldGet(this, _metadata)[0];\n    }\n  }, {\n    key: \"manifest\",\n    get: function get() {\n      return __classPrivateFieldGet(this, _metadata)[1];\n    }\n  }, {\n    key: \"roles\",\n    get: function get() {\n      return this.artifact.roles;\n    }\n  }], [{\n    key: \"create\",\n    value: function () {\n      var _create = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(data, organization) {\n        var artifact, manifest, metadata;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return resolveMetadata('artifact.json', data.contentUri, data.artifact);\n\n              case 2:\n                artifact = _context.sent;\n                _context.next = 5;\n                return resolveManifest(data);\n\n              case 5:\n                manifest = _context.sent;\n                metadata = [artifact, manifest];\n                return _context.abrupt(\"return\", new Repo(data, metadata, organization));\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function create(_x, _x2) {\n        return _create.apply(this, arguments);\n      }\n\n      return create;\n    }()\n  }]);\n\n  return Repo;\n}();\n\nexport { Repo as default };\n_metadata = new WeakMap();","map":null,"metadata":{},"sourceType":"module"}