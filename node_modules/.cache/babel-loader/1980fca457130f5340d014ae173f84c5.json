{"ast":null,"code":"import _styled2 from \"styled-components\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/saleemfareed/oneds/court-dashboard/src/components/Disputes/DisputeDetail.js\";\nimport React, { useCallback, useMemo } from 'react';\nimport { BackButton, Bar, Box, GU, SidePanel, Split } from '@aragon/ui';\nimport { useHistory } from 'react-router-dom';\nimport AppealPanel from './panels/AppealPanel';\nimport Banner from './PrecedenceCampaign/PrecedenceCampaignBanner';\nimport CommitPanel from './panels/CommitPanel';\nimport DisputeEvidences from './DisputeEvidences';\nimport DisputeInfo from './DisputeInfo';\nimport DisputeTimeline from './DisputeTimeline';\nimport MessageCard from '../MessageCard';\nimport NoEvidence from './NoEvidence';\nimport RevealPanel from './panels/RevealPanel';\nimport TitleHeader from '../TitleHeader';\nimport { Status as DisputeStatus } from '../../types/dispute-status-types';\nimport { useDisputeLogic, REQUEST_MODE } from '../../hooks/dispute-logic';\nimport { DisputeNotFound } from '../../errors';\nimport { toMs } from '../../utils/date-utils';\nimport { toUtf8String } from '../../lib/web3-utils';\nimport timelineErrorSvg from \"../../assets/timelineError.svg\";\n\nvar _StyledDiv = _styled(\"div\").withConfig({\n  displayName: \"DisputeDetail___StyledDiv\",\n  componentId: \"ltx00i-0\"\n})([\"height:200px\"]);\n\nvar _StyledDiv2 = _styled(\"div\").withConfig({\n  displayName: \"DisputeDetail___StyledDiv2\",\n  componentId: \"ltx00i-1\"\n})([\"margin-top:\", \"px;\"], p => p._css);\n\nconst DisputeDetail = React.memo(function DisputeDetail({\n  match\n}) {\n  const history = useHistory();\n  const {\n    id: disputeId\n  } = match.params;\n  const {\n    actions,\n    error,\n    dispute,\n    disputeFetching,\n    requestMode,\n    panelState,\n    requests\n  } = useDisputeLogic(disputeId);\n  const evidenceList = dispute === null || dispute === void 0 ? void 0 : dispute.evidences;\n  const evidences = useMemo(() => (evidenceList || []).map(evidence => ({ ...evidence,\n    createdAt: toMs(evidence.createdAt),\n    data: toUtf8String(evidence.data)\n  })), [evidenceList]);\n  const handleBack = useCallback(() => {\n    history.push('/disputes');\n  }, [history]);\n  const noDispute = !dispute && !disputeFetching;\n\n  if (noDispute && !error) {\n    throw new DisputeNotFound(disputeId);\n  }\n\n  const DisputeInfoComponent = React.createElement(DisputeInfo, {\n    id: disputeId,\n    error: error,\n    dispute: dispute,\n    loading: disputeFetching,\n    onDraft: actions.draft,\n    onRequestCommit: requests.commit,\n    onRequestReveal: requests.reveal,\n    onLeak: actions.leak,\n    onRequestAppeal: requests.appeal,\n    onAutoReveal: actions.requestAutoReveal,\n    onExecuteRuling: actions.executeRuling,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  });\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, (dispute === null || dispute === void 0 ? void 0 : dispute.marksPrecedent) && React.createElement(Banner, {\n    disputeId: disputeId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(TitleHeader, {\n    title: \"Disputes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(Bar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(BackButton, {\n    onClick: handleBack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), (dispute === null || dispute === void 0 ? void 0 : dispute.status) === DisputeStatus.Voided ? DisputeInfoComponent : React.createElement(Split, {\n    primary: React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, DisputeInfoComponent, (() => {\n      if (disputeFetching || (error === null || error === void 0 ? void 0 : error.fromGraph)) {\n        return null;\n      }\n\n      if (evidences.length === 0) {\n        return React.createElement(NoEvidence, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(DisputeEvidences, {\n        dispute: dispute,\n        evidences: evidences,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      });\n    })()),\n    secondary: React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Box, {\n      heading: \"Dispute timeline\",\n      padding: (error === null || error === void 0 ? void 0 : error.fromGraph) ? 3 * GU : 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, (() => {\n      if (error === null || error === void 0 ? void 0 : error.fromGraph) {\n        return React.createElement(MessageCard, {\n          title: \"We couldn\\u2019t load the dispute timeline\",\n          paragraph: \"Something went wrong! Please restart the app\",\n          icon: timelineErrorSvg,\n          mode: \"compact\",\n          border: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        });\n      }\n\n      if (disputeFetching) {\n        return React.createElement(_StyledDiv, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(DisputeTimeline, {\n        dispute: dispute,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      });\n    })())),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(SidePanel, {\n    title: React.createElement(PanelTitle, {\n      requestMode: requestMode,\n      disputeId: disputeId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }),\n    opened: panelState.visible,\n    onClose: panelState.requestClose,\n    onTransitionEnd: panelState.endTransition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(_StyledDiv2, {\n    _css: 2 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(PanelComponent, {\n    dispute: dispute,\n    requestMode: requestMode,\n    commit: actions.commit,\n    reveal: actions.reveal,\n    appealRound: actions.appealRound,\n    approveFeeDeposit: actions.approveFeeDeposit,\n    onDone: panelState.requestClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }))));\n});\n\nconst PanelTitle = ({\n  requestMode,\n  disputeId\n}) => {\n  const {\n    mode,\n    data\n  } = requestMode;\n\n  if (mode === REQUEST_MODE.COMMIT) {\n    return `Commit your vote on dispute #${disputeId}`;\n  }\n\n  if (mode === REQUEST_MODE.REVEAL) {\n    return `Reveal your vote on dispute #${disputeId}`;\n  }\n\n  if (mode === REQUEST_MODE.APPEAL) {\n    return data.confirm ? `Confirm an appeal on dispute #${disputeId}` : `Appeal ruling on dispute #${disputeId}`;\n  }\n\n  return null;\n};\n\nconst PanelComponent = ({\n  appealRound,\n  approveFeeDeposit,\n  commit,\n  dispute,\n  requestMode,\n  reveal,\n  ...props\n}) => {\n  const {\n    mode,\n    data\n  } = requestMode;\n\n  if (mode === REQUEST_MODE.COMMIT) {\n    return React.createElement(CommitPanel, Object.assign({\n      dispute: dispute,\n      outcome: data.outcome,\n      onCommit: commit\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }));\n  }\n\n  if (mode === REQUEST_MODE.REVEAL) {\n    return React.createElement(RevealPanel, Object.assign({\n      dispute: dispute,\n      onReveal: reveal\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }));\n  }\n\n  if (mode === REQUEST_MODE.APPEAL) {\n    return React.createElement(AppealPanel, Object.assign({\n      dispute: dispute,\n      onApproveFeeDeposit: approveFeeDeposit,\n      onAppeal: appealRound,\n      confirm: data.confirm\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }));\n  }\n\n  return null;\n};\n\nexport default DisputeDetail;","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/Disputes/DisputeDetail.js"],"names":["React","useCallback","useMemo","BackButton","Bar","Box","GU","SidePanel","Split","useHistory","AppealPanel","Banner","CommitPanel","DisputeEvidences","DisputeInfo","DisputeTimeline","MessageCard","NoEvidence","RevealPanel","TitleHeader","Status","DisputeStatus","useDisputeLogic","REQUEST_MODE","DisputeNotFound","toMs","toUtf8String","DisputeDetail","memo","match","history","id","disputeId","params","actions","error","dispute","disputeFetching","requestMode","panelState","requests","evidenceList","evidences","map","evidence","createdAt","data","handleBack","push","noDispute","DisputeInfoComponent","draft","commit","reveal","leak","appeal","requestAutoReveal","executeRuling","marksPrecedent","status","Voided","fromGraph","length","timelineErrorSvg","visible","requestClose","endTransition","appealRound","approveFeeDeposit","PanelTitle","mode","COMMIT","REVEAL","APPEAL","confirm","PanelComponent","props","outcome"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo } from 'react'\nimport { BackButton, Bar, Box, GU, SidePanel, Split } from '@aragon/ui'\nimport { useHistory } from 'react-router-dom'\n\nimport AppealPanel from './panels/AppealPanel'\nimport Banner from './PrecedenceCampaign/PrecedenceCampaignBanner'\nimport CommitPanel from './panels/CommitPanel'\nimport DisputeEvidences from './DisputeEvidences'\nimport DisputeInfo from './DisputeInfo'\nimport DisputeTimeline from './DisputeTimeline'\nimport MessageCard from '../MessageCard'\nimport NoEvidence from './NoEvidence'\nimport RevealPanel from './panels/RevealPanel'\nimport TitleHeader from '../TitleHeader'\n\nimport { Status as DisputeStatus } from '../../types/dispute-status-types'\nimport { useDisputeLogic, REQUEST_MODE } from '../../hooks/dispute-logic'\nimport { DisputeNotFound } from '../../errors'\nimport { toMs } from '../../utils/date-utils'\nimport { toUtf8String } from '../../lib/web3-utils'\n\nimport timelineErrorSvg from '../../assets/timelineError.svg'\n\nconst DisputeDetail = React.memo(function DisputeDetail({ match }) {\n  const history = useHistory()\n  const { id: disputeId } = match.params\n\n  const {\n    actions,\n    error,\n    dispute,\n    disputeFetching,\n    requestMode,\n    panelState,\n    requests,\n  } = useDisputeLogic(disputeId)\n\n  const evidenceList = dispute?.evidences\n\n  const evidences = useMemo(\n    () =>\n      (evidenceList || []).map(evidence => ({\n        ...evidence,\n        createdAt: toMs(evidence.createdAt),\n        data: toUtf8String(evidence.data),\n      })),\n    [evidenceList]\n  )\n\n  const handleBack = useCallback(() => {\n    history.push('/disputes')\n  }, [history])\n\n  const noDispute = !dispute && !disputeFetching\n\n  if (noDispute && !error) {\n    throw new DisputeNotFound(disputeId)\n  }\n\n  const DisputeInfoComponent = (\n    <DisputeInfo\n      id={disputeId}\n      error={error}\n      dispute={dispute}\n      loading={disputeFetching}\n      onDraft={actions.draft}\n      onRequestCommit={requests.commit}\n      onRequestReveal={requests.reveal}\n      onLeak={actions.leak}\n      onRequestAppeal={requests.appeal}\n      onAutoReveal={actions.requestAutoReveal}\n      onExecuteRuling={actions.executeRuling}\n    />\n  )\n\n  return (\n    <React.Fragment>\n      {dispute?.marksPrecedent && <Banner disputeId={disputeId} />}\n      <TitleHeader title=\"Disputes\" />\n      <Bar>\n        <BackButton onClick={handleBack} />\n      </Bar>\n      {dispute?.status === DisputeStatus.Voided ? (\n        DisputeInfoComponent\n      ) : (\n        <Split\n          primary={\n            <React.Fragment>\n              {DisputeInfoComponent}\n              {(() => {\n                if (disputeFetching || error?.fromGraph) {\n                  return null\n                }\n                if (evidences.length === 0) {\n                  return <NoEvidence />\n                }\n                return (\n                  <DisputeEvidences dispute={dispute} evidences={evidences} />\n                )\n              })()}\n            </React.Fragment>\n          }\n          secondary={\n            <React.Fragment>\n              <Box\n                heading=\"Dispute timeline\"\n                padding={error?.fromGraph ? 3 * GU : 0}\n              >\n                {(() => {\n                  if (error?.fromGraph) {\n                    return (\n                      <MessageCard\n                        title=\"We couldn’t load the dispute timeline\"\n                        paragraph=\"Something went wrong! Please restart the app\"\n                        icon={timelineErrorSvg}\n                        mode=\"compact\"\n                        border={false}\n                      />\n                    )\n                  }\n                  if (disputeFetching) {\n                    return <div css=\"height: 200px\" />\n                  }\n                  return <DisputeTimeline dispute={dispute} />\n                })()}\n              </Box>\n            </React.Fragment>\n          }\n        />\n      )}\n      <SidePanel\n        title={<PanelTitle requestMode={requestMode} disputeId={disputeId} />}\n        opened={panelState.visible}\n        onClose={panelState.requestClose}\n        onTransitionEnd={panelState.endTransition}\n      >\n        <div\n          css={`\n            margin-top: ${2 * GU}px;\n          `}\n        >\n          <PanelComponent\n            dispute={dispute}\n            requestMode={requestMode}\n            commit={actions.commit}\n            reveal={actions.reveal}\n            appealRound={actions.appealRound}\n            approveFeeDeposit={actions.approveFeeDeposit}\n            onDone={panelState.requestClose}\n          />\n        </div>\n      </SidePanel>\n    </React.Fragment>\n  )\n})\n\nconst PanelTitle = ({ requestMode, disputeId }) => {\n  const { mode, data } = requestMode\n\n  if (mode === REQUEST_MODE.COMMIT) {\n    return `Commit your vote on dispute #${disputeId}`\n  }\n\n  if (mode === REQUEST_MODE.REVEAL) {\n    return `Reveal your vote on dispute #${disputeId}`\n  }\n\n  if (mode === REQUEST_MODE.APPEAL) {\n    return data.confirm\n      ? `Confirm an appeal on dispute #${disputeId}`\n      : `Appeal ruling on dispute #${disputeId}`\n  }\n\n  return null\n}\n\nconst PanelComponent = ({\n  appealRound,\n  approveFeeDeposit,\n  commit,\n  dispute,\n  requestMode,\n  reveal,\n  ...props\n}) => {\n  const { mode, data } = requestMode\n\n  if (mode === REQUEST_MODE.COMMIT) {\n    return (\n      <CommitPanel\n        dispute={dispute}\n        outcome={data.outcome}\n        onCommit={commit}\n        {...props}\n      />\n    )\n  }\n\n  if (mode === REQUEST_MODE.REVEAL) {\n    return <RevealPanel dispute={dispute} onReveal={reveal} {...props} />\n  }\n\n  if (mode === REQUEST_MODE.APPEAL) {\n    return (\n      <AppealPanel\n        dispute={dispute}\n        onApproveFeeDeposit={approveFeeDeposit}\n        onAppeal={appealRound}\n        confirm={data.confirm}\n        {...props}\n      />\n    )\n  }\n\n  return null\n}\n\nexport default DisputeDetail\n"]},"metadata":{},"sourceType":"module"}