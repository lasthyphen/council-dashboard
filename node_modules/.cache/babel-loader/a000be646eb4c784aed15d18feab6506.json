{"ast":null,"code":"\"use strict\"; // Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\n\nvar _classCallCheck = require(\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LinkFlow = void 0;\n\nvar preact_1 = require(\"preact\");\n\nvar rxjs_1 = require(\"rxjs\");\n\nvar LinkDialog_1 = require(\"./LinkDialog\");\n\nvar operators_1 = require(\"rxjs/operators\");\n\nvar TryExtensionLinkDialog_1 = require(\"./TryExtensionLinkDialog\");\n\nvar LinkFlow =\n/*#__PURE__*/\nfunction () {\n  function LinkFlow(options) {\n    var _this = this;\n\n    _classCallCheck(this, LinkFlow);\n\n    this.extensionUI$ = new rxjs_1.BehaviorSubject({});\n    this.subscriptions = new rxjs_1.Subscription();\n    this.isConnected = false;\n    this.isOpen = false;\n    this.onCancel = null;\n    this.root = null; // if true, hide QR code in LinkFlow (which happens if no jsonRpcUrl is provided)\n\n    this.connectDisabled = false;\n    this.darkMode = options.darkMode;\n    this.version = options.version;\n    this.sessionId = options.sessionId;\n    this.sessionSecret = options.sessionSecret;\n    this.walletLinkUrl = options.walletLinkUrl;\n    this.isParentConnection = options.isParentConnection;\n    this.connected$ = options.connected$; // Check if extension UI is enabled\n\n    fetch(\"https://api.wallet.coinbase.com/rpc/v2/getFeatureFlags\").then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      var enabled = json.result.desktop.extension_ui;\n\n      if (typeof enabled === \"undefined\") {\n        _this.extensionUI$.next({\n          value: false\n        });\n      } else {\n        _this.extensionUI$.next({\n          value: enabled\n        });\n      }\n    }).catch(function (_) {\n      _this.extensionUI$.next({\n        value: false\n      });\n    });\n  }\n\n  _createClass(LinkFlow, [{\n    key: \"attach\",\n    value: function attach(el) {\n      var _this2 = this;\n\n      this.root = document.createElement(\"div\");\n      this.root.className = \"-walletlink-link-flow-root\";\n      el.appendChild(this.root);\n      this.render();\n      this.subscriptions.add(this.connected$.subscribe(function (v) {\n        if (_this2.isConnected !== v) {\n          _this2.isConnected = v;\n\n          _this2.render();\n        }\n      }));\n    }\n  }, {\n    key: \"detach\",\n    value: function detach() {\n      var _a;\n\n      if (!this.root) {\n        return;\n      }\n\n      this.subscriptions.unsubscribe();\n      preact_1.render(null, this.root);\n      (_a = this.root.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.root);\n    }\n  }, {\n    key: \"setConnectDisabled\",\n    value: function setConnectDisabled(connectDisabled) {\n      this.connectDisabled = connectDisabled;\n    }\n  }, {\n    key: \"open\",\n    value: function open(options) {\n      this.isOpen = true;\n      this.onCancel = options.onCancel;\n      this.render();\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.isOpen = false;\n      this.onCancel = null;\n      this.render();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (!this.root) {\n        return;\n      }\n\n      var subscription = this.extensionUI$.pipe(operators_1.first(function (enabled) {\n        return enabled.value !== undefined;\n      })) // wait for a valid value before rendering\n      .subscribe(function (enabled) {\n        if (!_this3.root) {\n          return;\n        }\n\n        preact_1.render(enabled.value ? preact_1.h(TryExtensionLinkDialog_1.TryExtensionLinkDialog, {\n          darkMode: _this3.darkMode,\n          version: _this3.version,\n          sessionId: _this3.sessionId,\n          sessionSecret: _this3.sessionSecret,\n          walletLinkUrl: _this3.walletLinkUrl,\n          isOpen: _this3.isOpen,\n          isConnected: _this3.isConnected,\n          isParentConnection: _this3.isParentConnection,\n          onCancel: _this3.onCancel,\n          connectDisabled: _this3.connectDisabled\n        }) : preact_1.h(LinkDialog_1.LinkDialog, {\n          darkMode: _this3.darkMode,\n          version: _this3.version,\n          sessionId: _this3.sessionId,\n          sessionSecret: _this3.sessionSecret,\n          walletLinkUrl: _this3.walletLinkUrl,\n          isOpen: _this3.isOpen,\n          isConnected: _this3.isConnected,\n          isParentConnection: _this3.isParentConnection,\n          onCancel: _this3.onCancel\n        }), _this3.root);\n      });\n      this.subscriptions.add(subscription);\n    }\n  }]);\n\n  return LinkFlow;\n}();\n\nexports.LinkFlow = LinkFlow;","map":null,"metadata":{},"sourceType":"script"}