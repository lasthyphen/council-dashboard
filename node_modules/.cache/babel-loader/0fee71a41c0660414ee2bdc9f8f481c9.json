{"ast":null,"code":"import _styled17 from \"styled-components\";\nimport _styled16 from \"styled-components\";\nimport _styled15 from \"styled-components\";\nimport _styled14 from \"styled-components\";\nimport _styled13 from \"styled-components\";\nimport _styled12 from \"styled-components\";\nimport _styled11 from \"styled-components\";\nimport _styled10 from \"styled-components\";\nimport _styled9 from \"styled-components\";\nimport _styled8 from \"styled-components\";\nimport _styled7 from \"styled-components\";\nimport _styled6 from \"styled-components\";\nimport _styled5 from \"styled-components\";\nimport _styled4 from \"styled-components\";\nimport _styled3 from \"styled-components\";\nimport _styled2 from \"styled-components\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/saleemfareed/oneds/court-dashboard/src/components/Dashboard/Balance.js\";\nimport React, { useMemo } from 'react';\nimport { Button, GU, Help, textStyle, useTheme } from '@aragon/ui';\nimport { animated, useSpring } from 'react-spring';\nimport Loading from '../Loading';\nimport ANJLockedDistribution from './ANJLockedDistribution';\nimport SplitAmount from '../SplitAmount';\nimport { useCourtConfig } from '../../providers/CourtConfig';\nimport { useANJAmountToUsd } from '../../hooks/useTokenAmountToUsd';\nimport { PCT_BASE } from '../../utils/dispute-utils';\nimport { bigNum, formatTokenAmount, formatUnits } from '../../lib/math-utils';\nimport { movementDirection, convertToString } from '../../types/anj-types';\nimport ANJIcon from \"../../assets/IconANJ.svg\";\nimport lockIcon from \"../../assets/IconLock.svg\";\n\nvar _StyledDiv = _styled(\"div\").withConfig({\n  displayName: \"Balance___StyledDiv\",\n  componentId: \"sc-1qf2im8-0\"\n})([\"border-bottom:1px solid \", \";\"], p => p._css);\n\nvar _StyledAnimatedDiv = _styled(animated.div).withConfig({\n  displayName: \"Balance___StyledAnimatedDiv\",\n  componentId: \"sc-1qf2im8-1\"\n})([\"display:flex;align-items:flex-start;padding-bottom:\", \"px;\"], p => p._css2);\n\nvar _StyledDiv2 = _styled(\"div\").withConfig({\n  displayName: \"Balance___StyledDiv2\",\n  componentId: \"sc-1qf2im8-2\"\n})([\"padding:\", \"px;background:\", \";border-radius:50%;margin-right:\", \"px;\"], p => p._css3, p => p._css4, p => p._css5);\n\nvar _StyledImg = _styled(\"img\").withConfig({\n  displayName: \"Balance___StyledImg\",\n  componentId: \"sc-1qf2im8-3\"\n})([\"display:block;\"]);\n\nvar _StyledSpan = _styled(\"span\").withConfig({\n  displayName: \"Balance___StyledSpan\",\n  componentId: \"sc-1qf2im8-4\"\n})([\"       \", \" color:\", \";display:block;\"], p => p._css6, p => p._css7);\n\nvar _StyledDiv3 = _styled(\"div\").withConfig({\n  displayName: \"Balance___StyledDiv3\",\n  componentId: \"sc-1qf2im8-5\"\n})([\"\", \" line-height:1.2;display:flex;align-items:center;\"], p => p._css8);\n\nvar _StyledSpan2 = _styled(\"span\").withConfig({\n  displayName: \"Balance___StyledSpan2\",\n  componentId: \"sc-1qf2im8-6\"\n})([\"\", \" color:\", \";display:block;\"], p => p._css9, p => p._css10);\n\nvar _StyledDiv4 = _styled(\"div\").withConfig({\n  displayName: \"Balance___StyledDiv4\",\n  componentId: \"sc-1qf2im8-7\"\n})([\"height:96px;\"]);\n\nvar _StyledDiv5 = _styled(\"div\").withConfig({\n  displayName: \"Balance___StyledDiv5\",\n  componentId: \"sc-1qf2im8-8\"\n})([\"margin:\", \"px 0;color:\", \";\"], p => p._css11, p => p._css12);\n\nvar _StyledDiv6 = _styled(\"div\").withConfig({\n  displayName: \"Balance___StyledDiv6\",\n  componentId: \"sc-1qf2im8-9\"\n})([\"display:grid;grid-template-columns:repeat( auto-fit,minmax(calc(50% - 8px),1fr) );grid-column-gap:8px;\"]);\n\nconst Balance = React.memo(function Balance({\n  label,\n  amount,\n  loading,\n  actions,\n  mainIcon,\n  activity,\n  distribution,\n  mainIconBackground\n}) {\n  const theme = useTheme();\n  const {\n    anjToken: {\n      symbol,\n      decimals\n    }\n  } = useCourtConfig();\n  const convertedAmount = useANJAmountToUsd(amount);\n  const springProps = useSpring({\n    to: {\n      opacity: 1\n    },\n    from: {\n      opacity: 0\n    },\n    delay: 300\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(_StyledDiv, {\n    _css: theme.border.alpha(0.7),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, loading ? React.createElement(Loading, {\n    height: 86,\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }) : React.createElement(_StyledAnimatedDiv, {\n    style: springProps,\n    _css2: 2 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(_StyledDiv2, {\n    _css3: 1.5 * GU,\n    _css4: mainIconBackground,\n    _css5: 2 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(_StyledImg, {\n    src: mainIcon,\n    height: 3 * GU,\n    width: 3 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(_StyledSpan, {\n    _css6: textStyle('body2'),\n    _css7: theme.surfaceContentSecondary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, label), React.createElement(_StyledDiv3, {\n    _css8: textStyle('title3'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(SplitAmount, {\n    amount: formatUnits(amount, {\n      digits: decimals\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    height: \"20\",\n    width: \"18\",\n    src: ANJIcon,\n    alt: \"ANJ\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })), React.createElement(_StyledSpan2, {\n    _css9: textStyle('body4'),\n    _css10: theme.surfaceContentSecondary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"$ \", convertedAmount)))), loading ? React.createElement(_StyledDiv4, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }) : React.createElement(animated.div, {\n    style: springProps,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(_StyledDiv5, {\n    _css11: 2 * GU,\n    _css12: theme.surfaceContentSecondary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, activity ? React.createElement(LatestActivity, {\n    activity: activity,\n    tokenSymbol: symbol,\n    distribution: distribution,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }) : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"No activity in the last 24h\")), React.createElement(_StyledDiv6, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, actions.map((action, index) => {\n    return React.createElement(Button, {\n      key: index,\n      label: action.label,\n      mode: action.mode,\n      onClick: action.onClick,\n      wide: true,\n      disabled: amount.eq(0),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    });\n  }))));\n});\n\nvar _StyledDiv7 = _styled(\"div\").withConfig({\n  displayName: \"Balance___StyledDiv7\",\n  componentId: \"sc-1qf2im8-10\"\n})([\"display:flex;justify-content:space-between;\"]);\n\nvar _StyledDiv8 = _styled(\"div\").withConfig({\n  displayName: \"Balance___StyledDiv8\",\n  componentId: \"sc-1qf2im8-11\"\n})([\"display:flex;align-items:center;\"]);\n\nvar _StyledImg2 = _styled(\"img\").withConfig({\n  displayName: \"Balance___StyledImg2\",\n  componentId: \"sc-1qf2im8-12\"\n})([\"margin-right:\", \"px;\"], p => p._css13);\n\nvar _StyledSpan3 = _styled(\"span\").withConfig({\n  displayName: \"Balance___StyledSpan3\",\n  componentId: \"sc-1qf2im8-13\"\n})([\"color:\", \";margin-right:\", \"px;\"], p => p._css14, p => p._css15);\n\nvar _StyledSpan4 = _styled(\"span\").withConfig({\n  displayName: \"Balance___StyledSpan4\",\n  componentId: \"sc-1qf2im8-14\"\n})([\"color:\", \";\"], p => p._css16);\n\nconst LatestActivity = ({\n  activity,\n  distribution\n}) => {\n  const theme = useTheme();\n  const {\n    anjToken\n  } = useCourtConfig();\n  const isIncoming = activity.direction === movementDirection.Incoming;\n  const displaySign = activity.direction === movementDirection.Incoming || activity.direction === movementDirection.Outgoing;\n  let color = theme.contentSecondary; // If sign shouldn't be displayed it means it's a Locked movement\n\n  if (displaySign) color = isIncoming ? theme.positive : theme.negative;\n  return React.createElement(_StyledDiv7, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(_StyledDiv8, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, !displaySign && React.createElement(_StyledImg2, {\n    src: lockIcon,\n    alt: \"lock\",\n    width: \"12px\",\n    height: \"14px\",\n    _css13: 0.5 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }), React.createElement(_StyledSpan3, {\n    _css14: color,\n    _css15: 0.5 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, formatTokenAmount(activity.amount, isIncoming, anjToken.decimals, displaySign), ' ', anjToken.symbol), React.createElement(_StyledSpan4, {\n    _css16: theme.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, convertToString(activity.type, activity.direction))), distribution && React.createElement(ANJLockedHelp, {\n    distribution: distribution,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }));\n};\n\nvar _StyledDiv9 = _styled(\"div\").withConfig({\n  displayName: \"Balance___StyledDiv9\",\n  componentId: \"sc-1qf2im8-15\"\n})([\"display:flex;align-items:center;\"]);\n\nvar _StyledSpan5 = _styled(\"span\").withConfig({\n  displayName: \"Balance___StyledSpan5\",\n  componentId: \"sc-1qf2im8-16\"\n})([\"color:\", \";margin-right:\", \"px;\"], p => p._css17, p => p._css18);\n\nconst ANJLockedHelp = ({\n  distribution\n}) => {\n  const theme = useTheme();\n  const {\n    showDistribution,\n    text\n  } = useHelpAttributes(distribution);\n  let hintText = \"What's my ANJ distribution\";\n\n  if (!showDistribution) {\n    hintText = distribution.inProcess.gt(0) ? 'Why is my ANJ being deactivated' : 'Why is my balance locked';\n  }\n\n  return React.createElement(_StyledDiv9, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, React.createElement(_StyledSpan5, {\n    _css17: theme.help,\n    _css18: 0.5 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, showDistribution ? 'ANJ Distribution ' : 'Why'), React.createElement(Help, {\n    hint: hintText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, showDistribution ? React.createElement(ANJLockedDistribution, {\n    distribution: distribution,\n    text: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }) : text));\n};\n\nfunction useHelpAttributes(distribution) {\n  const {\n    anjToken,\n    minActiveBalance,\n    penaltyPct\n  } = useCourtConfig();\n  return useMemo(() => {\n    if (distribution.inProcess.gt(0)) {\n      return {\n        showDistribution: !!distribution.lockedPerDispute,\n        // If juror has  ANJ locked in disputes, we'll show distribution\n        text: 'Deactivating ANJ does not happen immediately and requires one term before it can be processed.'\n      };\n    }\n\n    const {\n      lockedPerDispute\n    } = distribution;\n    const onlyOneDispute = lockedPerDispute.length === 1;\n    const isJurorDraftedMultipleTimesSameDispute = lockedPerDispute.some(lock => lock.weight.gt(1));\n    let text;\n    const {\n      decimals,\n      symbol\n    } = anjToken;\n    const penaltyPercentage = bigNum(penaltyPct).div(PCT_BASE.div(100));\n    const minActiveBalanceFormatted = formatUnits(minActiveBalance, {\n      digits: decimals\n    });\n    const minLockedAmountFormatted = formatUnits(minActiveBalance.mul(penaltyPct).div(PCT_BASE), {\n      digits: decimals\n    });\n\n    if (isJurorDraftedMultipleTimesSameDispute) {\n      text = 'The same juror can be drafted multiple times to arbitrate the same dispute for the same round.  When that happens, their voting weight will be proportional to the number of times they are drafted, as well as the % of ANJ locked in the Active balance.';\n    } else {\n      text = onlyOneDispute ? `A portion of your active ANJ has been locked because you were drafted in a dispute. This amount will be locked until the dispute has been resolved. The exact locked amount corresponds to the ${penaltyPercentage}% of the minimum active balance for each time you get drafted. The minimum active balance is currently ${minActiveBalanceFormatted} ${symbol}, therefore the amount locked would be ${minLockedAmountFormatted} ANJ.` : '';\n    }\n\n    return {\n      text,\n      showDistribution: !onlyOneDispute || isJurorDraftedMultipleTimesSameDispute\n    };\n  }, [anjToken, distribution, minActiveBalance, penaltyPct]);\n}\n\nexport default Balance;","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/Dashboard/Balance.js"],"names":["React","useMemo","Button","GU","Help","textStyle","useTheme","animated","useSpring","Loading","ANJLockedDistribution","SplitAmount","useCourtConfig","useANJAmountToUsd","PCT_BASE","bigNum","formatTokenAmount","formatUnits","movementDirection","convertToString","Balance","memo","label","amount","loading","actions","mainIcon","activity","distribution","mainIconBackground","theme","anjToken","symbol","decimals","convertedAmount","springProps","to","opacity","from","delay","border","alpha","surfaceContentSecondary","digits","ANJIcon","map","action","index","mode","onClick","eq","LatestActivity","isIncoming","direction","Incoming","displaySign","Outgoing","color","contentSecondary","positive","negative","lockIcon","content","type","ANJLockedHelp","showDistribution","text","useHelpAttributes","hintText","inProcess","gt","help","minActiveBalance","penaltyPct","lockedPerDispute","onlyOneDispute","length","isJurorDraftedMultipleTimesSameDispute","some","lock","weight","penaltyPercentage","div","minActiveBalanceFormatted","minLockedAmountFormatted","mul"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\nimport { Button, GU, Help, textStyle, useTheme } from '@aragon/ui'\nimport { animated, useSpring } from 'react-spring'\n\nimport Loading from '../Loading'\nimport ANJLockedDistribution from './ANJLockedDistribution'\nimport SplitAmount from '../SplitAmount'\n\nimport { useCourtConfig } from '../../providers/CourtConfig'\nimport { useANJAmountToUsd } from '../../hooks/useTokenAmountToUsd'\n\nimport { PCT_BASE } from '../../utils/dispute-utils'\nimport { bigNum, formatTokenAmount, formatUnits } from '../../lib/math-utils'\nimport { movementDirection, convertToString } from '../../types/anj-types'\n\nimport ANJIcon from '../../assets/IconANJ.svg'\nimport lockIcon from '../../assets/IconLock.svg'\n\nconst Balance = React.memo(function Balance({\n  label,\n  amount,\n  loading,\n  actions,\n  mainIcon,\n  activity,\n  distribution,\n  mainIconBackground,\n}) {\n  const theme = useTheme()\n  const {\n    anjToken: { symbol, decimals },\n  } = useCourtConfig()\n\n  const convertedAmount = useANJAmountToUsd(amount)\n\n  const springProps = useSpring({\n    to: { opacity: 1 },\n    from: { opacity: 0 },\n    delay: 300,\n  })\n\n  return (\n    <div>\n      <div\n        css={`\n          border-bottom: 1px solid ${theme.border.alpha(0.7)};\n        `}\n      >\n        {loading ? (\n          <Loading height={86} size=\"large\" />\n        ) : (\n          <animated.div\n            style={springProps}\n            css={`\n              display: flex;\n              align-items: flex-start;\n              padding-bottom: ${2 * GU}px;\n            `}\n          >\n            <div\n              css={`\n                padding: ${1.5 * GU}px;\n                background: ${mainIconBackground};\n                border-radius: 50%;\n                margin-right: ${2 * GU}px;\n              `}\n            >\n              <img\n                css={`\n                  display: block;\n                `}\n                src={mainIcon}\n                height={3 * GU}\n                width={3 * GU}\n              />\n            </div>\n            <div>\n              <span\n                css={`      \n                ${textStyle('body2')}\n                color: ${theme.surfaceContentSecondary};\n                display:block;\n              `}\n              >\n                {label}\n              </span>\n              <div\n                css={`\n                  ${textStyle('title3')}\n                  line-height: 1.2;\n                  display: flex;\n                  align-items: center;\n                `}\n              >\n                <SplitAmount\n                  amount={formatUnits(amount, { digits: decimals })}\n                />\n                <img height=\"20\" width=\"18\" src={ANJIcon} alt=\"ANJ\" />\n              </div>\n              <span\n                css={`\n                ${textStyle('body4')}\n                color: ${theme.surfaceContentSecondary};\n                display:block;\n              `}\n              >\n                $ {convertedAmount}\n              </span>\n            </div>\n          </animated.div>\n        )}\n      </div>\n      {loading ? (\n        <div\n          css={`\n            height: 96px;\n          `}\n        />\n      ) : (\n        <animated.div style={springProps}>\n          <div\n            css={`\n              margin: ${2 * GU}px 0;\n              color: ${theme.surfaceContentSecondary};\n            `}\n          >\n            {activity ? (\n              <LatestActivity\n                activity={activity}\n                tokenSymbol={symbol}\n                distribution={distribution}\n              />\n            ) : (\n              <span>No activity in the last 24h</span>\n            )}\n          </div>\n          <div\n            css={`\n              display: grid;\n              grid-template-columns: repeat(\n                auto-fit,\n                minmax(calc(50% - 8px), 1fr)\n              );\n              grid-column-gap: 8px;\n            `}\n          >\n            {actions.map((action, index) => {\n              return (\n                <Button\n                  key={index}\n                  label={action.label}\n                  mode={action.mode}\n                  onClick={action.onClick}\n                  wide\n                  disabled={amount.eq(0)}\n                />\n              )\n            })}\n          </div>\n        </animated.div>\n      )}\n    </div>\n  )\n})\n\nconst LatestActivity = ({ activity, distribution }) => {\n  const theme = useTheme()\n  const { anjToken } = useCourtConfig()\n  const isIncoming = activity.direction === movementDirection.Incoming\n  const displaySign =\n    activity.direction === movementDirection.Incoming ||\n    activity.direction === movementDirection.Outgoing\n\n  let color = theme.contentSecondary\n  // If sign shouldn't be displayed it means it's a Locked movement\n  if (displaySign) color = isIncoming ? theme.positive : theme.negative\n\n  return (\n    <div\n      css={`\n        display: flex;\n        justify-content: space-between;\n      `}\n    >\n      <div\n        css={`\n          display: flex;\n          align-items: center;\n        `}\n      >\n        {!displaySign && (\n          <img\n            src={lockIcon}\n            alt=\"lock\"\n            width=\"12px\"\n            height=\"14px\"\n            css={`\n              margin-right: ${0.5 * GU}px;\n            `}\n          />\n        )}\n        <span\n          css={`\n            color: ${color};\n            margin-right: ${0.5 * GU}px;\n          `}\n        >\n          {formatTokenAmount(\n            activity.amount,\n            isIncoming,\n            anjToken.decimals,\n            displaySign\n          )}{' '}\n          {anjToken.symbol}\n        </span>\n        <span\n          css={`\n            color: ${theme.content};\n          `}\n        >\n          {convertToString(activity.type, activity.direction)}\n        </span>\n      </div>\n      {distribution && <ANJLockedHelp distribution={distribution} />}\n    </div>\n  )\n}\n\nconst ANJLockedHelp = ({ distribution }) => {\n  const theme = useTheme()\n\n  const { showDistribution, text } = useHelpAttributes(distribution)\n\n  let hintText = \"What's my ANJ distribution\"\n  if (!showDistribution) {\n    hintText = distribution.inProcess.gt(0)\n      ? 'Why is my ANJ being deactivated'\n      : 'Why is my balance locked'\n  }\n\n  return (\n    <div\n      css={`\n        display: flex;\n        align-items: center;\n      `}\n    >\n      <span\n        css={`\n          color: ${theme.help};\n          margin-right: ${0.5 * GU}px;\n        `}\n      >\n        {showDistribution ? 'ANJ Distribution ' : 'Why'}\n      </span>\n      <Help hint={hintText}>\n        {showDistribution ? (\n          <ANJLockedDistribution distribution={distribution} text={text} />\n        ) : (\n          text\n        )}\n      </Help>\n    </div>\n  )\n}\n\nfunction useHelpAttributes(distribution) {\n  const { anjToken, minActiveBalance, penaltyPct } = useCourtConfig()\n\n  return useMemo(() => {\n    if (distribution.inProcess.gt(0)) {\n      return {\n        showDistribution: !!distribution.lockedPerDispute, // If juror has  ANJ locked in disputes, we'll show distribution\n        text:\n          'Deactivating ANJ does not happen immediately and requires one term before it can be processed.',\n      }\n    }\n\n    const { lockedPerDispute } = distribution\n\n    const onlyOneDispute = lockedPerDispute.length === 1\n    const isJurorDraftedMultipleTimesSameDispute = lockedPerDispute.some(lock =>\n      lock.weight.gt(1)\n    )\n\n    let text\n    const { decimals, symbol } = anjToken\n    const penaltyPercentage = bigNum(penaltyPct).div(PCT_BASE.div(100))\n    const minActiveBalanceFormatted = formatUnits(minActiveBalance, {\n      digits: decimals,\n    })\n    const minLockedAmountFormatted = formatUnits(\n      minActiveBalance.mul(penaltyPct).div(PCT_BASE),\n      { digits: decimals }\n    )\n\n    if (isJurorDraftedMultipleTimesSameDispute) {\n      text =\n        'The same juror can be drafted multiple times to arbitrate the same dispute for the same round.  When that happens, their voting weight will be proportional to the number of times they are drafted, as well as the % of ANJ locked in the Active balance.'\n    } else {\n      text = onlyOneDispute\n        ? `A portion of your active ANJ has been locked because you were drafted in a dispute. This amount will be locked until the dispute has been resolved. The exact locked amount corresponds to the ${penaltyPercentage}% of the minimum active balance for each time you get drafted. The minimum active balance is currently ${minActiveBalanceFormatted} ${symbol}, therefore the amount locked would be ${minLockedAmountFormatted} ANJ.`\n        : ''\n    }\n\n    return {\n      text,\n      showDistribution:\n        !onlyOneDispute || isJurorDraftedMultipleTimesSameDispute,\n    }\n  }, [anjToken, distribution, minActiveBalance, penaltyPct])\n}\n\nexport default Balance\n"]},"metadata":{},"sourceType":"module"}