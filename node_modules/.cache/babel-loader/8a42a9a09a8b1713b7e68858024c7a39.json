{"ast":null,"code":"import _regeneratorRuntime from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{useLocation}from'react-router-dom';import{useWallet}from'../../../providers/Wallet';import{verifyJurorEmail,getJurorEmail}from'../../../services/notificationServiceApi';import{useSubscriptionDetails}from'../../../hooks/useEmailNotifications';import EmailNotificationsManager from'../../EmailNotifications/EmailNotificationsManager';import{EMAIL_NOTIFICATIONS_FORM_SCREEN,NOTIFICATIONS_PREFERENCES_SCREEN,UNLOCK_NOTIFICATIONS_SCREEN,VERIFICATION_ERROR_SCREEN,VERIFICATION_SUCCESS_SCREEN,VERIFY_EMAIL_ADDRESS_PREFERENCES,LOADING_SCREEN}from'../../EmailNotifications/constants';var NotificationsManager=React.memo(function NotificationsManager(_ref){var onReturnToDashboard=_ref.onReturnToDashboard;var _useWallet=useWallet(),account=_useWallet.account;var _useLocation=useLocation(),search=_useLocation.search;var _useState=useState(),_useState2=_slicedToArray(_useState,2),startingScreenId=_useState2[0],setStartingScreenId=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),jurorNeedsSignature=_useState4[0],setJurorNeedsSignature=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),jurorEmail=_useState6[0],setJurorEmail=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),fetchingEmail=_useState8[0],setFetchingEmail=_useState8[1];var _useSubscriptionDetai=useSubscriptionDetails(account),emailExists=_useSubscriptionDetai.emailExists,emailVerified=_useSubscriptionDetai.emailVerified,notificationsDisabled=_useSubscriptionDetai.notificationsDisabled,fetchingSubscriptionData=_useSubscriptionDetai.fetching;var searchParams=new URLSearchParams(search);var address=searchParams.get('address');var token=searchParams.get('token');useEffect(function(){var cancelled=false;if(!token||!address){return;}var verifyEmailAddress=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _ref3,error;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return verifyJurorEmail(address,token);case 2:_ref3=_context.sent;error=_ref3.error;if(cancelled){_context.next=8;break;}if(!error){_context.next=7;break;}return _context.abrupt(\"return\",setStartingScreenId(VERIFICATION_ERROR_SCREEN));case 7:return _context.abrupt(\"return\",setStartingScreenId(VERIFICATION_SUCCESS_SCREEN));case 8:case\"end\":return _context.stop();}}},_callee);}));return function verifyEmailAddress(){return _ref2.apply(this,arguments);};}();verifyEmailAddress();return function(){cancelled=true;};},[account,address,token]);useEffect(function(){if(token||address){return;}if(!account){return setStartingScreenId(UNLOCK_NOTIFICATIONS_SCREEN);}if(fetchingSubscriptionData||fetchingEmail){return setStartingScreenId(LOADING_SCREEN);}if(jurorNeedsSignature){return setStartingScreenId(UNLOCK_NOTIFICATIONS_SCREEN);}if(!emailVerified&&emailExists){return setStartingScreenId(VERIFY_EMAIL_ADDRESS_PREFERENCES);}if(!emailVerified){return setStartingScreenId(EMAIL_NOTIFICATIONS_FORM_SCREEN);}if(emailVerified&&!jurorNeedsSignature){return setStartingScreenId(NOTIFICATIONS_PREFERENCES_SCREEN);}},[account,emailExists,emailVerified,fetchingEmail,fetchingSubscriptionData,jurorNeedsSignature,address,token]);useEffect(function(){var cancelled=false;var getEmail=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _ref5,needsSignature,email;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(address||token||!account)){_context2.next=2;break;}return _context2.abrupt(\"return\");case 2:setFetchingEmail(true);if(cancelled){_context2.next=12;break;}_context2.next=6;return getJurorEmail(account);case 6:_ref5=_context2.sent;needsSignature=_ref5.needsSignature;email=_ref5.email;setJurorNeedsSignature(needsSignature);setJurorEmail(email);setFetchingEmail(false);case 12:case\"end\":return _context2.stop();}}},_callee2);}));return function getEmail(){return _ref4.apply(this,arguments);};}();getEmail();return function(){cancelled=true;};},[address,account,token]);return startingScreenId&&React.createElement(EmailNotificationsManager,{needsUnlockSettings:jurorNeedsSignature,emailExists:emailExists,emailVerified:emailVerified,notificationsDisabled:notificationsDisabled,email:jurorEmail,startingScreen:startingScreenId,onReturnToDashboard:onReturnToDashboard});});export default NotificationsManager;","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/GlobalPreferences/Notifications/NotificationsManager.js"],"names":["React","useEffect","useState","useLocation","useWallet","verifyJurorEmail","getJurorEmail","useSubscriptionDetails","EmailNotificationsManager","EMAIL_NOTIFICATIONS_FORM_SCREEN","NOTIFICATIONS_PREFERENCES_SCREEN","UNLOCK_NOTIFICATIONS_SCREEN","VERIFICATION_ERROR_SCREEN","VERIFICATION_SUCCESS_SCREEN","VERIFY_EMAIL_ADDRESS_PREFERENCES","LOADING_SCREEN","NotificationsManager","memo","onReturnToDashboard","account","search","startingScreenId","setStartingScreenId","jurorNeedsSignature","setJurorNeedsSignature","jurorEmail","setJurorEmail","fetchingEmail","setFetchingEmail","emailExists","emailVerified","notificationsDisabled","fetchingSubscriptionData","fetching","searchParams","URLSearchParams","address","get","token","cancelled","verifyEmailAddress","error","getEmail","needsSignature","email"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { useWallet } from '../../../providers/Wallet'\nimport {\n  verifyJurorEmail,\n  getJurorEmail,\n} from '../../../services/notificationServiceApi'\nimport { useSubscriptionDetails } from '../../../hooks/useEmailNotifications'\nimport EmailNotificationsManager from '../../EmailNotifications/EmailNotificationsManager'\nimport {\n  EMAIL_NOTIFICATIONS_FORM_SCREEN,\n  NOTIFICATIONS_PREFERENCES_SCREEN,\n  UNLOCK_NOTIFICATIONS_SCREEN,\n  VERIFICATION_ERROR_SCREEN,\n  VERIFICATION_SUCCESS_SCREEN,\n  VERIFY_EMAIL_ADDRESS_PREFERENCES,\n  LOADING_SCREEN,\n} from '../../EmailNotifications/constants'\n\nconst NotificationsManager = React.memo(function NotificationsManager({\n  onReturnToDashboard,\n}) {\n  const { account } = useWallet()\n  const { search } = useLocation()\n  const [startingScreenId, setStartingScreenId] = useState()\n  const [jurorNeedsSignature, setJurorNeedsSignature] = useState()\n  const [jurorEmail, setJurorEmail] = useState('')\n  const [fetchingEmail, setFetchingEmail] = useState()\n\n  const {\n    emailExists,\n    emailVerified,\n    notificationsDisabled,\n    fetching: fetchingSubscriptionData,\n  } = useSubscriptionDetails(account)\n\n  const searchParams = new URLSearchParams(search)\n  const address = searchParams.get('address')\n  const token = searchParams.get('token')\n\n  useEffect(() => {\n    let cancelled = false\n\n    if (!token || !address) {\n      return\n    }\n\n    const verifyEmailAddress = async () => {\n      const { error } = await verifyJurorEmail(address, token)\n\n      if (!cancelled) {\n        if (error) {\n          return setStartingScreenId(VERIFICATION_ERROR_SCREEN)\n        }\n        return setStartingScreenId(VERIFICATION_SUCCESS_SCREEN)\n      }\n    }\n\n    verifyEmailAddress()\n    return () => {\n      cancelled = true\n    }\n  }, [account, address, token])\n\n  useEffect(() => {\n    if (token || address) {\n      return\n    }\n    if (!account) {\n      return setStartingScreenId(UNLOCK_NOTIFICATIONS_SCREEN)\n    }\n\n    if (fetchingSubscriptionData || fetchingEmail) {\n      return setStartingScreenId(LOADING_SCREEN)\n    }\n    if (jurorNeedsSignature) {\n      return setStartingScreenId(UNLOCK_NOTIFICATIONS_SCREEN)\n    }\n\n    if (!emailVerified && emailExists) {\n      return setStartingScreenId(VERIFY_EMAIL_ADDRESS_PREFERENCES)\n    }\n    if (!emailVerified) {\n      return setStartingScreenId(EMAIL_NOTIFICATIONS_FORM_SCREEN)\n    }\n\n    if (emailVerified && !jurorNeedsSignature) {\n      return setStartingScreenId(NOTIFICATIONS_PREFERENCES_SCREEN)\n    }\n  }, [\n    account,\n    emailExists,\n    emailVerified,\n    fetchingEmail,\n    fetchingSubscriptionData,\n    jurorNeedsSignature,\n    address,\n    token,\n  ])\n\n  useEffect(() => {\n    let cancelled = false\n    const getEmail = async () => {\n      if (address || token || !account) {\n        return\n      }\n      setFetchingEmail(true)\n\n      if (!cancelled) {\n        const { needsSignature, email } = await getJurorEmail(account)\n\n        setJurorNeedsSignature(needsSignature)\n        setJurorEmail(email)\n        setFetchingEmail(false)\n      }\n    }\n    getEmail()\n    return () => {\n      cancelled = true\n    }\n  }, [address, account, token])\n\n  return (\n    startingScreenId && (\n      <EmailNotificationsManager\n        needsUnlockSettings={jurorNeedsSignature}\n        emailExists={emailExists}\n        emailVerified={emailVerified}\n        notificationsDisabled={notificationsDisabled}\n        email={jurorEmail}\n        startingScreen={startingScreenId}\n        onReturnToDashboard={onReturnToDashboard}\n      />\n    )\n  )\n})\n\nexport default NotificationsManager\n"]},"metadata":{},"sourceType":"module"}