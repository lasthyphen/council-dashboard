{"ast":null,"code":"import _styled7 from \"styled-components\";\nimport _styled6 from \"styled-components\";\nimport _styled5 from \"styled-components\";\nimport _styled4 from \"styled-components\";\nimport _styled3 from \"styled-components\";\nimport _styled2 from \"styled-components\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/saleemfareed/oneds/court-dashboard/src/components/Disputes/DisputeInfo.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, GU, TransactionBadge, textStyle, useTheme } from '@aragon/ui';\nimport DisputeActions from './DisputeActions';\nimport DisputeCurrentRuling from './DisputeCurrentRuling';\nimport DisputeInfoContent from './DisputeInfoContent';\nimport DisputeStatus from './DisputeStatus';\nimport DisputeVoided from './DisputeVoided';\nimport ErrorLoading from '../Errors/ErrorLoading';\nimport LoadingCard from '../LoadingCard';\nimport { Phase as DisputePhase, Status } from '../../types/dispute-status-types';\nimport { getNetworkType } from '../../lib/web3-utils';\nimport iconCourt from \"../../assets/courtIcon.svg\";\n\nvar _StyledSection = _styled(\"section\").withConfig({\n  displayName: \"DisputeInfo___StyledSection\",\n  componentId: \"sc-1ps3uft-0\"\n})([\"display:grid;grid-template-columns:auto;grid-gap:\", \"px;align-items:center;\"], p => p._css);\n\nconst DisputeInfo = React.memo(function ({\n  id,\n  error,\n  dispute,\n  loading,\n  onDraft,\n  onLeak,\n  onAutoReveal,\n  onExecuteRuling,\n  onRequestAppeal,\n  onRequestCommit,\n  onRequestReveal\n}) {\n  const {\n    phase,\n    status\n  } = dispute || {};\n  const isDisputeVoided = status === Status.Voided;\n  const isFinalRulingEnsured = phase === DisputePhase.ExecuteRuling || status === Status.Closed;\n  return React.createElement(Box, {\n    padding: 5 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(_StyledSection, {\n    _css: 2.5 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(DisputeHeader, {\n    dispute: dispute,\n    error: error === null || error === void 0 ? void 0 : error.message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), (() => {\n    if (error) {\n      return React.createElement(ErrorLoading, {\n        subject: \"dispute\",\n        errors: [error.message],\n        border: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      });\n    }\n\n    if (loading) {\n      return React.createElement(LoadingCard, {\n        border: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      });\n    }\n\n    if (isDisputeVoided) {\n      return React.createElement(DisputeVoided, {\n        id: id,\n        description: dispute.voidedDescription,\n        link: dispute.voidedLink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(DisputeInfoContent, {\n      dispute: dispute,\n      isFinalRulingEnsured: isFinalRulingEnsured,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    });\n  })(), !loading && !isDisputeVoided && !(error === null || error === void 0 ? void 0 : error.fromGraph) && React.createElement(React.Fragment, null, (phase === DisputePhase.AppealRuling || phase === DisputePhase.ConfirmAppeal || isFinalRulingEnsured) && React.createElement(DisputeCurrentRuling, {\n    dispute: dispute,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(DisputeActions, {\n    dispute: dispute,\n    onAutoReveal: onAutoReveal,\n    onDraft: onDraft,\n    onRequestCommit: onRequestCommit,\n    onRequestReveal: onRequestReveal,\n    onLeak: onLeak,\n    onRequestAppeal: onRequestAppeal,\n    onExecuteRuling: onExecuteRuling,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }))));\n});\n\nvar _StyledDiv = _styled(\"div\").withConfig({\n  displayName: \"DisputeInfo___StyledDiv\",\n  componentId: \"sc-1ps3uft-1\"\n})([\"display:flex;margin-bottom:\", \"px;\"], p => p._css2);\n\nvar _StyledDiv2 = _styled(\"div\").withConfig({\n  displayName: \"DisputeInfo___StyledDiv2\",\n  componentId: \"sc-1ps3uft-2\"\n})([\"display:flex;align-items:center;width:100%;\"]);\n\nvar _StyledDiv3 = _styled(\"div\").withConfig({\n  displayName: \"DisputeInfo___StyledDiv3\",\n  componentId: \"sc-1ps3uft-3\"\n})([\"background:linear-gradient( 233deg,\", \" -50%,\", \" 91% );border-radius:50%;padding:\", \"px;display:inline-block;\"], p => p._css3, p => p._css4, p => p._css5);\n\nvar _StyledDiv4 = _styled(\"div\").withConfig({\n  displayName: \"DisputeInfo___StyledDiv4\",\n  componentId: \"sc-1ps3uft-4\"\n})([\"margin-left:\", \"px;width:100%;\"], p => p._css6);\n\nvar _StyledH = _styled(\"h1\").withConfig({\n  displayName: \"DisputeInfo___StyledH\",\n  componentId: \"sc-1ps3uft-5\"\n})([\"display:flex;align-items:center;justify-content:space-between;margin-bottom:\", \"px;\", \";width:100%;\"], p => p._css7, p => p._css8);\n\nvar _StyledDisputeStatus = _styled(DisputeStatus).withConfig({\n  displayName: \"DisputeInfo___StyledDisputeStatus\",\n  componentId: \"sc-1ps3uft-6\"\n})([\"margin:0 0 0 \", \"px;\"], p => p._css9);\n\nfunction DisputeHeader({\n  dispute,\n  error\n}) {\n  const theme = useTheme();\n  const {\n    id,\n    description,\n    txHash\n  } = dispute || {};\n  return React.createElement(_StyledDiv, {\n    _css2: 3 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(_StyledDiv2, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(_StyledDiv3, {\n    _css3: theme.accentStart,\n    _css4: theme.accentEnd,\n    _css5: 1.5 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: iconCourt,\n    alt: \"\",\n    width: \"39\",\n    height: \"32\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  })), React.createElement(_StyledDiv4, {\n    _css6: 3 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(_StyledH, {\n    _css7: 1 * GU,\n    _css8: textStyle('title3'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Dispute #\", id, \": \", description), !error && dispute && React.createElement(_StyledDisputeStatus, {\n    dispute: dispute,\n    _css9: 1 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  })), Boolean((dispute === null || dispute === void 0 ? void 0 : dispute.status) !== Status.Voided && txHash) && React.createElement(TransactionBadge, {\n    transaction: txHash,\n    networkType: getNetworkType(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }))));\n}\n\nDisputeInfo.propTypes = {\n  dispute: PropTypes.object,\n  // TODO: define DisputeType\n  id: PropTypes.string.isRequired,\n  loading: PropTypes.bool\n};\nexport default DisputeInfo;","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/Disputes/DisputeInfo.js"],"names":["React","PropTypes","Box","GU","TransactionBadge","textStyle","useTheme","DisputeActions","DisputeCurrentRuling","DisputeInfoContent","DisputeStatus","DisputeVoided","ErrorLoading","LoadingCard","Phase","DisputePhase","Status","getNetworkType","DisputeInfo","memo","id","error","dispute","loading","onDraft","onLeak","onAutoReveal","onExecuteRuling","onRequestAppeal","onRequestCommit","onRequestReveal","phase","status","isDisputeVoided","Voided","isFinalRulingEnsured","ExecuteRuling","Closed","message","voidedDescription","voidedLink","fromGraph","AppealRuling","ConfirmAppeal","DisputeHeader","theme","description","txHash","accentStart","accentEnd","iconCourt","Boolean","propTypes","object","string","isRequired","bool"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Box, GU, TransactionBadge, textStyle, useTheme } from '@aragon/ui'\nimport DisputeActions from './DisputeActions'\nimport DisputeCurrentRuling from './DisputeCurrentRuling'\nimport DisputeInfoContent from './DisputeInfoContent'\nimport DisputeStatus from './DisputeStatus'\nimport DisputeVoided from './DisputeVoided'\nimport ErrorLoading from '../Errors/ErrorLoading'\nimport LoadingCard from '../LoadingCard'\nimport { Phase as DisputePhase, Status } from '../../types/dispute-status-types'\nimport { getNetworkType } from '../../lib/web3-utils'\n\nimport iconCourt from '../../assets/courtIcon.svg'\n\nconst DisputeInfo = React.memo(function({\n  id,\n  error,\n  dispute,\n  loading,\n  onDraft,\n  onLeak,\n  onAutoReveal,\n  onExecuteRuling,\n  onRequestAppeal,\n  onRequestCommit,\n  onRequestReveal,\n}) {\n  const { phase, status } = dispute || {}\n\n  const isDisputeVoided = status === Status.Voided\n  const isFinalRulingEnsured =\n    phase === DisputePhase.ExecuteRuling || status === Status.Closed\n\n  return (\n    <Box padding={5 * GU}>\n      <section\n        css={`\n          display: grid;\n          grid-template-columns: auto;\n          grid-gap: ${2.5 * GU}px;\n          align-items: center;\n        `}\n      >\n        <DisputeHeader dispute={dispute} error={error?.message} />\n        {(() => {\n          if (error) {\n            return (\n              <ErrorLoading\n                subject=\"dispute\"\n                errors={[error.message]}\n                border={false}\n              />\n            )\n          }\n\n          if (loading) {\n            return <LoadingCard border={false} />\n          }\n\n          if (isDisputeVoided) {\n            return (\n              <DisputeVoided\n                id={id}\n                description={dispute.voidedDescription}\n                link={dispute.voidedLink}\n              />\n            )\n          }\n          return (\n            <DisputeInfoContent\n              dispute={dispute}\n              isFinalRulingEnsured={isFinalRulingEnsured}\n            />\n          )\n        })()}\n        {!loading && !isDisputeVoided && !error?.fromGraph && (\n          <>\n            {(phase === DisputePhase.AppealRuling ||\n              phase === DisputePhase.ConfirmAppeal ||\n              isFinalRulingEnsured) && (\n              <DisputeCurrentRuling dispute={dispute} />\n            )}\n            <DisputeActions\n              dispute={dispute}\n              onAutoReveal={onAutoReveal}\n              onDraft={onDraft}\n              onRequestCommit={onRequestCommit}\n              onRequestReveal={onRequestReveal}\n              onLeak={onLeak}\n              onRequestAppeal={onRequestAppeal}\n              onExecuteRuling={onExecuteRuling}\n            />\n          </>\n        )}\n      </section>\n    </Box>\n  )\n})\n\nfunction DisputeHeader({ dispute, error }) {\n  const theme = useTheme()\n  const { id, description, txHash } = dispute || {}\n\n  return (\n    <div\n      css={`\n        display: flex;\n        margin-bottom: ${3 * GU}px;\n      `}\n    >\n      <div\n        css={`\n          display: flex;\n          align-items: center;\n          width: 100%;\n        `}\n      >\n        <div\n          css={`\n            background: linear-gradient(\n              233deg,\n              ${theme.accentStart} -50%,\n              ${theme.accentEnd} 91%\n            );\n            border-radius: 50%;\n            padding: ${1.5 * GU}px;\n            display: inline-block;\n          `}\n        >\n          <img src={iconCourt} alt=\"\" width=\"39\" height=\"32\" />\n        </div>\n        <div\n          css={`\n            margin-left: ${3 * GU}px;\n            width: 100%;\n          `}\n        >\n          <h1\n            css={`\n              display: flex;\n              align-items: center;\n              justify-content: space-between;\n              margin-bottom: ${1 * GU}px;\n              ${textStyle('title3')};\n              width: 100%;\n            `}\n          >\n            <span>\n              Dispute #{id}: {description}\n            </span>\n            {!error && dispute && (\n              <DisputeStatus\n                dispute={dispute}\n                css={`\n                  margin: 0 0 0 ${1 * GU}px;\n                `}\n              />\n            )}\n          </h1>\n          {Boolean(dispute?.status !== Status.Voided && txHash) && (\n            <TransactionBadge\n              transaction={txHash}\n              networkType={getNetworkType()}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nDisputeInfo.propTypes = {\n  dispute: PropTypes.object, // TODO: define DisputeType\n  id: PropTypes.string.isRequired,\n  loading: PropTypes.bool,\n}\n\nexport default DisputeInfo\n"]},"metadata":{},"sourceType":"module"}