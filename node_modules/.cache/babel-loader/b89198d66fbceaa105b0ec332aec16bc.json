{"ast":null,"code":"\"use strict\"; // Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\n\nvar _classCallCheck = require(\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Session = void 0;\n\nvar rxjs_1 = require(\"rxjs\");\n\nvar operators_1 = require(\"rxjs/operators\");\n\nvar util_1 = require(\"../util\");\n\nvar js_sha256_1 = require(\"js-sha256\");\n\nvar STORAGE_KEY_SESSION_ID = \"session:id\";\nvar STORAGE_KEY_SESSION_SECRET = \"session:secret\";\nvar STORAGE_KEY_SESSION_LINKED = \"session:linked\";\n\nvar Session =\n/*#__PURE__*/\nfunction () {\n  function Session(storage, id, secret, linked) {\n    _classCallCheck(this, Session);\n\n    this._storage = storage;\n    this._id = id || util_1.randomBytesHex(16);\n    this._secret = secret || util_1.randomBytesHex(32);\n    var hash = js_sha256_1.sha256.create();\n    hash.update(\"\".concat(this._id, \", \").concat(this._secret, \" WalletLink\"));\n    this._key = hash.hex();\n    this._linked = !!linked;\n  }\n\n  _createClass(Session, [{\n    key: \"save\",\n    value: function save() {\n      this._storage.setItem(STORAGE_KEY_SESSION_ID, this._id);\n\n      this._storage.setItem(STORAGE_KEY_SESSION_SECRET, this._secret);\n\n      this.persistLinked();\n      return this;\n    }\n  }, {\n    key: \"persistLinked\",\n    value: function persistLinked() {\n      this._storage.setItem(STORAGE_KEY_SESSION_LINKED, this._linked ? \"1\" : \"0\");\n    }\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this._id;\n    }\n  }, {\n    key: \"secret\",\n    get: function get() {\n      return this._secret;\n    }\n  }, {\n    key: \"key\",\n    get: function get() {\n      return this._key;\n    }\n  }, {\n    key: \"linked\",\n    get: function get() {\n      return this._linked;\n    },\n    set: function set(val) {\n      this._linked = val;\n      this.persistLinked();\n    }\n  }], [{\n    key: \"load\",\n    value: function load(storage) {\n      var id = storage.getItem(STORAGE_KEY_SESSION_ID);\n      var linked = storage.getItem(STORAGE_KEY_SESSION_LINKED);\n      var secret = storage.getItem(STORAGE_KEY_SESSION_SECRET);\n\n      if (id && secret) {\n        return new Session(storage, id, secret, linked === \"1\");\n      }\n\n      return null;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear(storage) {\n      storage.removeItem(STORAGE_KEY_SESSION_SECRET);\n      storage.removeItem(STORAGE_KEY_SESSION_ID);\n      storage.removeItem(STORAGE_KEY_SESSION_LINKED);\n    }\n  }, {\n    key: \"persistedSessionIdChange$\",\n    get: function get() {\n      return rxjs_1.fromEvent(window, \"storage\").pipe(operators_1.filter(function (evt) {\n        return evt.key === STORAGE_KEY_SESSION_ID;\n      }), operators_1.map(function (evt) {\n        return {\n          oldValue: evt.oldValue || null,\n          newValue: evt.newValue || null\n        };\n      }));\n    }\n  }]);\n\n  return Session;\n}();\n\nexports.Session = Session;","map":null,"metadata":{},"sourceType":"script"}