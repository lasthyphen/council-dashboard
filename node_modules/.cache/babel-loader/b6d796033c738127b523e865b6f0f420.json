{"ast":null,"code":"import _regeneratorRuntime from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/regenerator\";import _objectWithoutProperties from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _asyncToGenerator from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _styled from\"styled-components\";import React,{useCallback,useEffect,useMemo,useState}from'react';import{GU,SidePanel}from'@aragon/ui';import{captureException}from'@sentry/browser';import ConfirmRequest from'./ConfirmRequest';import RequestStatus from'./RequestStatus';import{useRequestQueue}from'../../providers/RequestQueue';import{REQUEST_STATUS_CONFIRMED,REQUEST_STATUS_FAILED,REQUEST_STATUS_PENDING,REQUEST_STATUS_PROCESSED,REQUEST_STATUS_PROCESSING_FAILED,REQUEST_STATUS_UPCOMING}from'./request-statuses';var MAX_ATTEMPTS=3;var INITIAL_STATE={processed:0,errorProcessing:-1,confirmed:0,failed:-1,requesting:0};var _StyledDiv=_styled(\"div\").withConfig({displayName:\"RequestPanel___StyledDiv\",componentId:\"sc-1nju41w-0\"})([\"margin-top:\",\"px;\"],function(p){return p._css;});function RequestPanel(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),attempts=_useState2[0],setAttempts=_useState2[1];var _useState3=useState(_objectSpread({},INITIAL_STATE)),_useState4=_slicedToArray(_useState3,2),progress=_useState4[0],setProgress=_useState4[1];var _useRequestQueue=useRequestQueue(),clearRequestQueue=_useRequestQueue.clearRequestQueue,requests=_useRequestQueue.requests;var handleSignerClose=useCallback(function(){// Clear state\nsetAttempts(0);setProgress(_objectSpread({},INITIAL_STATE));clearRequestQueue();},[clearRequestQueue]);var handleNextAttempt=useCallback(function(){setAttempts(function(attempts){return attempts+1;});},[]);var handleStartRequest=useCallback(function(){setProgress(function(progress){return _objectSpread({},progress,{requesting:1});});},[]);var processRequest=useCallback(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(request){var requestProcess;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return request.intent();case 3:requestProcess=_context.sent;// Mark request as processed\nsetProgress(function(_ref2){var processed=_ref2.processed,progress=_objectWithoutProperties(_ref2,[\"processed\"]);return _objectSpread({},progress,{processed:processed+1,lastProcessedAt:Date.now()});});return _context.abrupt(\"return\",requestProcess);case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);// Mark request as errored at processing\nsetProgress(function(_ref3){var processed=_ref3.processed,progress=_objectWithoutProperties(_ref3,[\"processed\"]);return _objectSpread({},progress,{errorProcessing:processed,processed:processed});});// Re throw error\nthrow _context.t0;case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function(_x){return _ref.apply(this,arguments);};}(),[]);var ensureRequestConfirmed=useCallback(/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(request){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return request.wait();case 3:return _context2.abrupt(\"return\",setProgress(function(_ref5){var confirmed=_ref5.confirmed,progress=_objectWithoutProperties(_ref5,[\"confirmed\"]);return _objectSpread({},progress,{confirmed:confirmed+1});}));case 6:_context2.prev=6;_context2.t0=_context2[\"catch\"](0);// Mark request as failed\nsetProgress(function(_ref6){var processed=_ref6.processed,progress=_objectWithoutProperties(_ref6,[\"processed\"]);return _objectSpread({},progress,{failed:processed-1,processed:processed-1});});// Re throw error\nthrow _context2.t0;case 10:case\"end\":return _context2.stop();}}},_callee2,null,[[0,6]]);}));return function(_x2){return _ref4.apply(this,arguments);};}(),[setProgress]);// Get request statuses\nvar requestStatus=useMemo(function(){if(!requests){return[];}var requiredConfirmedRequests=requests.map(function(req,index){return _objectSpread({},req,{index:index});}).filter(function(req){return req.ensureConfirmation;});var confirmed=progress.confirmed,errorProcessing=progress.errorProcessing,failed=progress.failed,processed=progress.processed;var status=function status(request,index){// Request processing failed\nif(errorProcessing!==-1&&index>=errorProcessing){return REQUEST_STATUS_PROCESSING_FAILED;}// Request confirmation failed\nif(failed!==-1&&index>=failed){return REQUEST_STATUS_FAILED;}if(request.ensureConfirmation){var confirmedIndex=requiredConfirmedRequests.findIndex(function(req){return req.index===index;});// Request confirmed\nif(confirmedIndex<confirmed){return REQUEST_STATUS_CONFIRMED;}// Request pending\nif(index<processed){return REQUEST_STATUS_PENDING;}}// Request processed\nif(index<processed){return REQUEST_STATUS_PROCESSED;}// Transaction not processed\nreturn REQUEST_STATUS_UPCOMING;};return requests.map(function(request,index){return status(request,index);});},[progress,requests]);var allSuccess=useMemo(function(){var confirmed=progress.confirmed,processed=progress.processed;var requiredConfirmedRequests=requests.filter(function(request){return request.ensureConfirmation;}).length;var allProcessed=processed>0&&processed===requests.length;var allConfirmed=confirmed===requiredConfirmedRequests;return allProcessed&&allConfirmed;},[progress,requests]);var maxAttemptsReached=attempts>=MAX_ATTEMPTS;// Create requests\nuseEffect(function(){if(!progress.requesting||maxAttemptsReached){return;}if(attempts===0){setProgress(function(_ref7){var requesting=_ref7.requesting;return _objectSpread({},INITIAL_STATE,{requesting:requesting});});}else{setProgress(function(progress){return _objectSpread({},progress,{errorProcessing:-1,failed:-1});});}var cancelled=false;var createRequests=/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var filteredRequests,_iteratorNormalCompletion,_didIteratorError,_iteratorError,_iterator,_step,request,requestProcess;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:filteredRequests=requests.slice(progress.processed);_iteratorNormalCompletion=true;_didIteratorError=false;_iteratorError=undefined;_context3.prev=4;_iterator=filteredRequests[Symbol.iterator]();case 6:if(_iteratorNormalCompletion=(_step=_iterator.next()).done){_context3.next=28;break;}request=_step.value;if(!cancelled){_context3.next=10;break;}return _context3.abrupt(\"break\",28);case 10:_context3.prev=10;_context3.next=13;return processRequest(request);case 13:requestProcess=_context3.sent;if(!(request.isTx&&request.ensureConfirmation)){_context3.next=18;break;}_context3.next=17;return ensureRequestConfirmed(requestProcess);case 17:// Execute callback function if required\nif(typeof request.callback==='function'){request.callback();}case 18:_context3.next=25;break;case 20:_context3.prev=20;_context3.t0=_context3[\"catch\"](10);console.error(\"Error when executing '\".concat(request.description,\"':\"),_context3.t0);captureException(_context3.t0);throw _context3.t0;case 25:_iteratorNormalCompletion=true;_context3.next=6;break;case 28:_context3.next=34;break;case 30:_context3.prev=30;_context3.t1=_context3[\"catch\"](4);_didIteratorError=true;_iteratorError=_context3.t1;case 34:_context3.prev=34;_context3.prev=35;if(!_iteratorNormalCompletion&&_iterator.return!=null){_iterator.return();}case 37:_context3.prev=37;if(!_didIteratorError){_context3.next=40;break;}throw _iteratorError;case 40:return _context3.finish(37);case 41:return _context3.finish(34);case 42:case\"end\":return _context3.stop();}}},_callee3,null,[[4,30,34,42],[10,20],[35,,37,41]]);}));return function createRequests(){return _ref8.apply(this,arguments);};}();createRequests();return function(){cancelled=true;};},// We'll remove `progress.processed` from the dependencies to prevent the effect from running every time we process a request\n// Note that we'll retry processing requests from the last failed one only if the user requests to do so\n// eslint-disable-next-line react-hooks/exhaustive-deps\n[attempts,ensureRequestConfirmed,maxAttemptsReached,processRequest,requests,progress.requesting]);useEffect(function(){var timeout;var startClearing=function startClearing(){timeout=setTimeout(function(){handleSignerClose();},3000);};if(maxAttemptsReached||allSuccess){startClearing();}return function(){clearTimeout(timeout);};},[allSuccess,handleSignerClose,maxAttemptsReached,requests]);var blockPanel=!maxAttemptsReached&&requests.length>1&&Boolean(progress.requesting);return React.createElement(SidePanel,{blocking:blockPanel,title:\"Confirm action\",opened:requests.length>0,onClose:handleSignerClose},React.createElement(_StyledDiv,{_css:3*GU},progress.requesting?React.createElement(RequestStatus,{allSuccess:allSuccess,lastProcessedAt:progress.lastProcessedAt,maxAttemptsReached:maxAttemptsReached,onClosePanel:handleSignerClose,onNextAttempt:handleNextAttempt,requests:requests,requestStatus:requestStatus}):React.createElement(ConfirmRequest,{descriptions:requests.map(function(request){return request.description;}),onStartRequest:handleStartRequest})));}export default React.memo(RequestPanel);","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/RequestPanel/RequestPanel.js"],"names":["React","useCallback","useEffect","useMemo","useState","GU","SidePanel","captureException","ConfirmRequest","RequestStatus","useRequestQueue","REQUEST_STATUS_CONFIRMED","REQUEST_STATUS_FAILED","REQUEST_STATUS_PENDING","REQUEST_STATUS_PROCESSED","REQUEST_STATUS_PROCESSING_FAILED","REQUEST_STATUS_UPCOMING","MAX_ATTEMPTS","INITIAL_STATE","processed","errorProcessing","confirmed","failed","requesting","RequestPanel","attempts","setAttempts","progress","setProgress","clearRequestQueue","requests","handleSignerClose","handleNextAttempt","handleStartRequest","processRequest","request","intent","requestProcess","lastProcessedAt","Date","now","ensureRequestConfirmed","wait","requestStatus","requiredConfirmedRequests","map","req","index","filter","ensureConfirmation","status","confirmedIndex","findIndex","allSuccess","length","allProcessed","allConfirmed","maxAttemptsReached","cancelled","createRequests","filteredRequests","slice","isTx","callback","console","error","description","timeout","startClearing","setTimeout","clearTimeout","blockPanel","Boolean","memo"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { GU, SidePanel } from '@aragon/ui'\nimport { captureException } from '@sentry/browser'\n\nimport ConfirmRequest from './ConfirmRequest'\nimport RequestStatus from './RequestStatus'\nimport { useRequestQueue } from '../../providers/RequestQueue'\nimport {\n  REQUEST_STATUS_CONFIRMED,\n  REQUEST_STATUS_FAILED,\n  REQUEST_STATUS_PENDING,\n  REQUEST_STATUS_PROCESSED,\n  REQUEST_STATUS_PROCESSING_FAILED,\n  REQUEST_STATUS_UPCOMING,\n} from './request-statuses'\n\nconst MAX_ATTEMPTS = 3\n\nconst INITIAL_STATE = {\n  processed: 0,\n  errorProcessing: -1,\n  confirmed: 0,\n  failed: -1,\n  requesting: 0,\n}\n\nfunction RequestPanel() {\n  const [attempts, setAttempts] = useState(0)\n  const [progress, setProgress] = useState({\n    ...INITIAL_STATE,\n  })\n  const { clearRequestQueue, requests } = useRequestQueue()\n\n  const handleSignerClose = useCallback(() => {\n    // Clear state\n    setAttempts(0)\n    setProgress({ ...INITIAL_STATE })\n    clearRequestQueue()\n  }, [clearRequestQueue])\n\n  const handleNextAttempt = useCallback(() => {\n    setAttempts(attempts => attempts + 1)\n  }, [])\n\n  const handleStartRequest = useCallback(() => {\n    setProgress(progress => ({ ...progress, requesting: 1 }))\n  }, [])\n\n  const processRequest = useCallback(async request => {\n    try {\n      const requestProcess = await request.intent()\n      // Mark request as processed\n      setProgress(({ processed, ...progress }) => ({\n        ...progress,\n        processed: processed + 1,\n        lastProcessedAt: Date.now(),\n      }))\n\n      return requestProcess\n    } catch (err) {\n      // Mark request as errored at processing\n      setProgress(({ processed, ...progress }) => ({\n        ...progress,\n        errorProcessing: processed,\n        processed,\n      }))\n\n      // Re throw error\n      throw err\n    }\n  }, [])\n\n  const ensureRequestConfirmed = useCallback(\n    async request => {\n      try {\n        // Wait for request to be confirmed\n        await request.wait()\n        return setProgress(({ confirmed, ...progress }) => ({\n          ...progress,\n          confirmed: confirmed + 1,\n        }))\n      } catch (err) {\n        // Mark request as failed\n        setProgress(({ processed, ...progress }) => ({\n          ...progress,\n          failed: processed - 1,\n          processed: processed - 1,\n        }))\n\n        // Re throw error\n        throw err\n      }\n    },\n    [setProgress]\n  )\n\n  // Get request statuses\n  const requestStatus = useMemo(() => {\n    if (!requests) {\n      return []\n    }\n\n    const requiredConfirmedRequests = requests\n      .map((req, index) => ({ ...req, index }))\n      .filter(req => req.ensureConfirmation)\n\n    const { confirmed, errorProcessing, failed, processed } = progress\n    const status = (request, index) => {\n      // Request processing failed\n      if (errorProcessing !== -1 && index >= errorProcessing) {\n        return REQUEST_STATUS_PROCESSING_FAILED\n      }\n\n      // Request confirmation failed\n      if (failed !== -1 && index >= failed) {\n        return REQUEST_STATUS_FAILED\n      }\n\n      if (request.ensureConfirmation) {\n        const confirmedIndex = requiredConfirmedRequests.findIndex(\n          req => req.index === index\n        )\n\n        // Request confirmed\n        if (confirmedIndex < confirmed) {\n          return REQUEST_STATUS_CONFIRMED\n        }\n\n        // Request pending\n        if (index < processed) {\n          return REQUEST_STATUS_PENDING\n        }\n      }\n\n      // Request processed\n      if (index < processed) {\n        return REQUEST_STATUS_PROCESSED\n      }\n\n      // Transaction not processed\n      return REQUEST_STATUS_UPCOMING\n    }\n\n    return requests.map((request, index) => status(request, index))\n  }, [progress, requests])\n\n  const allSuccess = useMemo(() => {\n    const { confirmed, processed } = progress\n\n    const requiredConfirmedRequests = requests.filter(\n      request => request.ensureConfirmation\n    ).length\n\n    const allProcessed = processed > 0 && processed === requests.length\n    const allConfirmed = confirmed === requiredConfirmedRequests\n    return allProcessed && allConfirmed\n  }, [progress, requests])\n\n  const maxAttemptsReached = attempts >= MAX_ATTEMPTS\n\n  // Create requests\n  useEffect(\n    () => {\n      if (!progress.requesting || maxAttemptsReached) {\n        return\n      }\n\n      if (attempts === 0) {\n        setProgress(({ requesting }) => ({\n          ...INITIAL_STATE,\n          requesting,\n        }))\n      } else {\n        setProgress(progress => ({\n          ...progress,\n          errorProcessing: -1,\n          failed: -1,\n        }))\n      }\n\n      let cancelled = false\n\n      const createRequests = async () => {\n        const filteredRequests = requests.slice(progress.processed)\n\n        for (const request of filteredRequests) {\n          if (cancelled) {\n            break\n          }\n\n          try {\n            const requestProcess = await processRequest(request)\n\n            if (request.isTx && request.ensureConfirmation) {\n              await ensureRequestConfirmed(requestProcess)\n\n              // Execute callback function if required\n              if (typeof request.callback === 'function') {\n                request.callback()\n              }\n            }\n          } catch (err) {\n            console.error(`Error when executing '${request.description}':`, err)\n            captureException(err)\n\n            throw err\n          }\n        }\n      }\n\n      createRequests()\n\n      return () => {\n        cancelled = true\n      }\n    },\n    // We'll remove `progress.processed` from the dependencies to prevent the effect from running every time we process a request\n    // Note that we'll retry processing requests from the last failed one only if the user requests to do so\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      attempts,\n      ensureRequestConfirmed,\n      maxAttemptsReached,\n      processRequest,\n      requests,\n      progress.requesting,\n    ]\n  )\n\n  useEffect(() => {\n    let timeout\n\n    const startClearing = () => {\n      timeout = setTimeout(() => {\n        handleSignerClose()\n      }, 3000)\n    }\n\n    if (maxAttemptsReached || allSuccess) {\n      startClearing()\n    }\n\n    return () => {\n      clearTimeout(timeout)\n    }\n  }, [allSuccess, handleSignerClose, maxAttemptsReached, requests])\n\n  const blockPanel =\n    !maxAttemptsReached && requests.length > 1 && Boolean(progress.requesting)\n\n  return (\n    <SidePanel\n      blocking={blockPanel}\n      title=\"Confirm action\"\n      opened={requests.length > 0}\n      onClose={handleSignerClose}\n    >\n      <div\n        css={`\n          margin-top: ${3 * GU}px;\n        `}\n      >\n        {progress.requesting ? (\n          <RequestStatus\n            allSuccess={allSuccess}\n            lastProcessedAt={progress.lastProcessedAt}\n            maxAttemptsReached={maxAttemptsReached}\n            onClosePanel={handleSignerClose}\n            onNextAttempt={handleNextAttempt}\n            requests={requests}\n            requestStatus={requestStatus}\n          />\n        ) : (\n          <ConfirmRequest\n            descriptions={requests.map(request => request.description)}\n            onStartRequest={handleStartRequest}\n          />\n        )}\n      </div>\n    </SidePanel>\n  )\n}\n\nexport default React.memo(RequestPanel)\n"]},"metadata":{},"sourceType":"module"}