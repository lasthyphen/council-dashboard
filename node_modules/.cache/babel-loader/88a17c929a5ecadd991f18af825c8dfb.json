{"ast":null,"code":"import _styled2 from \"styled-components\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/saleemfareed/oneds/court-dashboard/src/components/Loading.js\";\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { GU, LoadingRing, textStyle } from '@aragon/ui';\nconst SIZES = {\n  SMALL: 'small',\n  MEDIUM: 'medium',\n  LARGE: 'large'\n};\n\nvar _StyledDiv = _styled(\"div\").withConfig({\n  displayName: \"Loading___StyledDiv\",\n  componentId: \"tnhtb2-0\"\n})([\"display:flex;align-items:center;justify-content:\", \";margin:0 auto;height:\", \";\"], p => p._css, p => p._css2);\n\nvar _StyledSpan = _styled(\"span\").withConfig({\n  displayName: \"Loading___StyledSpan\",\n  componentId: \"tnhtb2-1\"\n})([\"\", \";margin-left:\", \"px;\"], p => p._css3, p => p._css4);\n\nfunction Loading({\n  center = true,\n  height,\n  size = SIZES.MEDIUM\n}) {\n  const style = useMemo(() => {\n    if (size === SIZES.SMALL) {\n      return 'body3';\n    }\n\n    if (size === SIZES.MEDIUM) {\n      return 'body2';\n    }\n\n    if (size === SIZES.LARGE) {\n      return 'body1';\n    }\n  }, [size]);\n  return React.createElement(_StyledDiv, {\n    _css: center ? 'center' : 'flex-start',\n    _css2: height ? `${height}px` : 'auto',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(LoadingRing, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(_StyledSpan, {\n    _css3: textStyle(style),\n    _css4: 1 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Loading\\u2026\"));\n}\n\nLoading.propTypes = {\n  center: PropTypes.bool,\n  height: PropTypes.number,\n  size: PropTypes.oneOf([SIZES.SMALL, SIZES.MEDIUM, SIZES.LARGE]).isRequired\n};\nexport default Loading;","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/Loading.js"],"names":["React","useMemo","PropTypes","GU","LoadingRing","textStyle","SIZES","SMALL","MEDIUM","LARGE","Loading","center","height","size","style","propTypes","bool","number","oneOf","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,EAAT,EAAaC,WAAb,EAA0BC,SAA1B,QAA2C,YAA3C;AAEA,MAAMC,KAAK,GAAG;AACZC,EAAAA,KAAK,EAAE,OADK;AAEZC,EAAAA,MAAM,EAAE,QAFI;AAGZC,EAAAA,KAAK,EAAE;AAHK,CAAd;;;;;;;;;;;;AAMA,SAASC,OAAT,CAAiB;AAAEC,EAAAA,MAAM,GAAG,IAAX;AAAiBC,EAAAA,MAAjB;AAAyBC,EAAAA,IAAI,GAAGP,KAAK,CAACE;AAAtC,CAAjB,EAAiE;AAC/D,QAAMM,KAAK,GAAGb,OAAO,CAAC,MAAM;AAC1B,QAAIY,IAAI,KAAKP,KAAK,CAACC,KAAnB,EAA0B;AACxB,aAAO,OAAP;AACD;;AACD,QAAIM,IAAI,KAAKP,KAAK,CAACE,MAAnB,EAA2B;AACzB,aAAO,OAAP;AACD;;AACD,QAAIK,IAAI,KAAKP,KAAK,CAACG,KAAnB,EAA0B;AACxB,aAAO,OAAP;AACD;AACF,GAVoB,EAUlB,CAACI,IAAD,CAVkB,CAArB;AAYA,SACE;AAAA,UAIuBF,MAAM,GAAG,QAAH,GAAc,YAJ3C;AAAA,WAOcC,MAAM,GAAI,GAAEA,MAAO,IAAb,GAAmB,MAPvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAWE;AAAA,WAEMP,SAAS,CAACS,KAAD,CAFf;AAAA,WAGmB,IAAIX,EAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAXF,CADF;AAsBD;;AAEDO,OAAO,CAACK,SAAR,GAAoB;AAClBJ,EAAAA,MAAM,EAAET,SAAS,CAACc,IADA;AAElBJ,EAAAA,MAAM,EAAEV,SAAS,CAACe,MAFA;AAGlBJ,EAAAA,IAAI,EAAEX,SAAS,CAACgB,KAAV,CAAgB,CAACZ,KAAK,CAACC,KAAP,EAAcD,KAAK,CAACE,MAApB,EAA4BF,KAAK,CAACG,KAAlC,CAAhB,EAA0DU;AAH9C,CAApB;AAMA,eAAeT,OAAf","sourcesContent":["import React, { useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { GU, LoadingRing, textStyle } from '@aragon/ui'\n\nconst SIZES = {\n  SMALL: 'small',\n  MEDIUM: 'medium',\n  LARGE: 'large',\n}\n\nfunction Loading({ center = true, height, size = SIZES.MEDIUM }) {\n  const style = useMemo(() => {\n    if (size === SIZES.SMALL) {\n      return 'body3'\n    }\n    if (size === SIZES.MEDIUM) {\n      return 'body2'\n    }\n    if (size === SIZES.LARGE) {\n      return 'body1'\n    }\n  }, [size])\n\n  return (\n    <div\n      css={`\n        display: flex;\n        align-items: center;\n        justify-content: ${center ? 'center' : 'flex-start'};\n\n        margin: 0 auto;\n        height: ${height ? `${height}px` : 'auto'};\n      `}\n    >\n      <LoadingRing />\n      <span\n        css={`\n          ${textStyle(style)};\n          margin-left: ${1 * GU}px;\n        `}\n      >\n        Loadingâ€¦\n      </span>\n    </div>\n  )\n}\n\nLoading.propTypes = {\n  center: PropTypes.bool,\n  height: PropTypes.number,\n  size: PropTypes.oneOf([SIZES.SMALL, SIZES.MEDIUM, SIZES.LARGE]).isRequired,\n}\n\nexport default Loading\n"]},"metadata":{},"sourceType":"module"}