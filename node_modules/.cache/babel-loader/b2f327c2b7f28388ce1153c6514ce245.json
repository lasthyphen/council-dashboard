{"ast":null,"code":"import _styled12 from \"styled-components\";\nimport _styled11 from \"styled-components\";\nimport _styled10 from \"styled-components\";\nimport _styled9 from \"styled-components\";\nimport _styled8 from \"styled-components\";\nimport _styled7 from \"styled-components\";\nimport _styled6 from \"styled-components\";\nimport _styled5 from \"styled-components\";\nimport _styled4 from \"styled-components\";\nimport _styled3 from \"styled-components\";\nimport _styled2 from \"styled-components\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/saleemfareed/oneds/court-dashboard/src/components/Activity/ActivityItem.js\";\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { ButtonBase, ButtonIcon, IconCross, IconCheck, GU, blockExplorerUrl, textStyle, useTheme, IdentityBadge } from '@aragon/ui';\nimport { transformAddresses, getNetworkType } from '../../lib/web3-utils';\nimport { ACTIVITY_STATUS_PENDING, ACTIVITY_STATUS_CONFIRMED, ACTIVITY_STATUS_FAILED, ACTIVITY_STATUS_TIMED_OUT } from './activity-statuses';\nimport TransactionProgress from './TransactionProgress';\nimport { useActivity } from '../../providers/ActivityProvider';\nimport { getActivityData } from './activity-types';\nimport TimeTag from './TimeTag';\n\nvar _StyledDiv = _styled(\"div\").withConfig({\n  displayName: \"ActivityItem___StyledDiv\",\n  componentId: \"sc-1p7wekt-0\"\n})([\"position:relative;\"]);\n\nvar _StyledButtonBase = _styled(ButtonBase).withConfig({\n  displayName: \"ActivityItem___StyledButtonBase\",\n  componentId: \"sc-1p7wekt-1\"\n})([\"text-align:left;width:100%;\"]);\n\nvar _StyledSection = _styled(\"section\").withConfig({\n  displayName: \"ActivityItem___StyledSection\",\n  componentId: \"sc-1p7wekt-2\"\n})([\"display:flex;flex-direction:column;overflow:hidden;padding:\", \"px;background:\", \";transition-property:background;transition-duration:50ms;transition-timing-function:ease-in-out;&:active{background:\", \";}\"], p => p._css, p => p._css2, p => p._css3);\n\nvar _StyledH = _styled(\"h1\").withConfig({\n  displayName: \"ActivityItem___StyledH\",\n  componentId: \"sc-1p7wekt-3\"\n})([\"display:flex;align-items:center;\"]);\n\nvar _StyledDiv2 = _styled(\"div\").withConfig({\n  displayName: \"ActivityItem___StyledDiv2\",\n  componentId: \"sc-1p7wekt-4\"\n})([\"flex-shrink:0;display:flex;margin-right:\", \"px;\"], p => p._css4);\n\nvar _StyledDiv3 = _styled(\"div\").withConfig({\n  displayName: \"ActivityItem___StyledDiv3\",\n  componentId: \"sc-1p7wekt-5\"\n})([\"overflow:hidden;text-overflow:ellipsis;white-space:nowrap;color:\", \";\", \";\"], p => p._css5, p => p._css6);\n\nvar _StyledTimeTag = _styled(TimeTag).withConfig({\n  displayName: \"ActivityItem___StyledTimeTag\",\n  componentId: \"sc-1p7wekt-6\"\n})([\"margin:0 \", \"px;\"], p => p._css7);\n\nvar _StyledDiv4 = _styled(\"div\").withConfig({\n  displayName: \"ActivityItem___StyledDiv4\",\n  componentId: \"sc-1p7wekt-7\"\n})([\"position:relative;margin-top:\", \"px;\"], p => p._css8);\n\nvar _StyledButtonIcon = _styled(ButtonIcon).withConfig({\n  displayName: \"ActivityItem___StyledButtonIcon\",\n  componentId: \"sc-1p7wekt-8\"\n})([\"position:absolute;top:\", \"px;right:\", \"px;z-index:1;\"], p => p._css9, p => p._css10);\n\nvar _StyledIconCross = _styled(IconCross).withConfig({\n  displayName: \"ActivityItem___StyledIconCross\",\n  componentId: \"sc-1p7wekt-9\"\n})([\"color:\", \";\"], p => p._css11);\n\nfunction ActivityItem({\n  activity\n}) {\n  const theme = useTheme();\n  const {\n    removeActivity\n  } = useActivity();\n  const {\n    icon,\n    title\n  } = getActivityData(activity.type);\n  const handleOpen = useCallback(() => {\n    if (activity.transactionHash) {\n      window.open(blockExplorerUrl('transaction', activity.transactionHash, {\n        networkType: getNetworkType()\n      }), '_blank', 'noopener');\n    }\n  }, [activity]);\n  const canClear = activity.status !== ACTIVITY_STATUS_PENDING;\n  const handleClose = useCallback(() => {\n    if (activity.transactionHash) {\n      removeActivity(activity.transactionHash);\n    }\n  }, [activity, removeActivity]);\n  return React.createElement(_StyledDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(_StyledButtonBase, {\n    element: \"div\",\n    onClick: handleOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(_StyledSection, {\n    _css: 2 * GU,\n    _css2: activity.read ? theme.surface : theme.surfaceHighlight,\n    _css3: theme.surfaceUnder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(_StyledH, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(_StyledDiv2, {\n    _css4: 1 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: icon,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), React.createElement(_StyledDiv3, {\n    _css5: theme.surfaceContent,\n    _css6: textStyle('body1'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, title), activity.status !== ACTIVITY_STATUS_PENDING && React.createElement(_StyledTimeTag, {\n    date: activity.createdAt,\n    _css7: 1.5 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  })), React.createElement(_StyledDiv4, {\n    _css8: 2 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(ItemContent, {\n    text: activity.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(StatusMessage, {\n    activity: activity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(TransactionProgress, {\n    status: activity.status,\n    createdAt: activity.createdAt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  })))), canClear && React.createElement(_StyledButtonIcon, {\n    label: \"Remove\",\n    onClick: handleClose,\n    _css9: 1 * GU,\n    _css10: 1 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(_StyledIconCross, {\n    _css11: theme.surfaceIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  })));\n}\n\nActivityItem.propTypes = {\n  activity: PropTypes.object.isRequired\n};\n\nvar _StyledP = _styled(\"p\").withConfig({\n  displayName: \"ActivityItem___StyledP\",\n  componentId: \"sc-1p7wekt-10\"\n})([\"display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2;white-space:normal;word-break:break-word;overflow:hidden;\", \"\"], p => p._css12);\n\nconst ItemContent = React.memo(({\n  text = ''\n}) => React.createElement(_StyledP, {\n  _css12: textStyle('body2'),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 162\n  },\n  __self: this\n}, transformAddresses(text, (part, isAddress, index) => isAddress ? React.createElement(\"span\", {\n  title: part,\n  key: index,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 175\n  },\n  __self: this\n}, React.createElement(IdentityBadge, {\n  entity: part,\n  compact: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 176\n  },\n  __self: this\n})) : React.createElement(\"span\", {\n  key: index,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 179\n  },\n  __self: this\n}, part))), (prevProps, nextProps) => prevProps.text === nextProps.text);\nItemContent.propTypes = {\n  text: PropTypes.string.isRequired\n};\n\nfunction getStatusData(activity, theme) {\n  if (activity.status === ACTIVITY_STATUS_CONFIRMED) {\n    return [React.createElement(IconCheck, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Transaction confirmed\"), theme.positive];\n  }\n\n  if (activity.status === ACTIVITY_STATUS_FAILED) {\n    return [React.createElement(IconCross, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Transaction failed\"), theme.negative];\n  }\n\n  if (activity.status === ACTIVITY_STATUS_TIMED_OUT) {\n    return [React.createElement(IconCross, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Transaction timed out\"), theme.negative];\n  }\n\n  return [null, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, \"Transaction pending\"), theme.surfaceContentSecondary];\n}\n\nvar _StyledDiv5 = _styled(\"div\").withConfig({\n  displayName: \"ActivityItem___StyledDiv5\",\n  componentId: \"sc-1p7wekt-11\"\n})([\"display:flex;align-items:center;margin-top:\", \"px;\", \" color:\", \"\"], p => p._css13, p => p._css14, p => p._css15);\n\nconst StatusMessage = ({\n  activity\n}) => {\n  const theme = useTheme();\n  const [icon, content, color] = getStatusData(activity, theme);\n  return React.createElement(_StyledDiv5, {\n    _css13: 2 * GU,\n    _css14: textStyle('label2'),\n    _css15: color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, icon, content);\n};\n\nStatusMessage.propTypes = {\n  activity: PropTypes.object.isRequired\n};\nexport default ActivityItem;","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/Activity/ActivityItem.js"],"names":["React","useCallback","PropTypes","ButtonBase","ButtonIcon","IconCross","IconCheck","GU","blockExplorerUrl","textStyle","useTheme","IdentityBadge","transformAddresses","getNetworkType","ACTIVITY_STATUS_PENDING","ACTIVITY_STATUS_CONFIRMED","ACTIVITY_STATUS_FAILED","ACTIVITY_STATUS_TIMED_OUT","TransactionProgress","useActivity","getActivityData","TimeTag","ActivityItem","activity","theme","removeActivity","icon","title","type","handleOpen","transactionHash","window","open","networkType","canClear","status","handleClose","read","surface","surfaceHighlight","surfaceUnder","surfaceContent","createdAt","description","surfaceIcon","propTypes","object","isRequired","ItemContent","memo","text","part","isAddress","index","prevProps","nextProps","string","getStatusData","positive","negative","surfaceContentSecondary","StatusMessage","content","color"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  ButtonBase,\n  ButtonIcon,\n  IconCross,\n  IconCheck,\n  GU,\n  blockExplorerUrl,\n  textStyle,\n  useTheme,\n  IdentityBadge,\n} from '@aragon/ui'\nimport { transformAddresses, getNetworkType } from '../../lib/web3-utils'\nimport {\n  ACTIVITY_STATUS_PENDING,\n  ACTIVITY_STATUS_CONFIRMED,\n  ACTIVITY_STATUS_FAILED,\n  ACTIVITY_STATUS_TIMED_OUT,\n} from './activity-statuses'\nimport TransactionProgress from './TransactionProgress'\nimport { useActivity } from '../../providers/ActivityProvider'\nimport { getActivityData } from './activity-types'\nimport TimeTag from './TimeTag'\n\nfunction ActivityItem({ activity }) {\n  const theme = useTheme()\n  const { removeActivity } = useActivity()\n\n  const { icon, title } = getActivityData(activity.type)\n\n  const handleOpen = useCallback(() => {\n    if (activity.transactionHash) {\n      window.open(\n        blockExplorerUrl('transaction', activity.transactionHash, {\n          networkType: getNetworkType(),\n        }),\n        '_blank',\n        'noopener'\n      )\n    }\n  }, [activity])\n\n  const canClear = activity.status !== ACTIVITY_STATUS_PENDING\n\n  const handleClose = useCallback(() => {\n    if (activity.transactionHash) {\n      removeActivity(activity.transactionHash)\n    }\n  }, [activity, removeActivity])\n\n  return (\n    <div\n      css={`\n        position: relative;\n      `}\n    >\n      <ButtonBase\n        element=\"div\"\n        onClick={handleOpen}\n        css={`\n          text-align: left;\n          width: 100%;\n        `}\n      >\n        <section\n          css={`\n            display: flex;\n            flex-direction: column;\n            overflow: hidden;\n            padding: ${2 * GU}px;\n            background: ${activity.read\n              ? theme.surface\n              : theme.surfaceHighlight};\n            transition-property: background;\n            transition-duration: 50ms;\n            transition-timing-function: ease-in-out;\n\n            &:active {\n              background: ${theme.surfaceUnder};\n            }\n          `}\n        >\n          <h1\n            css={`\n              display: flex;\n              align-items: center;\n            `}\n          >\n            <div\n              css={`\n                flex-shrink: 0;\n                display: flex;\n                margin-right: ${1 * GU}px;\n              `}\n            >\n              <img src={icon} alt=\"\" />\n            </div>\n            <div\n              css={`\n                overflow: hidden;\n                text-overflow: ellipsis;\n                white-space: nowrap;\n                color: ${theme.surfaceContent};\n                ${textStyle('body1')};\n              `}\n            >\n              {title}\n            </div>\n            {activity.status !== ACTIVITY_STATUS_PENDING && (\n              <TimeTag\n                date={activity.createdAt}\n                css={`\n                  margin: 0 ${1.5 * GU}px;\n                `}\n              />\n            )}\n          </h1>\n          <div\n            css={`\n              position: relative;\n              margin-top: ${2 * GU}px;\n            `}\n          >\n            <ItemContent text={activity.description} />\n            <StatusMessage activity={activity} />\n            <TransactionProgress\n              status={activity.status}\n              createdAt={activity.createdAt}\n            />\n          </div>\n        </section>\n      </ButtonBase>\n      {canClear && (\n        <ButtonIcon\n          label=\"Remove\"\n          onClick={handleClose}\n          css={`\n            position: absolute;\n            top: ${1 * GU}px;\n            right: ${1 * GU}px;\n            z-index: 1;\n          `}\n        >\n          <IconCross\n            css={`\n              color: ${theme.surfaceIcon};\n            `}\n          />\n        </ButtonIcon>\n      )}\n    </div>\n  )\n}\n\nActivityItem.propTypes = {\n  activity: PropTypes.object.isRequired,\n}\n\nconst ItemContent = React.memo(\n  ({ text = '' }) => (\n    <p\n      css={`\n        display: -webkit-box;\n        -webkit-box-orient: vertical;\n        -webkit-line-clamp: 2;\n        white-space: normal;\n        word-break: break-word;\n        overflow: hidden;\n        ${textStyle('body2')}\n      `}\n    >\n      {transformAddresses(text, (part, isAddress, index) =>\n        isAddress ? (\n          <span title={part} key={index}>\n            <IdentityBadge entity={part} compact />\n          </span>\n        ) : (\n          <span key={index}>{part}</span>\n        )\n      )}\n    </p>\n  ),\n  (prevProps, nextProps) => prevProps.text === nextProps.text\n)\n\nItemContent.propTypes = {\n  text: PropTypes.string.isRequired,\n}\n\nfunction getStatusData(activity, theme) {\n  if (activity.status === ACTIVITY_STATUS_CONFIRMED) {\n    return [\n      <IconCheck size=\"small\" />,\n      <span>Transaction confirmed</span>,\n      theme.positive,\n    ]\n  }\n  if (activity.status === ACTIVITY_STATUS_FAILED) {\n    return [\n      <IconCross size=\"small\" />,\n      <span>Transaction failed</span>,\n      theme.negative,\n    ]\n  }\n  if (activity.status === ACTIVITY_STATUS_TIMED_OUT) {\n    return [\n      <IconCross size=\"small\" />,\n      <span>Transaction timed out</span>,\n      theme.negative,\n    ]\n  }\n  return [null, <span>Transaction pending</span>, theme.surfaceContentSecondary]\n}\n\nconst StatusMessage = ({ activity }) => {\n  const theme = useTheme()\n  const [icon, content, color] = getStatusData(activity, theme)\n  return (\n    <div\n      css={`\n        display: flex;\n        align-items: center;\n        margin-top: ${2 * GU}px;\n        ${textStyle('label2')}\n        color: ${color}\n      `}\n    >\n      {icon}\n      {content}\n    </div>\n  )\n}\n\nStatusMessage.propTypes = {\n  activity: PropTypes.object.isRequired,\n}\n\nexport default ActivityItem\n"]},"metadata":{},"sourceType":"module"}