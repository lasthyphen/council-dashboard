{"ast":null,"code":"import _regeneratorRuntime from \"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Repo } from '@aragon/connect-core';\nexport function parseRepo(_x, _x2) {\n  return _parseRepo.apply(this, arguments);\n}\n\nfunction _parseRepo() {\n  _parseRepo = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(result, organization) {\n    var _a, _b, _c, _d, _e, _f, _g, repo, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            repo = (_b = (_a = result === null || result === void 0 ? void 0 : result.data) === null || _a === void 0 ? void 0 : _a.app) === null || _b === void 0 ? void 0 : _b.repo;\n\n            if (repo) {\n              _context.next = 3;\n              break;\n            }\n\n            throw new Error('Unable to parse repo.');\n\n          case 3:\n            data = {\n              address: repo === null || repo === void 0 ? void 0 : repo.address,\n              artifact: (_c = repo === null || repo === void 0 ? void 0 : repo.lastVersion) === null || _c === void 0 ? void 0 : _c.artifact,\n              contentUri: (_d = repo === null || repo === void 0 ? void 0 : repo.lastVersion) === null || _d === void 0 ? void 0 : _d.contentUri,\n              manifest: (_e = repo === null || repo === void 0 ? void 0 : repo.lastVersion) === null || _e === void 0 ? void 0 : _e.manifest,\n              name: repo === null || repo === void 0 ? void 0 : repo.name,\n              registry: (_f = repo === null || repo === void 0 ? void 0 : repo.registry) === null || _f === void 0 ? void 0 : _f.name,\n              registryAddress: (_g = repo === null || repo === void 0 ? void 0 : repo.registry) === null || _g === void 0 ? void 0 : _g.address\n            };\n            return _context.abrupt(\"return\", Repo.create(data, organization));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _parseRepo.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}