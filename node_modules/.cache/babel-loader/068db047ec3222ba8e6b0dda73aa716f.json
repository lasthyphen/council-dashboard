{"ast":null,"code":"import _styled10 from \"styled-components\";\nimport _styled9 from \"styled-components\";\nimport _styled8 from \"styled-components\";\nimport _styled7 from \"styled-components\";\nimport _styled6 from \"styled-components\";\nimport _styled5 from \"styled-components\";\nimport _styled4 from \"styled-components\";\nimport _styled3 from \"styled-components\";\nimport _styled2 from \"styled-components\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/saleemfareed/oneds/court-dashboard/src/components/Disputes/DisputeEvidences.js\";\nimport React from 'react';\nimport { Accordion, GU, SyncIndicator, textStyle, useTheme } from '@aragon/ui';\nimport { useWallet } from 'use-wallet';\nimport useEvidences from '../../hooks/useEvidences';\nimport { addressesEqual } from '../../lib/web3-utils';\nimport ErrorLoadingEvidence from './ErrorLoadingEvidence';\nimport IdentityBadge from '../IdentityBadge';\nimport Markdown from '../Markdown';\nimport { dateFormat } from '../../utils/date-utils';\nimport folderIcon from \"../../assets/folderIcon.svg\";\n\nvar _StyledDiv = _styled(\"div\").withConfig({\n  displayName: \"DisputeEvidences___StyledDiv\",\n  componentId: \"w4iy7t-0\"\n})([\"display:flex;align-items:center;\"]);\n\nvar _StyledSpan = _styled(\"span\").withConfig({\n  displayName: \"DisputeEvidences___StyledSpan\",\n  componentId: \"w4iy7t-1\"\n})([\"margin-left:\", \"px;\"], p => p._css);\n\nconst DisputeEvidences = React.memo(function DisputeEvidences({\n  defendant,\n  evidences,\n  loading,\n  plaintiff\n}) {\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(SyncIndicator, {\n    visible: loading,\n    label: \"Loading evidences\\u2026\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), evidences && evidences.map((evidence, index) => {\n    const {\n      createdAt,\n      submitter,\n      metadata,\n      error\n    } = evidence;\n    return React.createElement(Accordion, {\n      key: index,\n      items: [[React.createElement(_StyledDiv, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: folderIcon,\n        width: \"17\",\n        height: \"20\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(_StyledSpan, {\n        _css: 1.5 * GU,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Argument #\", index + 1)), React.createElement(EvidenceContent, {\n        createdAt: createdAt,\n        error: error,\n        metadata: metadata,\n        submitter: submitter,\n        submitterLabel: getSubmitterLabel(submitter, defendant, plaintiff),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })]],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    });\n  }));\n});\n\nvar _StyledDiv2 = _styled(\"div\").withConfig({\n  displayName: \"DisputeEvidences___StyledDiv2\",\n  componentId: \"w4iy7t-2\"\n})([\"margin-bottom:\", \"px;padding:\", \"px \", \"px;\"], p => p._css2, p => p._css3, p => p._css4);\n\nvar _StyledDiv3 = _styled(\"div\").withConfig({\n  displayName: \"DisputeEvidences___StyledDiv3\",\n  componentId: \"w4iy7t-3\"\n})([\"display:grid;grid-template-columns:150px minmax(180px,auto);grid-gap:\", \"px;margin-bottom:\", \"px;\"], p => p._css5, p => p._css6);\n\nvar _StyledH = _styled(\"h2\").withConfig({\n  displayName: \"DisputeEvidences___StyledH\",\n  componentId: \"w4iy7t-4\"\n})([\"\", \";color:\", \";margin-bottom:\", \"px;\"], p => p._css7, p => p._css8, p => p._css9);\n\nvar _StyledDiv4 = _styled(\"div\").withConfig({\n  displayName: \"DisputeEvidences___StyledDiv4\",\n  componentId: \"w4iy7t-5\"\n})([\"display:flex;align-items:flex-start;\"]);\n\nvar _StyledH2 = _styled(\"h2\").withConfig({\n  displayName: \"DisputeEvidences___StyledH2\",\n  componentId: \"w4iy7t-6\"\n})([\"\", \";color:\", \";margin-bottom:\", \"px;\"], p => p._css10, p => p._css11, p => p._css12);\n\nvar _StyledSpan2 = _styled(\"span\").withConfig({\n  displayName: \"DisputeEvidences___StyledSpan2\",\n  componentId: \"w4iy7t-7\"\n})([\"\", \";\"], p => p._css13);\n\nvar _StyledH3 = _styled(\"h2\").withConfig({\n  displayName: \"DisputeEvidences___StyledH3\",\n  componentId: \"w4iy7t-8\"\n})([\"\", \";color:\", \";margin-bottom:\", \"px;\"], p => p._css14, p => p._css15, p => p._css16);\n\nvar _StyledDiv5 = _styled(\"div\").withConfig({\n  displayName: \"DisputeEvidences___StyledDiv5\",\n  componentId: \"w4iy7t-9\"\n})([\"display:flex;align-items:flex-start;\"]);\n\nconst EvidenceContent = React.memo(function EvidenceContent({\n  createdAt,\n  error,\n  metadata,\n  submitter,\n  submitterLabel\n}) {\n  const theme = useTheme();\n  const wallet = useWallet();\n\n  if (error) {\n    return React.createElement(ErrorLoadingEvidence, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(_StyledDiv2, {\n    _css2: 2 * GU,\n    _css3: 3 * GU,\n    _css4: 8 * GU - 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(_StyledDiv3, {\n    _css5: 5 * GU,\n    _css6: 5 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(_StyledH, {\n    _css7: textStyle('label2'),\n    _css8: theme.surfaceContentSecondary,\n    _css9: 2 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Submitted by\"), React.createElement(_StyledDiv4, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(IdentityBadge, {\n    connectedAccount: addressesEqual(submitter, wallet.account),\n    entity: submitter,\n    label: submitterLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(_StyledH2, {\n    _css10: textStyle('label2'),\n    _css11: theme.surfaceContentSecondary,\n    _css12: 2 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Date\"), React.createElement(_StyledSpan2, {\n    _css13: textStyle('body2'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, dateFormat(createdAt, 'onlyDate')))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(_StyledH3, {\n    _css14: textStyle('label2'),\n    _css15: theme.surfaceContentSecondary,\n    _css16: 2 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Data\"), React.createElement(_StyledDiv5, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(Markdown, {\n    text: metadata,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }))));\n});\n\nfunction getSubmitterLabel(submitter, defendant, plaintiff) {\n  if (addressesEqual(submitter, defendant)) {\n    return 'Defendant';\n  }\n\n  if (addressesEqual(submitter, plaintiff)) {\n    return 'Plaintiff';\n  }\n\n  return '';\n}\n\nexport default function Evidences({\n  dispute,\n  evidences\n}) {\n  // This hook ensures us that evidenceProcessed won't be updated unless there are new evidences.\n  const [evidenceProcessed, fetchingEvidences] = useEvidences(dispute, evidences);\n  return React.createElement(DisputeEvidences, {\n    defendant: dispute.defendant,\n    evidences: evidenceProcessed,\n    loading: fetchingEvidences,\n    plaintiff: dispute.plaintiff,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/Disputes/DisputeEvidences.js"],"names":["React","Accordion","GU","SyncIndicator","textStyle","useTheme","useWallet","useEvidences","addressesEqual","ErrorLoadingEvidence","IdentityBadge","Markdown","dateFormat","DisputeEvidences","memo","defendant","evidences","loading","plaintiff","map","evidence","index","createdAt","submitter","metadata","error","folderIcon","getSubmitterLabel","EvidenceContent","submitterLabel","theme","wallet","surfaceContentSecondary","account","Evidences","dispute","evidenceProcessed","fetchingEvidences"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Accordion, GU, SyncIndicator, textStyle, useTheme } from '@aragon/ui'\nimport { useWallet } from 'use-wallet'\nimport useEvidences from '../../hooks/useEvidences'\nimport { addressesEqual } from '../../lib/web3-utils'\nimport ErrorLoadingEvidence from './ErrorLoadingEvidence'\nimport IdentityBadge from '../IdentityBadge'\nimport Markdown from '../Markdown'\nimport { dateFormat } from '../../utils/date-utils'\n\nimport folderIcon from '../../assets/folderIcon.svg'\n\nconst DisputeEvidences = React.memo(function DisputeEvidences({\n  defendant,\n  evidences,\n  loading,\n  plaintiff,\n}) {\n  return (\n    <React.Fragment>\n      <SyncIndicator visible={loading} label=\"Loading evidences…\" />\n      {evidences &&\n        evidences.map((evidence, index) => {\n          const { createdAt, submitter, metadata, error } = evidence\n          return (\n            <Accordion\n              key={index}\n              items={[\n                [\n                  <div\n                    css={`\n                      display: flex;\n                      align-items: center;\n                    `}\n                  >\n                    <img src={folderIcon} width=\"17\" height=\"20\" alt=\"\" />\n                    <span\n                      css={`\n                        margin-left: ${1.5 * GU}px;\n                      `}\n                    >\n                      Argument #{index + 1}\n                    </span>\n                  </div>,\n                  <EvidenceContent\n                    createdAt={createdAt}\n                    error={error}\n                    metadata={metadata}\n                    submitter={submitter}\n                    submitterLabel={getSubmitterLabel(\n                      submitter,\n                      defendant,\n                      plaintiff\n                    )}\n                  />,\n                ],\n              ]}\n            />\n          )\n        })}\n    </React.Fragment>\n  )\n})\n\nconst EvidenceContent = React.memo(function EvidenceContent({\n  createdAt,\n  error,\n  metadata,\n  submitter,\n  submitterLabel,\n}) {\n  const theme = useTheme()\n  const wallet = useWallet()\n\n  if (error) {\n    return <ErrorLoadingEvidence />\n  }\n  return (\n    <div\n      css={`\n        margin-bottom: ${2 * GU}px;\n        padding: ${3 * GU}px ${8 * GU - 3}px;\n      `}\n    >\n      <div\n        css={`\n          display: grid;\n          grid-template-columns: 150px minmax(180px, auto);\n          grid-gap: ${5 * GU}px;\n          margin-bottom: ${5 * GU}px;\n        `}\n      >\n        <div>\n          <h2\n            css={`\n              ${textStyle('label2')};\n              color: ${theme.surfaceContentSecondary};\n              margin-bottom: ${2 * GU}px;\n            `}\n          >\n            Submitted by\n          </h2>\n          <div\n            css={`\n              display: flex;\n              align-items: flex-start;\n            `}\n          >\n            <IdentityBadge\n              connectedAccount={addressesEqual(submitter, wallet.account)}\n              entity={submitter}\n              label={submitterLabel}\n            />\n          </div>\n        </div>\n        <div>\n          <h2\n            css={`\n              ${textStyle('label2')};\n              color: ${theme.surfaceContentSecondary};\n              margin-bottom: ${2 * GU}px;\n            `}\n          >\n            Date\n          </h2>\n          <span\n            css={`\n              ${textStyle('body2')};\n            `}\n          >\n            {dateFormat(createdAt, 'onlyDate')}\n          </span>\n        </div>\n      </div>\n      <div>\n        <h2\n          css={`\n            ${textStyle('label2')};\n            color: ${theme.surfaceContentSecondary};\n            margin-bottom: ${2 * GU}px;\n          `}\n        >\n          Data\n        </h2>\n        <div\n          css={`\n            display: flex;\n            align-items: flex-start;\n          `}\n        >\n          <Markdown text={metadata} />\n        </div>\n      </div>\n    </div>\n  )\n})\n\nfunction getSubmitterLabel(submitter, defendant, plaintiff) {\n  if (addressesEqual(submitter, defendant)) {\n    return 'Defendant'\n  }\n\n  if (addressesEqual(submitter, plaintiff)) {\n    return 'Plaintiff'\n  }\n\n  return ''\n}\n\nexport default function Evidences({ dispute, evidences }) {\n  // This hook ensures us that evidenceProcessed won't be updated unless there are new evidences.\n  const [evidenceProcessed, fetchingEvidences] = useEvidences(\n    dispute,\n    evidences\n  )\n\n  return (\n    <DisputeEvidences\n      defendant={dispute.defendant}\n      evidences={evidenceProcessed}\n      loading={fetchingEvidences}\n      plaintiff={dispute.plaintiff}\n    />\n  )\n}\n"]},"metadata":{},"sourceType":"module"}