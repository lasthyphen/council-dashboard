{"ast":null,"code":"import { useMemo } from 'react';\nimport { bigNum } from '../lib/math-utils';\nimport { useWallet } from '../providers/Wallet';\nimport { addressesEqual } from '../lib/web3-utils';\nimport { useDashboardState } from '../components/Dashboard/DashboardStateProvider'; // Until the penalties aren't settled for the round, the appeal collaterals are still locked in the treasury\n\nexport default function useJurorAppealCollaterals() {\n  const {\n    appeals\n  } = useDashboardState();\n  const {\n    account\n  } = useWallet();\n  return useMemo(() => {\n    if (!appeals) {\n      return null;\n    }\n\n    return appeals.filter(appeal => !appeal.round.settledPenalties).map(({\n      round,\n      maker,\n      ...appeal\n    }) => {\n      const isMaker = addressesEqual(maker, account);\n      return {\n        disputeId: round.dispute.id,\n        amountStaked: bigNum(isMaker ? appeal.appealDeposit : appeal.confirmAppealDeposit)\n      };\n    });\n  }, [appeals, account]);\n}","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/hooks/useJurorAppealCollaterals.js"],"names":["useMemo","bigNum","useWallet","addressesEqual","useDashboardState","useJurorAppealCollaterals","appeals","account","filter","appeal","round","settledPenalties","map","maker","isMaker","disputeId","dispute","id","amountStaked","appealDeposit","confirmAppealDeposit"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,iBAAT,QAAkC,gDAAlC,C,CAEA;;AACA,eAAe,SAASC,yBAAT,GAAqC;AAClD,QAAM;AAAEC,IAAAA;AAAF,MAAcF,iBAAiB,EAArC;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAcL,SAAS,EAA7B;AAEA,SAAOF,OAAO,CAAC,MAAM;AACnB,QAAI,CAACM,OAAL,EAAc;AACZ,aAAO,IAAP;AACD;;AAED,WAAOA,OAAO,CACXE,MADI,CACGC,MAAM,IAAI,CAACA,MAAM,CAACC,KAAP,CAAaC,gBAD3B,EAEJC,GAFI,CAEA,CAAC;AAAEF,MAAAA,KAAF;AAASG,MAAAA,KAAT;AAAgB,SAAGJ;AAAnB,KAAD,KAAiC;AACpC,YAAMK,OAAO,GAAGX,cAAc,CAACU,KAAD,EAAQN,OAAR,CAA9B;AAEA,aAAO;AACLQ,QAAAA,SAAS,EAAEL,KAAK,CAACM,OAAN,CAAcC,EADpB;AAELC,QAAAA,YAAY,EAAEjB,MAAM,CAClBa,OAAO,GAAGL,MAAM,CAACU,aAAV,GAA0BV,MAAM,CAACW,oBADtB;AAFf,OAAP;AAMD,KAXI,CAAP;AAYD,GAjBa,EAiBX,CAACd,OAAD,EAAUC,OAAV,CAjBW,CAAd;AAkBD","sourcesContent":["import { useMemo } from 'react'\nimport { bigNum } from '../lib/math-utils'\nimport { useWallet } from '../providers/Wallet'\nimport { addressesEqual } from '../lib/web3-utils'\nimport { useDashboardState } from '../components/Dashboard/DashboardStateProvider'\n\n// Until the penalties aren't settled for the round, the appeal collaterals are still locked in the treasury\nexport default function useJurorAppealCollaterals() {\n  const { appeals } = useDashboardState()\n  const { account } = useWallet()\n\n  return useMemo(() => {\n    if (!appeals) {\n      return null\n    }\n\n    return appeals\n      .filter(appeal => !appeal.round.settledPenalties)\n      .map(({ round, maker, ...appeal }) => {\n        const isMaker = addressesEqual(maker, account)\n\n        return {\n          disputeId: round.dispute.id,\n          amountStaked: bigNum(\n            isMaker ? appeal.appealDeposit : appeal.confirmAppealDeposit\n          ),\n        }\n      })\n  }, [appeals, account])\n}\n"]},"metadata":{},"sourceType":"module"}