{"ast":null,"code":"import _styled2 from \"styled-components\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/saleemfareed/oneds/court-dashboard/src/components/Tasks/Tasks.js\";\nimport React, { useState } from 'react';\nimport { GU, Tabs, Tag } from '@aragon/ui';\nimport NoTasks from './NoTasks';\nimport NoMyTasks from './NoMyTasks';\nimport TaskTable from './TasksTable';\nimport TasksLoading from '../LoadingCard';\nimport TitleHeader from '../TitleHeader';\nimport ErrorLoading from '../Errors/ErrorLoading';\nimport { useWallet } from '../../providers/Wallet';\nimport useFilteredTasks from '../../hooks/useFilteredTasks';\n\nvar _StyledDiv = _styled(\"div\").withConfig({\n  displayName: \"Tasks___StyledDiv\",\n  componentId: \"uk8qae-0\"\n})([\"padding-bottom:\", \"px;\"], p => p._css);\n\nvar _StyledTabs = _styled(Tabs).withConfig({\n  displayName: \"Tasks___StyledTabs\",\n  componentId: \"uk8qae-1\"\n})([\"margin-bottom:0px;\"]);\n\nconst Tasks = React.memo(({\n  onlyTable\n}) => {\n  const wallet = useWallet();\n  const [screenIndex, setScreenIndex] = useState(0);\n\n  const getMyTasksSelected = () => {\n    if (onlyTable) {\n      if (wallet.account) {\n        return true;\n      }\n\n      return false;\n    }\n\n    return screenIndex === 0;\n  };\n\n  const myTasksSelected = getMyTasksSelected();\n  const {\n    tasks,\n    fetching: tasksFetching,\n    error: errorLoading,\n    filtersSelected,\n    setFiltersSelected,\n    emptyFilterResults,\n    handleClearFilters,\n    selectedDateRange,\n    handleSelectedDateRangeChange,\n    selectedPhase,\n    handleSelectedPhaseChange,\n    openTasksNumber,\n    jurorOpenTaskNumber,\n    taskActionsString\n  } = useFilteredTasks(myTasksSelected, wallet.account);\n\n  const handleTabChange = screenIndex => {\n    setFiltersSelected(false);\n    handleClearFilters();\n    setScreenIndex(screenIndex);\n  };\n\n  return React.createElement(_StyledDiv, {\n    _css: 3 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, !onlyTable && React.createElement(TitleHeader, {\n    title: \"Tasks\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), !onlyTable && React.createElement(_StyledTabs, {\n    items: [React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"My Tasks \"), React.createElement(Tag, {\n      limitDigits: 4,\n      label: jurorOpenTaskNumber,\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"All Tasks \"), React.createElement(Tag, {\n      limitDigits: 4,\n      label: openTasksNumber,\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }))],\n    selected: screenIndex,\n    onChange: handleTabChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), (() => {\n    if (errorLoading) {\n      return React.createElement(ErrorLoading, {\n        subject: \"tasks\",\n        errors: [errorLoading.message],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      });\n    }\n\n    if (tasksFetching) {\n      return React.createElement(TasksLoading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      });\n    }\n\n    if (!filtersSelected && tasks.length === 0) {\n      return myTasksSelected ? React.createElement(NoMyTasks, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }) : React.createElement(NoTasks, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(TaskTable, {\n      tasks: tasks,\n      emptyFilterResults: emptyFilterResults,\n      onClearFilters: handleClearFilters,\n      dateRangeFilter: selectedDateRange,\n      onDateRangeChange: handleSelectedDateRangeChange,\n      phaseFilter: selectedPhase,\n      onPhaseChange: handleSelectedPhaseChange,\n      phaseTypes: taskActionsString,\n      onlyTable: onlyTable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    });\n  })());\n});\nexport default Tasks;","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/Tasks/Tasks.js"],"names":["React","useState","GU","Tabs","Tag","NoTasks","NoMyTasks","TaskTable","TasksLoading","TitleHeader","ErrorLoading","useWallet","useFilteredTasks","Tasks","memo","onlyTable","wallet","screenIndex","setScreenIndex","getMyTasksSelected","account","myTasksSelected","tasks","fetching","tasksFetching","error","errorLoading","filtersSelected","setFiltersSelected","emptyFilterResults","handleClearFilters","selectedDateRange","handleSelectedDateRangeChange","selectedPhase","handleSelectedPhaseChange","openTasksNumber","jurorOpenTaskNumber","taskActionsString","handleTabChange","message","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { GU, Tabs, Tag } from '@aragon/ui'\n\nimport NoTasks from './NoTasks'\nimport NoMyTasks from './NoMyTasks'\nimport TaskTable from './TasksTable'\nimport TasksLoading from '../LoadingCard'\nimport TitleHeader from '../TitleHeader'\nimport ErrorLoading from '../Errors/ErrorLoading'\nimport { useWallet } from '../../providers/Wallet'\nimport useFilteredTasks from '../../hooks/useFilteredTasks'\n\nconst Tasks = React.memo(({ onlyTable }) => {\n  const wallet = useWallet()\n\n  const [screenIndex, setScreenIndex] = useState(0)\n\n  const getMyTasksSelected = () => {\n    if (onlyTable) {\n      if (wallet.account) {\n        return true\n      }\n      return false\n    }\n    return screenIndex === 0\n  }\n\n  const myTasksSelected = getMyTasksSelected()\n\n  const {\n    tasks,\n    fetching: tasksFetching,\n    error: errorLoading,\n    filtersSelected,\n    setFiltersSelected,\n    emptyFilterResults,\n    handleClearFilters,\n    selectedDateRange,\n    handleSelectedDateRangeChange,\n    selectedPhase,\n    handleSelectedPhaseChange,\n    openTasksNumber,\n    jurorOpenTaskNumber,\n    taskActionsString,\n  } = useFilteredTasks(myTasksSelected, wallet.account)\n\n  const handleTabChange = screenIndex => {\n    setFiltersSelected(false)\n    handleClearFilters()\n    setScreenIndex(screenIndex)\n  }\n\n  return (\n    <div\n      css={`\n        padding-bottom: ${3 * GU}px;\n      `}\n    >\n      {!onlyTable && <TitleHeader title=\"Tasks\" />}\n      {/* Commented since we are not launching V1 with this component\n      <TaskBox\n        openTasks={openTasks}\n        completedTasks={completedTasks}\n        incompleteTasks={incompleteTasks}\n      /> */}\n      {!onlyTable && (\n        <Tabs\n          css={`\n            margin-bottom: 0px;\n          `}\n          items={[\n            <div>\n              <span>My Tasks </span>\n              <Tag limitDigits={4} label={jurorOpenTaskNumber} size=\"small\" />\n            </div>,\n            <div>\n              <span>All Tasks </span>\n              <Tag limitDigits={4} label={openTasksNumber} size=\"small\" />\n            </div>,\n          ]}\n          selected={screenIndex}\n          onChange={handleTabChange}\n        />\n      )}\n\n      {(() => {\n        if (errorLoading) {\n          return (\n            <ErrorLoading subject=\"tasks\" errors={[errorLoading.message]} />\n          )\n        }\n        if (tasksFetching) {\n          return <TasksLoading />\n        }\n\n        if (!filtersSelected && tasks.length === 0) {\n          return myTasksSelected ? <NoMyTasks /> : <NoTasks />\n        }\n        return (\n          <TaskTable\n            tasks={tasks}\n            emptyFilterResults={emptyFilterResults}\n            onClearFilters={handleClearFilters}\n            dateRangeFilter={selectedDateRange}\n            onDateRangeChange={handleSelectedDateRangeChange}\n            phaseFilter={selectedPhase}\n            onPhaseChange={handleSelectedPhaseChange}\n            phaseTypes={taskActionsString}\n            onlyTable={onlyTable}\n          />\n        )\n      })()}\n    </div>\n  )\n})\n\nexport default Tasks\n"]},"metadata":{},"sourceType":"module"}