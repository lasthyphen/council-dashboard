{"ast":null,"code":"import _slicedToArray from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _styled5 from\"styled-components\";import _styled4 from\"styled-components\";import _styled3 from\"styled-components\";import _styled2 from\"styled-components\";import _styled from\"styled-components\";import React,{useState,useEffect,useRef}from'react';import{GU,Popover,springs,textStyle,useTheme}from'@aragon/ui';import{Spring,Transition,animated}from'react-spring/renderprops';var AnimatedDiv=animated.div;var _StyledAnimatedDiv2=_styled(AnimatedDiv).withConfig({displayName:\"AccountPopover___StyledAnimatedDiv2\",componentId:\"sc-1u97amz-0\"})([\"position:\",\";top:0;left:0;right:0;\"],function(p){return p._css7;});var _StyledAnimatedDiv=_styled(AnimatedDiv).withConfig({displayName:\"AccountPopover___StyledAnimatedDiv\",componentId:\"sc-1u97amz-1\"})([\"position:relative;flex-grow:1;width:100%;overflow:hidden;outline:0;\"]);var _StyledPopover=_styled(Popover).withConfig({displayName:\"AccountPopover___StyledPopover\",componentId:\"sc-1u97amz-2\"})([\"width:\",\"px;\"],function(p){return p._css;});var _StyledSection=_styled(\"section\").withConfig({displayName:\"AccountPopover___StyledSection\",componentId:\"sc-1u97amz-3\"})([\"display:flex;flex-direction:column;overflow:hidden;\"]);var _StyledH=_styled(\"h1\").withConfig({displayName:\"AccountPopover___StyledH\",componentId:\"sc-1u97amz-4\"})([\"display:flex;flex-grow:0;flex-shrink:0;align-items:center;height:\",\"px;padding-left:\",\"px;border-bottom:1px solid \",\";color:\",\";\",\";\"],function(p){return p._css2;},function(p){return p._css3;},function(p){return p._css4;},function(p){return p._css5;},function(p){return p._css6;});function AccountPopover(_ref){var children=_ref.children,direction=_ref.direction,heading=_ref.heading,onClose=_ref.onClose,opener=_ref.opener,screenData=_ref.screenData,screenId=_ref.screenId,screenKey=_ref.screenKey,visible=_ref.visible;var theme=useTheme();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),animate=_useState2[0],setAnimate=_useState2[1];var _useState3=useState(30*GU),_useState4=_slicedToArray(_useState3,2),height=_useState4[0],setHeight=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),measuredHeight=_useState6[0],setMeasuredHeight=_useState6[1];// Prevents to lose the focus on the popover when a screen leaves while an\n// element inside is focused (e.g. when clicking on the “disconnect” button).\nvar popoverFocusElement=useRef();useEffect(function(){if(popoverFocusElement.current){popoverFocusElement.current.focus();}},[screenId]);// Don’t animate the slider until the popover has opened\nuseEffect(function(){var timer;setAnimate(false);if(visible){timer=setTimeout(function(){setAnimate(true);},0);}return function(){return clearTimeout(timer);};},[visible]);return React.createElement(_StyledPopover,{closeOnOpenerFocus:true,onClose:onClose,opener:opener,placement:\"bottom-end\",visible:visible,_css:51*GU},React.createElement(_StyledSection,null,React.createElement(_StyledH,{_css2:4*GU,_css3:2*GU,_css4:theme.border,_css5:theme.contentSecondary,_css6:textStyle('label2')},heading),React.createElement(Spring,{config:springs.smooth,from:{height:32*GU},to:{height:height},immediate:!animate,native:true},function(_ref2){var height=_ref2.height;return React.createElement(_StyledAnimatedDiv,{ref:popoverFocusElement,tabIndex:\"0\",style:{height:measuredHeight?height:'auto'}},React.createElement(Transition,{native:true,config:springs.smooth,items:screenData,keys:screenKey,from:{opacity:0,transform:\"translate3d(\".concat(3*GU*direction,\"px, 0, 0)\")},enter:{opacity:1,transform:\"translate3d(0, 0, 0)\"},leave:{opacity:0,transform:\"translate3d(\".concat(3*GU*-direction,\"px, 0, 0)\")},immediate:!animate,onRest:function onRest(_,status){if(status==='update'){setMeasuredHeight(false);}},onStart:function onStart(_,status){setMeasuredHeight(true);}},function(screenData){return function(_ref3){var opacity=_ref3.opacity,transform=_ref3.transform;return React.createElement(_StyledAnimatedDiv2,{ref:function ref(elt){if(elt){setHeight(elt.clientHeight);}},style:{opacity:opacity,transform:transform},_css7:measuredHeight?'absolute':'static'},children(screenData));};}));})));}export default AccountPopover;","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/Account/AccountPopover.js"],"names":["React","useState","useEffect","useRef","GU","Popover","springs","textStyle","useTheme","Spring","Transition","animated","AnimatedDiv","div","AccountPopover","children","direction","heading","onClose","opener","screenData","screenId","screenKey","visible","theme","animate","setAnimate","height","setHeight","measuredHeight","setMeasuredHeight","popoverFocusElement","current","focus","timer","setTimeout","clearTimeout","border","contentSecondary","smooth","opacity","transform","_","status","elt","clientHeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { GU, Popover, springs, textStyle, useTheme } from '@aragon/ui'\nimport { Spring, Transition, animated } from 'react-spring/renderprops'\n\nconst AnimatedDiv = animated.div\n\nfunction AccountPopover({\n  children,\n  direction,\n  heading,\n  onClose,\n  opener,\n  screenData,\n  screenId,\n  screenKey,\n  visible,\n}) {\n  const theme = useTheme()\n\n  const [animate, setAnimate] = useState(false)\n  const [height, setHeight] = useState(30 * GU)\n  const [measuredHeight, setMeasuredHeight] = useState(true)\n\n  // Prevents to lose the focus on the popover when a screen leaves while an\n  // element inside is focused (e.g. when clicking on the “disconnect” button).\n  const popoverFocusElement = useRef()\n  useEffect(() => {\n    if (popoverFocusElement.current) {\n      popoverFocusElement.current.focus()\n    }\n  }, [screenId])\n\n  // Don’t animate the slider until the popover has opened\n  useEffect(() => {\n    let timer\n\n    setAnimate(false)\n\n    if (visible) {\n      timer = setTimeout(() => {\n        setAnimate(true)\n      }, 0)\n    }\n\n    return () => clearTimeout(timer)\n  }, [visible])\n\n  return (\n    <Popover\n      closeOnOpenerFocus\n      onClose={onClose}\n      opener={opener}\n      placement=\"bottom-end\"\n      visible={visible}\n      css={`\n        width: ${51 * GU}px;\n      `}\n    >\n      <section\n        css={`\n          display: flex;\n          flex-direction: column;\n          overflow: hidden;\n        `}\n      >\n        <h1\n          css={`\n            display: flex;\n            flex-grow: 0;\n            flex-shrink: 0;\n            align-items: center;\n            height: ${4 * GU}px;\n            padding-left: ${2 * GU}px;\n            border-bottom: 1px solid ${theme.border};\n            color: ${theme.contentSecondary};\n            ${textStyle('label2')};\n          `}\n        >\n          {heading}\n        </h1>\n        <Spring\n          config={springs.smooth}\n          from={{ height: 32 * GU }}\n          to={{ height }}\n          immediate={!animate}\n          native\n        >\n          {({ height }) => (\n            <AnimatedDiv\n              ref={popoverFocusElement}\n              tabIndex=\"0\"\n              style={{ height: measuredHeight ? height : 'auto' }}\n              css={`\n                position: relative;\n                flex-grow: 1;\n                width: 100%;\n                overflow: hidden;\n                outline: 0;\n              `}\n            >\n              <Transition\n                native\n                config={springs.smooth}\n                items={screenData}\n                keys={screenKey}\n                from={{\n                  opacity: 0,\n                  transform: `translate3d(${3 * GU * direction}px, 0, 0)`,\n                }}\n                enter={{ opacity: 1, transform: `translate3d(0, 0, 0)` }}\n                leave={{\n                  opacity: 0,\n                  transform: `translate3d(${3 * GU * -direction}px, 0, 0)`,\n                }}\n                immediate={!animate}\n                onRest={(_, status) => {\n                  if (status === 'update') {\n                    setMeasuredHeight(false)\n                  }\n                }}\n                onStart={(_, status) => {\n                  setMeasuredHeight(true)\n                }}\n              >\n                {screenData => ({ opacity, transform }) => (\n                  <AnimatedDiv\n                    ref={elt => {\n                      if (elt) {\n                        setHeight(elt.clientHeight)\n                      }\n                    }}\n                    style={{ opacity, transform }}\n                    css={`\n                      position: ${measuredHeight ? 'absolute' : 'static'};\n                      top: 0;\n                      left: 0;\n                      right: 0;\n                    `}\n                  >\n                    {children(screenData)}\n                  </AnimatedDiv>\n                )}\n              </Transition>\n            </AnimatedDiv>\n          )}\n        </Spring>\n      </section>\n    </Popover>\n  )\n}\n\nAccountPopover.propTypes = {\n  children: PropTypes.func.isRequired,\n  direction: PropTypes.oneOf([-1, 1]).isRequired,\n  heading: PropTypes.node.isRequired,\n  onClose: PropTypes.func.isRequired,\n  opener: PropTypes.any,\n  screenData: PropTypes.object.isRequired,\n  screenId: PropTypes.string.isRequired,\n  screenKey: PropTypes.func.isRequired,\n  visible: PropTypes.bool.isRequired,\n}\n\nexport default AccountPopover\n"]},"metadata":{},"sourceType":"module"}