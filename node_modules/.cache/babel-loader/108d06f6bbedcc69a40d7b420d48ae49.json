{"ast":null,"code":"import React,{useCallback}from'react';import ANJForm from'./ANJForm';import{formatUnits}from'../../../lib/math-utils';import{useCourtConfig}from'../../../providers/CourtConfig';var WithdrawANJ=React.memo(function WithdrawANJ(_ref){var onWithdrawANJ=_ref.onWithdrawANJ,inactiveBalance=_ref.inactiveBalance,onDone=_ref.onDone;var _useCourtConfig=useCourtConfig(),anjToken=_useCourtConfig.anjToken;var maxAmount=inactiveBalance;var maxAmountFormatted=formatUnits(maxAmount,{digits:anjToken.decimals,precision:anjToken.decimals});var validation=useCallback(function(amountBN){if(amountBN.gt(maxAmount)){return\"Insufficient funds, you cannnot withdraw more than \".concat(maxAmountFormatted,\" \").concat(anjToken.symbol);}return null;},[anjToken.symbol,maxAmount,maxAmountFormatted]);return React.createElement(ANJForm,{actionLabel:\"Withdraw\",maxAmount:maxAmount,onSubmit:onWithdrawANJ,onDone:onDone,runParentValidation:validation});});export default WithdrawANJ;","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/Dashboard/panels/WithdrawANJ.js"],"names":["React","useCallback","ANJForm","formatUnits","useCourtConfig","WithdrawANJ","memo","onWithdrawANJ","inactiveBalance","onDone","anjToken","maxAmount","maxAmountFormatted","digits","decimals","precision","validation","amountBN","gt","symbol"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,KAAmC,OAAnC,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,OAASC,WAAT,KAA4B,yBAA5B,CACA,OAASC,cAAT,KAA+B,gCAA/B,CAEA,GAAMC,CAAAA,WAAW,CAAGL,KAAK,CAACM,IAAN,CAAW,QAASD,CAAAA,WAAT,MAI5B,IAHDE,CAAAA,aAGC,MAHDA,aAGC,CAFDC,eAEC,MAFDA,eAEC,CADDC,MACC,MADDA,MACC,qBACoBL,cAAc,EADlC,CACOM,QADP,iBACOA,QADP,CAGD,GAAMC,CAAAA,SAAS,CAAGH,eAAlB,CACA,GAAMI,CAAAA,kBAAkB,CAAGT,WAAW,CAACQ,SAAD,CAAY,CAChDE,MAAM,CAAEH,QAAQ,CAACI,QAD+B,CAEhDC,SAAS,CAAEL,QAAQ,CAACI,QAF4B,CAAZ,CAAtC,CAKA,GAAME,CAAAA,UAAU,CAAGf,WAAW,CAC5B,SAAAgB,QAAQ,CAAI,CACV,GAAIA,QAAQ,CAACC,EAAT,CAAYP,SAAZ,CAAJ,CAA4B,CAC1B,mEAA6DC,kBAA7D,aAAmFF,QAAQ,CAACS,MAA5F,EACD,CAED,MAAO,KAAP,CACD,CAP2B,CAQ5B,CAACT,QAAQ,CAACS,MAAV,CAAkBR,SAAlB,CAA6BC,kBAA7B,CAR4B,CAA9B,CAWA,MACE,qBAAC,OAAD,EACE,WAAW,CAAC,UADd,CAEE,SAAS,CAAED,SAFb,CAGE,QAAQ,CAAEJ,aAHZ,CAIE,MAAM,CAAEE,MAJV,CAKE,mBAAmB,CAAEO,UALvB,EADF,CASD,CAjCmB,CAApB,CAmCA,cAAeX,CAAAA,WAAf","sourcesContent":["import React, { useCallback } from 'react'\nimport ANJForm from './ANJForm'\nimport { formatUnits } from '../../../lib/math-utils'\nimport { useCourtConfig } from '../../../providers/CourtConfig'\n\nconst WithdrawANJ = React.memo(function WithdrawANJ({\n  onWithdrawANJ,\n  inactiveBalance,\n  onDone,\n}) {\n  const { anjToken } = useCourtConfig()\n\n  const maxAmount = inactiveBalance\n  const maxAmountFormatted = formatUnits(maxAmount, {\n    digits: anjToken.decimals,\n    precision: anjToken.decimals,\n  })\n\n  const validation = useCallback(\n    amountBN => {\n      if (amountBN.gt(maxAmount)) {\n        return `Insufficient funds, you cannnot withdraw more than ${maxAmountFormatted} ${anjToken.symbol}`\n      }\n\n      return null\n    },\n    [anjToken.symbol, maxAmount, maxAmountFormatted]\n  )\n\n  return (\n    <ANJForm\n      actionLabel=\"Withdraw\"\n      maxAmount={maxAmount}\n      onSubmit={onWithdrawANJ}\n      onDone={onDone}\n      runParentValidation={validation}\n    />\n  )\n})\n\nexport default WithdrawANJ\n"]},"metadata":{},"sourceType":"module"}