{"ast":null,"code":"import _objectSpread from \"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { isCallScript, decodeCallScript } from '../callScript';\nimport { isValidForwardCall, parseForwardCall } from '../forwarding';\n/**\n * Decodes an EVM callscript and returns the transaction path it describes.\n *\n * @return An array of Ethereum transactions that describe each step in the path\n */\n\nexport function decodeTransactionPath(script) {\n  // In the future we may support more EVMScripts, but for now let's just assume we're only\n  // dealing with call scripts\n  if (!isCallScript(script)) {\n    throw new Error(\"Script could not be decoded: \".concat(script));\n  }\n\n  var path = decodeCallScript(script);\n  return path.reduce(function (decodeSegments, segment) {\n    var data = segment.data;\n    var children;\n\n    if (isValidForwardCall(data)) {\n      var forwardedEvmScript = parseForwardCall(data);\n\n      try {\n        children = decodeTransactionPath(forwardedEvmScript); // eslint-disable-next-line no-empty\n      } catch (err) {}\n    }\n\n    return decodeSegments.concat(_objectSpread({}, segment, {\n      children: children\n    }));\n  }, []);\n}","map":null,"metadata":{},"sourceType":"module"}