{"ast":null,"code":"import _objectWithoutProperties from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _regeneratorRuntime from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _styled6 from\"styled-components\";import _styled5 from\"styled-components\";import _styled4 from\"styled-components\";import _styled3 from\"styled-components\";import _styled2 from\"styled-components\";import _styled from\"styled-components\";import React,{useCallback,useEffect,useMemo,useState}from'react';import{Button,GU,textStyle,useTheme}from'@aragon/ui';import{useWallet}from'../providers/Wallet';import{signMessage}from'../lib/web3-utils';import{dayjs}from'../utils/date-utils';import signRequestSuccessIllustration from\"../../src/assets/signRequestSuccess.svg\";import signRequestFailIllustration from\"../../src/assets/signRequestFail.svg\";import signRequestLoading from'../../src/assets/signRequestLoading.gif';var _StyledDiv=_styled(\"div\").withConfig({displayName:\"SignatureRequest___StyledDiv\",componentId:\"sc-1hjqbw6-0\"})([\"display:flex;flex-direction:column;text-align:center;align-items:center;\"]);var _StyledH=_styled(\"h3\").withConfig({displayName:\"SignatureRequest___StyledH\",componentId:\"sc-1hjqbw6-1\"})([\"\",\";margin-top:\",\"px;\"],function(p){return p._css;},function(p){return p._css2;});var _StyledSpan=_styled(\"span\").withConfig({displayName:\"SignatureRequest___StyledSpan\",componentId:\"sc-1hjqbw6-2\"})([\"\",\";color:\",\";margin-top:\",\"px;\"],function(p){return p._css3;},function(p){return p._css4;},function(p){return p._css5;});var _StyledSpan2=_styled(\"span\").withConfig({displayName:\"SignatureRequest___StyledSpan2\",componentId:\"sc-1hjqbw6-3\"})([\"\",\";color:\",\";margin-top:\",\"px;\"],function(p){return p._css6;},function(p){return p._css7;},function(p){return p._css8;});var _StyledDiv2=_styled(\"div\").withConfig({displayName:\"SignatureRequest___StyledDiv2\",componentId:\"sc-1hjqbw6-4\"})([\"display:flex;justify-content:space-between;width:100%;flex-direction:\",\";margin-top:\",\"px;\"],function(p){return p._css9;},function(p){return p._css10;});var SignerRequest=React.memo(function SignerRequest(_ref){var compactMode=_ref.compactMode,mode=_ref.mode,onSignSuccess=_ref.onSignSuccess,text=_ref.text,title=_ref.title;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),signingError=_useState2[0],setSigningError=_useState2[1];var successMode=mode==='success';var wallet=useWallet();var theme=useTheme();var illustration=useMemo(function(){if(signingError){return signRequestFailIllustration;}if(successMode){return signRequestSuccessIllustration;}return signRequestLoading;},[signingError,successMode]);var _useMemo=useMemo(function(){if(signingError){return{statusText:'Signature failed',statusTextColor:theme.negative};}if(successMode){return{statusText:'Signature confirmed',statusTextColor:theme.positive};}return{statusText:'Waiting for signatureâ€¦',statusTextColor:theme.surfaceContentSecondary};},[signingError,successMode,theme]),statusText=_useMemo.statusText,statusTextColor=_useMemo.statusTextColor;var infoText=useMemo(function(){if(signingError){return'A error occurred when signing the message.';}return text;},[signingError,text]);var requestSignature=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var now,_ref3,signHash,error;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(wallet){_context.next=2;break;}return _context.abrupt(\"return\");case 2:now=dayjs.utc().toString();_context.next=5;return signMessage(wallet,now);case 5:_ref3=_context.sent;signHash=_ref3.signHash;error=_ref3.error;if(!error){_context.next=11;break;}setSigningError(true);return _context.abrupt(\"return\");case 11:onSignSuccess(signHash,now);case 12:case\"end\":return _context.stop();}}},_callee);})),[onSignSuccess,wallet]);/**  We only need to execute it when the component is rendered but if we need to retry the action we\n   should call to the requestSignature callback */useEffect(function(){if(successMode){return;}requestSignature();},[]);// eslint-disable-line react-hooks/exhaustive-deps\nreturn React.createElement(\"div\",null,React.createElement(_StyledDiv,null,React.createElement(\"img\",{src:illustration,height:140,width:140}),React.createElement(_StyledH,{_css:textStyle('title2'),_css2:4*GU},title),React.createElement(_StyledSpan,{_css3:textStyle('body2'),_css4:statusTextColor,_css5:1.5*GU},statusText),React.createElement(_StyledSpan2,{_css6:textStyle('body2'),_css7:theme.surfaceContentSecondary,_css8:1.5*GU},infoText),signingError&&React.createElement(_StyledDiv2,{_css9:compactMode?'column':'row',_css10:3*GU},React.createElement(ActionButton,{href:\"https://support.dijets.io/article/27-general-troubleshooting-tips\",compactMode:compactMode},\"Troubleshooting\"),React.createElement(ActionButton,{mode:\"strong\",onClick:requestSignature,compactMode:compactMode},\"Repeat signature\"))));});var _StyledButton=_styled(Button).withConfig({displayName:\"SignatureRequest___StyledButton\",componentId:\"sc-1hjqbw6-5\"})([\"width:\",\";\"],function(p){return p._css11;});function ActionButton(_ref4){var compactMode=_ref4.compactMode,props=_objectWithoutProperties(_ref4,[\"compactMode\"]);return React.createElement(_StyledButton,Object.assign({},props,{_css11:compactMode?'100%':\"calc((100% - \".concat(2*GU,\"px) /  2)\")}));}export default SignerRequest;","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/SignatureRequest.js"],"names":["React","useCallback","useEffect","useMemo","useState","Button","GU","textStyle","useTheme","useWallet","signMessage","dayjs","signRequestLoading","SignerRequest","memo","compactMode","mode","onSignSuccess","text","title","signingError","setSigningError","successMode","wallet","theme","illustration","signRequestFailIllustration","signRequestSuccessIllustration","statusText","statusTextColor","negative","positive","surfaceContentSecondary","infoText","requestSignature","now","utc","toString","signHash","error","ActionButton","props"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { Button, GU, textStyle, useTheme } from '@aragon/ui'\nimport { useWallet } from '../providers/Wallet'\nimport { signMessage } from '../lib/web3-utils'\nimport { dayjs } from '../utils/date-utils'\n\nimport signRequestSuccessIllustration from '../../src/assets/signRequestSuccess.svg'\nimport signRequestFailIllustration from '../../src/assets/signRequestFail.svg'\nimport signRequestLoading from '../../src/assets/signRequestLoading.gif'\n\nconst SignerRequest = React.memo(function SignerRequest({\n  compactMode,\n  mode,\n  onSignSuccess,\n  text,\n  title,\n}) {\n  const [signingError, setSigningError] = useState(false)\n\n  const successMode = mode === 'success'\n\n  const wallet = useWallet()\n\n  const theme = useTheme()\n\n  const illustration = useMemo(() => {\n    if (signingError) {\n      return signRequestFailIllustration\n    }\n    if (successMode) {\n      return signRequestSuccessIllustration\n    }\n    return signRequestLoading\n  }, [signingError, successMode])\n\n  const { statusText, statusTextColor } = useMemo(() => {\n    if (signingError) {\n      return {\n        statusText: 'Signature failed',\n        statusTextColor: theme.negative,\n      }\n    }\n    if (successMode) {\n      return {\n        statusText: 'Signature confirmed',\n        statusTextColor: theme.positive,\n      }\n    }\n    return {\n      statusText: 'Waiting for signatureâ€¦',\n      statusTextColor: theme.surfaceContentSecondary,\n    }\n  }, [signingError, successMode, theme])\n\n  const infoText = useMemo(() => {\n    if (signingError) {\n      return 'A error occurred when signing the message.'\n    }\n    return text\n  }, [signingError, text])\n\n  const requestSignature = useCallback(async () => {\n    if (!wallet) {\n      return\n    }\n    const now = dayjs.utc().toString()\n    const { signHash, error } = await signMessage(wallet, now)\n\n    if (error) {\n      setSigningError(true)\n      return\n    }\n\n    onSignSuccess(signHash, now)\n  }, [onSignSuccess, wallet])\n\n  /**  We only need to execute it when the component is rendered but if we need to retry the action we\n   should call to the requestSignature callback */\n  useEffect(() => {\n    if (successMode) {\n      return\n    }\n    requestSignature()\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      <div\n        css={`\n          display: flex;\n          flex-direction: column;\n          text-align: center;\n          align-items: center;\n        `}\n      >\n        <img src={illustration} height={140} width={140} />\n        <h3\n          css={`\n            ${textStyle('title2')};\n            margin-top: ${4 * GU}px;\n          `}\n        >\n          {title}\n        </h3>\n\n        <span\n          css={`\n            ${textStyle('body2')};\n            color: ${statusTextColor};\n            margin-top: ${1.5 * GU}px;\n          `}\n        >\n          {statusText}\n        </span>\n        <span\n          css={`\n            ${textStyle('body2')};\n            color: ${theme.surfaceContentSecondary};\n            margin-top: ${1.5 * GU}px;\n          `}\n        >\n          {infoText}\n        </span>\n        {signingError && (\n          <div\n            css={`\n              display: flex;\n              justify-content: space-between;\n              width: 100%;\n              flex-direction: ${compactMode ? 'column' : 'row'};\n              margin-top: ${3 * GU}px;\n            `}\n          >\n            {/* TODO - Update the link once https://github.com/aragon/help/issues/31 is resolved */}\n            <ActionButton\n              href=\"https://support.dijets.io/article/27-general-troubleshooting-tips\"\n              compactMode={compactMode}\n            >\n              Troubleshooting\n            </ActionButton>\n            <ActionButton\n              mode=\"strong\"\n              onClick={requestSignature}\n              compactMode={compactMode}\n            >\n              Repeat signature\n            </ActionButton>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n})\n\nfunction ActionButton({ compactMode, ...props }) {\n  return (\n    <Button\n      css={`\n        width: ${compactMode ? '100%' : `calc((100% - ${2 * GU}px) /  2)`};\n      `}\n      {...props}\n    />\n  )\n}\n\nexport default SignerRequest\n"]},"metadata":{},"sourceType":"module"}