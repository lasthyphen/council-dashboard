{"ast":null,"code":"import _styled13 from\"styled-components\";import _styled12 from\"styled-components\";import _styled11 from\"styled-components\";import _styled10 from\"styled-components\";import _styled9 from\"styled-components\";import _styled8 from\"styled-components\";import _styled7 from\"styled-components\";import _styled6 from\"styled-components\";import _styled5 from\"styled-components\";import _styled4 from\"styled-components\";import _styled3 from\"styled-components\";import _styled2 from\"styled-components\";import _styled from\"styled-components\";import React,{useMemo}from'react';import styled from'styled-components';import{Accordion,GU,textStyle,useTheme,Timer}from'@aragon/ui';import DisputeOutcomeText from'./DisputeOutcomeText';import DisputeRoundPill from'./DisputeRoundPill';import Step from'../Step';import Stepper from'../Stepper';import{IconFlag,IconFolder,IconGavelNoFill,IconRewards,IconRuling,IconThinking,IconUsers,IconVoting}from'../../utils/dispute-icons';import{Phase as DisputePhase,getPhaseStringForStatus}from'../../types/dispute-status-types';import{dateFormat}from'../../utils/date-utils';import useDisputeTimeline from'../../hooks/useDisputeTimeline';var _StyledDiv=styled(\"div\").withConfig({displayName:\"DisputeTimeline___StyledDiv\",componentId:\"sc-1enj16q-0\"})([\"width:100%;\"]);var _StyledDiv2=styled(\"div\").withConfig({displayName:\"DisputeTimeline___StyledDiv2\",componentId:\"sc-1enj16q-1\"})([\"display:flex;align-items:center;\"]);var _StyledImg=styled(\"img\").withConfig({displayName:\"DisputeTimeline___StyledImg\",componentId:\"sc-1enj16q-2\"})([\"margin-right:\",\"px;\"],function(p){return p._css;});var _StyledStepper=styled(Stepper).withConfig({displayName:\"DisputeTimeline___StyledStepper\",componentId:\"sc-1enj16q-3\"})([\"padding:\",\"px 0;\"],function(p){return p._css2;});var Timeline=React.memo(function Timeline(_ref){var timeline=_ref.timeline;var theme=useTheme();return React.createElement(\"div\",null,React.createElement(Stepper,{lineColor:theme.accent.alpha(0.3),lineTop:12},timeline.map(function(item,index){if(!Array.isArray(item)){return React.createElement(ItemStep,{key:index,item:item,index:index});}return item.map(function(round,roundIndex){if(roundIndex===0){return round.map(function(roundItem,phaseIndex){return React.createElement(ItemStep,{key:phaseIndex,item:roundItem,index:phaseIndex});});}return React.createElement(Step,{key:roundIndex,active:false,content:React.createElement(_StyledDiv,null,React.createElement(StyledAccordion,null,React.createElement(Accordion,{key:roundIndex,items:[[React.createElement(_StyledDiv2,null,React.createElement(_StyledImg,{alt:18,src:IconGavelNoFill,_css:1*GU}),React.createElement(DisputeRoundPill,{roundId:round[0].roundId})),React.createElement(_StyledStepper,{lineColor:theme.accent.alpha(0.3),lineTop:12,_css2:3*GU},round.map(function(roundItem,phaseIndex){return React.createElement(ItemStep,{key:phaseIndex,item:roundItem,index:phaseIndex,roundStepContainer:true});}))]]}))),displayPoint:false});});})));});var _StyledDiv3=styled(\"div\").withConfig({displayName:\"DisputeTimeline___StyledDiv3\",componentId:\"sc-1enj16q-4\"})([\"background:\",\";border-radius:80%;position:relative;z-index:1;display:inline-flex;\"],function(p){return p._css3;});var _StyledSpan=styled(\"span\").withConfig({displayName:\"DisputeTimeline___StyledSpan\",componentId:\"sc-1enj16q-5\"})([\"\",\"\"],function(p){return p._css4;});var _StyledSpan2=styled(\"span\").withConfig({displayName:\"DisputeTimeline___StyledSpan2\",componentId:\"sc-1enj16q-6\"})([\"color:\",\";opacity:0.6;\"],function(p){return p._css5;});var _StyledStep=styled(Step).withConfig({displayName:\"DisputeTimeline___StyledStep\",componentId:\"sc-1enj16q-7\"})([\"\",\"\"],function(p){return p._css6;});function ItemStep(_ref2){var item=_ref2.item,index=_ref2.index,roundStepContainer=_ref2.roundStepContainer;var theme=useTheme();return React.createElement(_StyledStep,{key:index,active:item.active,stepPoint:React.createElement(_StyledDiv3,{_css3:item.active?'linear-gradient(51.69deg, #FFB36D -0.55%, #FF8888 88.44%)':'#FFE2D7'},React.createElement(PhaseIcon,{phase:item.phase,active:item.active})),content:React.createElement(\"div\",null,React.createElement(\"div\",null,React.createElement(\"div\",null,React.createElement(_StyledSpan,{_css4:textStyle('body1')},getPhaseStringForStatus(item.phase,item.active))),React.createElement(\"div\",null,React.createElement(_StyledSpan2,{_css5:theme.surfaceContentSecondary},React.createElement(DisplayTime,{item:item}))),item.active&&React.createElement(DisputeRoundPill,{roundId:item.roundId}),item.showOutcome&&React.createElement(Outcome,{outcome:item.outcome,phase:item.phase}))),displayPoint:true,_css6:roundStepContainer?'margin-left: 0px;':''});}var _StyledDiv4=styled(\"div\").withConfig({displayName:\"DisputeTimeline___StyledDiv4\",componentId:\"sc-1enj16q-8\"})([\"position:relative;\"]);var _StyledDiv5=styled(\"div\").withConfig({displayName:\"DisputeTimeline___StyledDiv5\",componentId:\"sc-1enj16q-9\"})([\"margin-top:\",\"px;\"],function(p){return p._css7;});var _StyledSpan3=styled(\"span\").withConfig({displayName:\"DisputeTimeline___StyledSpan3\",componentId:\"sc-1enj16q-10\"})([\"\",\" color:\",\";text-transform:uppercase;\"],function(p){return p._css8;},function(p){return p._css9;});function Outcome(_ref3){var outcome=_ref3.outcome,phase=_ref3.phase;var theme=useTheme();var title=phase&&phase===DisputePhase.RevealVote?'Jury outcome':'Outcome';return React.createElement(_StyledDiv4,null,React.createElement(OutcomePoint,null),React.createElement(_StyledDiv5,{_css7:1*GU},React.createElement(_StyledSpan3,{_css8:textStyle('body3'),_css9:theme.surfaceContentSecondary},title)),React.createElement(DisputeOutcomeText,{outcome:outcome,phase:phase}));}function PhaseIcon(_ref4){var phase=_ref4.phase,active=_ref4.active;var icon=useMemo(function(){if(phase===DisputePhase.Created||phase===DisputePhase.NotStarted){return IconFlag;}if(phase===DisputePhase.Evidence){return IconFolder;}if(phase===DisputePhase.JuryDrafting){return IconUsers;}if(phase===DisputePhase.VotingPeriod||phase===DisputePhase.RevealVote){return IconVoting;}if(phase===DisputePhase.AppealRuling||phase===DisputePhase.ConfirmAppeal){return IconThinking;}if(phase===DisputePhase.ExecuteRuling){return IconRuling;}return IconRewards;},[phase]);return React.createElement(\"img\",{src:active?icon.active:icon.inactive,width:6*GU,height:6*GU,alt:\"\"});}function DisplayTime(_ref5){var item=_ref5.item;var endTime=item.endTime,active=item.active;if(active){if(!endTime){return'ANY TIME';}return React.createElement(Timer,{end:new Date(endTime),maxUnits:3});}return React.createElement(React.Fragment,null,dateFormat(endTime,'onlyDate'));}var _StyledDiv6=styled(\"div\").withConfig({displayName:\"DisputeTimeline___StyledDiv6\",componentId:\"sc-1enj16q-11\"})([\"position:absolute;top:5px;left:-44px;width:16px;height:16px;display:flex;align-items:center;justify-content:center;background:#fef3f1;border-radius:50%;\"]);var _StyledDiv7=styled(\"div\").withConfig({displayName:\"DisputeTimeline___StyledDiv7\",componentId:\"sc-1enj16q-12\"})([\"width:6px;height:6px;background:\",\";border-radius:50%;\"],function(p){return p._css10;});function OutcomePoint(){var theme=useTheme();return React.createElement(_StyledDiv6,null,React.createElement(_StyledDiv7,{_css10:theme.accent.alpha(0.3)}));}var StyledAccordion=styled.div.withConfig({displayName:\"DisputeTimeline__StyledAccordion\",componentId:\"sc-1enj16q-13\"})([\"padding:0;& > div:first-child{border-radius:0px;border-left:0;border-right:0;}&::after{height:0px !important;width:0px !important;}\"]);export default function DisputeTimeline(_ref6){var dispute=_ref6.dispute;var disputeTimeLine=useDisputeTimeline(dispute);return React.createElement(Timeline,{timeline:disputeTimeLine});}","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/Disputes/DisputeTimeline.js"],"names":["React","useMemo","styled","Accordion","GU","textStyle","useTheme","Timer","DisputeOutcomeText","DisputeRoundPill","Step","Stepper","IconFlag","IconFolder","IconGavelNoFill","IconRewards","IconRuling","IconThinking","IconUsers","IconVoting","Phase","DisputePhase","getPhaseStringForStatus","dateFormat","useDisputeTimeline","Timeline","memo","timeline","theme","accent","alpha","map","item","index","Array","isArray","round","roundIndex","roundItem","phaseIndex","roundId","ItemStep","roundStepContainer","active","phase","surfaceContentSecondary","showOutcome","outcome","Outcome","title","RevealVote","PhaseIcon","icon","Created","NotStarted","Evidence","JuryDrafting","VotingPeriod","AppealRuling","ConfirmAppeal","ExecuteRuling","inactive","DisplayTime","endTime","Date","OutcomePoint","StyledAccordion","div","DisputeTimeline","dispute","disputeTimeLine"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport { Accordion, GU, textStyle, useTheme, Timer } from '@aragon/ui'\n\nimport DisputeOutcomeText from './DisputeOutcomeText'\nimport DisputeRoundPill from './DisputeRoundPill'\nimport Step from '../Step'\nimport Stepper from '../Stepper'\n\nimport {\n  IconFlag,\n  IconFolder,\n  IconGavelNoFill,\n  IconRewards,\n  IconRuling,\n  IconThinking,\n  IconUsers,\n  IconVoting,\n} from '../../utils/dispute-icons'\n\nimport {\n  Phase as DisputePhase,\n  getPhaseStringForStatus,\n} from '../../types/dispute-status-types'\nimport { dateFormat } from '../../utils/date-utils'\nimport useDisputeTimeline from '../../hooks/useDisputeTimeline'\n\nconst Timeline = React.memo(function Timeline({ timeline }) {\n  const theme = useTheme()\n\n  return (\n    <div>\n      <Stepper lineColor={theme.accent.alpha(0.3)} lineTop={12}>\n        {timeline.map((item, index) => {\n          if (!Array.isArray(item)) {\n            return <ItemStep key={index} item={item} index={index} />\n          }\n\n          return item.map((round, roundIndex) => {\n            if (roundIndex === 0) {\n              return round.map((roundItem, phaseIndex) => (\n                <ItemStep\n                  key={phaseIndex}\n                  item={roundItem}\n                  index={phaseIndex}\n                />\n              ))\n            }\n\n            return (\n              <Step\n                key={roundIndex}\n                active={false}\n                content={\n                  <div\n                    css={`\n                      width: 100%;\n                    `}\n                  >\n                    <StyledAccordion>\n                      <Accordion\n                        key={roundIndex}\n                        items={[\n                          [\n                            <div\n                              css={`\n                                display: flex;\n                                align-items: center;\n                              `}\n                            >\n                              <img\n                                alt={18}\n                                src={IconGavelNoFill}\n                                css={`\n                                  margin-right: ${1 * GU}px;\n                                `}\n                              />\n                              <DisputeRoundPill roundId={round[0].roundId} />\n                            </div>,\n\n                            <Stepper\n                              lineColor={theme.accent.alpha(0.3)}\n                              lineTop={12}\n                              css={`\n                                padding: ${3 * GU}px 0;\n                              `}\n                            >\n                              {round.map((roundItem, phaseIndex) => (\n                                <ItemStep\n                                  key={phaseIndex}\n                                  item={roundItem}\n                                  index={phaseIndex}\n                                  roundStepContainer\n                                />\n                              ))}\n                            </Stepper>,\n                          ],\n                        ]}\n                      />\n                    </StyledAccordion>\n                  </div>\n                }\n                displayPoint={false}\n              />\n            )\n          })\n        })}\n      </Stepper>\n    </div>\n  )\n})\n\nfunction ItemStep({ item, index, roundStepContainer }) {\n  const theme = useTheme()\n\n  return (\n    <Step\n      key={index}\n      active={item.active}\n      stepPoint={\n        <div\n          css={`\n            background: ${item.active\n              ? 'linear-gradient(51.69deg, #FFB36D -0.55%, #FF8888 88.44%)'\n              : '#FFE2D7'};\n            border-radius: 80%;\n            position: relative;\n            z-index: 1;\n            display: inline-flex;\n          `}\n        >\n          <PhaseIcon phase={item.phase} active={item.active} />\n        </div>\n      }\n      content={\n        <div>\n          <div>\n            <div>\n              <span css={textStyle('body1')}>\n                {getPhaseStringForStatus(item.phase, item.active)}\n              </span>\n            </div>\n            <div>\n              <span\n                css={`\n                  color: ${theme.surfaceContentSecondary};\n                  opacity: 0.6;\n                `}\n              >\n                <DisplayTime item={item} />\n              </span>\n            </div>\n            {item.active && <DisputeRoundPill roundId={item.roundId} />}\n            {item.showOutcome && (\n              <Outcome outcome={item.outcome} phase={item.phase} />\n            )}\n          </div>\n        </div>\n      }\n      displayPoint\n      css={`\n        ${roundStepContainer ? 'margin-left: 0px;' : ''}\n      `}\n    />\n  )\n}\n\nfunction Outcome({ outcome, phase }) {\n  const theme = useTheme()\n  const title =\n    phase && phase === DisputePhase.RevealVote ? 'Jury outcome' : 'Outcome'\n\n  return (\n    <div\n      css={`\n        position: relative;\n      `}\n    >\n      <OutcomePoint />\n      <div\n        css={`\n          margin-top: ${1 * GU}px;\n        `}\n      >\n        <span\n          css={`\n            ${textStyle('body3')}\n            color:${theme.surfaceContentSecondary};\n            text-transform: uppercase;\n          `}\n        >\n          {title}\n        </span>\n      </div>\n      <DisputeOutcomeText outcome={outcome} phase={phase} />\n    </div>\n  )\n}\n\nfunction PhaseIcon({ phase, active }) {\n  const icon = useMemo(() => {\n    if (phase === DisputePhase.Created || phase === DisputePhase.NotStarted) {\n      return IconFlag\n    }\n    if (phase === DisputePhase.Evidence) {\n      return IconFolder\n    }\n    if (phase === DisputePhase.JuryDrafting) {\n      return IconUsers\n    }\n    if (\n      phase === DisputePhase.VotingPeriod ||\n      phase === DisputePhase.RevealVote\n    ) {\n      return IconVoting\n    }\n    if (\n      phase === DisputePhase.AppealRuling ||\n      phase === DisputePhase.ConfirmAppeal\n    ) {\n      return IconThinking\n    }\n    if (phase === DisputePhase.ExecuteRuling) {\n      return IconRuling\n    }\n    return IconRewards\n  }, [phase])\n\n  return (\n    <img\n      src={active ? icon.active : icon.inactive}\n      width={6 * GU}\n      height={6 * GU}\n      alt=\"\"\n    />\n  )\n}\n\nfunction DisplayTime({ item }) {\n  const { endTime, active } = item\n  if (active) {\n    if (!endTime) {\n      return 'ANY TIME'\n    }\n    return <Timer end={new Date(endTime)} maxUnits={3} />\n  }\n  return <>{dateFormat(endTime, 'onlyDate')}</>\n}\n\nfunction OutcomePoint() {\n  const theme = useTheme()\n\n  return (\n    <div\n      css={`\n        position: absolute;\n        top: 5px;\n        left: -44px;\n        width: 16px;\n        height: 16px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: #fef3f1;\n        border-radius: 50%;\n      `}\n    >\n      <div\n        css={`\n          width: 6px;\n          height: 6px;\n          background: ${theme.accent.alpha(0.3)};\n          border-radius: 50%;\n        `}\n      />\n    </div>\n  )\n}\n\nconst StyledAccordion = styled.div`\n  padding: 0;\n\n  & > div:first-child {\n    border-radius: 0px;\n    border-left: 0;\n    border-right: 0;\n  }\n\n  &::after {\n    height: 0px !important;\n    width: 0px !important;\n  }\n`\n\nexport default function DisputeTimeline({ dispute }) {\n  const disputeTimeLine = useDisputeTimeline(dispute)\n\n  return <Timeline timeline={disputeTimeLine} />\n}\n"]},"metadata":{},"sourceType":"module"}