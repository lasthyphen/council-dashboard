{"ast":null,"code":"import _slicedToArray from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useContext,useMemo,useState}from'react';import{getClientTheme,setClientTheme}from'../local-settings';var SETTINGS_THEME=getClientTheme();var ClientThemeContext=React.createContext(SETTINGS_THEME);function ClientThemeProvider(props){var _useState=useState(SETTINGS_THEME.appearance),_useState2=_slicedToArray(_useState,2),appearance=_useState2[0],setAppearance=_useState2[1];var _useState3=useState(SETTINGS_THEME.theme),_useState4=_slicedToArray(_useState3,2),theme=_useState4[0],setTheme=_useState4[1];var toggleAppearance=useCallback(function(){var newAppearance=appearance==='light'?'dark':'light';setAppearance(newAppearance);setTheme(null);setClientTheme(newAppearance);},[appearance]);var clientTheme=useMemo(function(){return{appearance:appearance,theme:theme,toggleAppearance:toggleAppearance};},[appearance,theme,toggleAppearance]);return React.createElement(ClientThemeContext.Provider,Object.assign({value:clientTheme},props));}function useClientTheme(){return useContext(ClientThemeContext);}export{ClientThemeProvider,useClientTheme};","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/providers/ClientTheme.js"],"names":["React","useCallback","useContext","useMemo","useState","getClientTheme","setClientTheme","SETTINGS_THEME","ClientThemeContext","createContext","ClientThemeProvider","props","appearance","setAppearance","theme","setTheme","toggleAppearance","newAppearance","clientTheme","useClientTheme"],"mappings":"4HAAA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,CAA6BC,UAA7B,CAAyCC,OAAzC,CAAkDC,QAAlD,KAAkE,OAAlE,CACA,OAASC,cAAT,CAAyBC,cAAzB,KAA+C,mBAA/C,CAEA,GAAMC,CAAAA,cAAc,CAAGF,cAAc,EAArC,CACA,GAAMG,CAAAA,kBAAkB,CAAGR,KAAK,CAACS,aAAN,CAAoBF,cAApB,CAA3B,CAEA,QAASG,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,eACEP,QAAQ,CAACG,cAAc,CAACK,UAAhB,CADV,wCAC3BA,UAD2B,eACfC,aADe,8BAERT,QAAQ,CAACG,cAAc,CAACO,KAAhB,CAFA,yCAE3BA,KAF2B,eAEpBC,QAFoB,eAIlC,GAAMC,CAAAA,gBAAgB,CAAGf,WAAW,CAAC,UAAM,CACzC,GAAMgB,CAAAA,aAAa,CAAGL,UAAU,GAAK,OAAf,CAAyB,MAAzB,CAAkC,OAAxD,CACAC,aAAa,CAACI,aAAD,CAAb,CACAF,QAAQ,CAAC,IAAD,CAAR,CACAT,cAAc,CAACW,aAAD,CAAd,CACD,CALmC,CAKjC,CAACL,UAAD,CALiC,CAApC,CAOA,GAAMM,CAAAA,WAAW,CAAGf,OAAO,CACzB,iBAAO,CACLS,UAAU,CAAVA,UADK,CAELE,KAAK,CAALA,KAFK,CAGLE,gBAAgB,CAAhBA,gBAHK,CAAP,EADyB,CAMzB,CAACJ,UAAD,CAAaE,KAAb,CAAoBE,gBAApB,CANyB,CAA3B,CASA,MAAO,qBAAC,kBAAD,CAAoB,QAApB,gBAA6B,KAAK,CAAEE,WAApC,EAAqDP,KAArD,EAAP,CACD,CAED,QAASQ,CAAAA,cAAT,EAA0B,CACxB,MAAOjB,CAAAA,UAAU,CAACM,kBAAD,CAAjB,CACD,CAED,OAASE,mBAAT,CAA8BS,cAA9B","sourcesContent":["import React, { useCallback, useContext, useMemo, useState } from 'react'\nimport { getClientTheme, setClientTheme } from '../local-settings'\n\nconst SETTINGS_THEME = getClientTheme()\nconst ClientThemeContext = React.createContext(SETTINGS_THEME)\n\nfunction ClientThemeProvider(props) {\n  const [appearance, setAppearance] = useState(SETTINGS_THEME.appearance)\n  const [theme, setTheme] = useState(SETTINGS_THEME.theme)\n\n  const toggleAppearance = useCallback(() => {\n    const newAppearance = appearance === 'light' ? 'dark' : 'light'\n    setAppearance(newAppearance)\n    setTheme(null)\n    setClientTheme(newAppearance)\n  }, [appearance])\n\n  const clientTheme = useMemo(\n    () => ({\n      appearance,\n      theme,\n      toggleAppearance,\n    }),\n    [appearance, theme, toggleAppearance]\n  )\n\n  return <ClientThemeContext.Provider value={clientTheme} {...props} />\n}\n\nfunction useClientTheme() {\n  return useContext(ClientThemeContext)\n}\n\nexport { ClientThemeProvider, useClientTheme }\n"]},"metadata":{},"sourceType":"module"}