{"ast":null,"code":"import _styled3 from \"styled-components\";\nimport _styled2 from \"styled-components\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/saleemfareed/oneds/court-dashboard/src/components/Disputes/DisputeList.js\";\nimport React, { useCallback, useState } from 'react';\nimport { Bar, CardLayout, GU, useLayout, useTheme } from '@aragon/ui';\nimport DisputeCard from './DisputeCard';\nimport DisputeFilters from './DisputeFilters';\nimport DisputesLoading from '../LoadingCard';\nimport ErrorLoading from '../Errors/ErrorLoading';\nimport NoFilterResults from './NoFilterResults';\nimport MessageCard from '../MessageCard';\nimport { dayjs } from '../../utils/date-utils';\nimport * as DisputesTypes from '../../types/dispute-status-types';\nimport noDataSvg from \"../../assets/noData.svg\";\nimport noDraftSvg from \"../../assets/noDraft.svg\";\nconst ALL_FILTER = 0;\nconst UNSELECTED_FILTER = -1;\nconst INITIAL_DATE_RANGE = {\n  start: null,\n  end: null\n};\nconst DISPUTES_STATUS_TYPES = [DisputesTypes.Phase.All, DisputesTypes.Status.Open, DisputesTypes.Status.Closed];\nconst DISPUTES_STATUS_STRING = DISPUTES_STATUS_TYPES.map(DisputesTypes.convertToString);\nconst DISPUTES_PHASE_TYPES = [DisputesTypes.Phase.All, DisputesTypes.Phase.Evidence, DisputesTypes.Phase.JuryDrafting, DisputesTypes.Phase.VotingPeriod, DisputesTypes.Phase.AppealRuling, DisputesTypes.Phase.ConfirmAppeal, DisputesTypes.Phase.ExecuteRuling, DisputesTypes.Phase.ClaimRewards];\nconst DISPUTES_PHASE_STRING = DISPUTES_PHASE_TYPES.map(DisputesTypes.convertToString);\n\nconst getFilteredDisputes = ({\n  disputes = [],\n  selectedDateRange,\n  selectedStatus,\n  selectedPhase\n}) => {\n  return disputes.filter(({\n    createdAt,\n    status,\n    phase\n  }) => (selectedPhase === UNSELECTED_FILTER || selectedPhase === ALL_FILTER || phase === DISPUTES_PHASE_TYPES[selectedPhase]) && (!selectedDateRange.start || !selectedDateRange.end || dayjs(createdAt).isBetween(dayjs(selectedDateRange.start).startOf('day'), dayjs(selectedDateRange.end).endOf('day'), '[]')) && (selectedStatus === UNSELECTED_FILTER || selectedStatus === ALL_FILTER || status === DISPUTES_STATUS_TYPES[selectedStatus]));\n};\n\nvar _StyledDiv = _styled(\"div\").withConfig({\n  displayName: \"DisputeList___StyledDiv\",\n  componentId: \"sc-1989j79-0\"\n})([\"width:100%;margin-top:\", \"px;padding-bottom:\", \"px;\"], p => p._css, p => p._css2);\n\nvar _StyledBar = _styled(Bar).withConfig({\n  displayName: \"DisputeList___StyledBar\",\n  componentId: \"sc-1989j79-1\"\n})([\"border-top:0;border-top-left-radius:0;border-top-right-radius:0;\"]);\n\nfunction DisputeList({\n  disputes,\n  loading,\n  errorLoading,\n  myDisputeSelected,\n  onSelectDispute\n}) {\n  const [selectedDateRange, setSelectedDateRange] = useState(INITIAL_DATE_RANGE);\n  const [selectedStatus, setSelectedStatus] = useState(UNSELECTED_FILTER);\n  const [selectedPhase, setSelectedPhase] = useState(UNSELECTED_FILTER);\n  const {\n    layoutName\n  } = useLayout();\n  const compactMode = layoutName === 'small';\n\n  const handleSelectedDateRangeChange = range => {\n    setSelectedDateRange(range);\n  };\n\n  const handlePhaseChange = useCallback(index => {\n    return setSelectedPhase(index);\n  }, []);\n  const handleStatusChange = useCallback(index => {\n    setSelectedStatus(index);\n  }, [setSelectedStatus]);\n  const handleOnClearAllFilters = useCallback(() => {\n    setSelectedDateRange(INITIAL_DATE_RANGE);\n    setSelectedStatus(UNSELECTED_FILTER);\n    setSelectedPhase(UNSELECTED_FILTER);\n  }, []);\n  const filteredDisputes = getFilteredDisputes({\n    disputes,\n    selectedDateRange,\n    selectedStatus,\n    selectedPhase\n  });\n  const filtersSelected = selectedDateRange !== INITIAL_DATE_RANGE || selectedStatus !== UNSELECTED_FILTER || selectedPhase !== UNSELECTED_FILTER;\n  return React.createElement(_StyledDiv, {\n    _css: compactMode ? 0 : -2 * GU,\n    _css2: 3 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, !compactMode && React.createElement(_StyledBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(DisputeFilters, {\n    phaseTypes: DISPUTES_PHASE_STRING,\n    statusTypes: DISPUTES_STATUS_STRING,\n    dateRangeFilter: selectedDateRange,\n    phaseFilter: selectedPhase,\n    statusFilter: selectedStatus,\n    onDateRangeChange: handleSelectedDateRangeChange,\n    onPhaseChange: handlePhaseChange,\n    onStatusChange: handleStatusChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  })), (() => {\n    if (filteredDisputes.length === 0 && filtersSelected) return React.createElement(NoFilterResults, {\n      onClearFilters: handleOnClearAllFilters,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    });\n\n    if (errorLoading) {\n      return React.createElement(ErrorLoading, {\n        subject: \"dispute\",\n        errors: [errorLoading.message],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      });\n    }\n\n    if (loading) {\n      return React.createElement(DisputesLoading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      });\n    }\n\n    if (disputes.length === 0) {\n      return myDisputeSelected ? React.createElement(NoMyDisputes, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }) : React.createElement(NoDisputes, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(CardLayout, {\n      columnWidthMin: 30 * GU,\n      rowHeight: 272,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, filteredDisputes.map(dispute => {\n      return React.createElement(DisputeCard, {\n        key: dispute.id,\n        dispute: dispute,\n        onSelectDispute: onSelectDispute,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      });\n    }));\n  })());\n}\n\nconst NoDisputes = () => {\n  const title = 'No disputes yet!';\n  return React.createElement(MessageCard, {\n    title: title,\n    icon: noDataSvg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  });\n};\n\nvar _StyledSpan = _styled(\"span\").withConfig({\n  displayName: \"DisputeList___StyledSpan\",\n  componentId: \"sc-1989j79-2\"\n})([\"color:\", \";\"], p => p._css3);\n\nconst NoMyDisputes = () => {\n  const theme = useTheme();\n  const title = 'You havenâ€™t been drafted to arbitrate a dispute yet';\n  const paragraph = React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, \"The more\", ' ', React.createElement(_StyledSpan, {\n    _css3: theme.help,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"DGC you activate\"), \",more chances you have to be drafted to arbitrate on-chain proposals\");\n  return React.createElement(MessageCard, {\n    title: title,\n    paragraph: paragraph,\n    icon: noDraftSvg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  });\n};\n\nexport default DisputeList;","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/Disputes/DisputeList.js"],"names":["React","useCallback","useState","Bar","CardLayout","GU","useLayout","useTheme","DisputeCard","DisputeFilters","DisputesLoading","ErrorLoading","NoFilterResults","MessageCard","dayjs","DisputesTypes","ALL_FILTER","UNSELECTED_FILTER","INITIAL_DATE_RANGE","start","end","DISPUTES_STATUS_TYPES","Phase","All","Status","Open","Closed","DISPUTES_STATUS_STRING","map","convertToString","DISPUTES_PHASE_TYPES","Evidence","JuryDrafting","VotingPeriod","AppealRuling","ConfirmAppeal","ExecuteRuling","ClaimRewards","DISPUTES_PHASE_STRING","getFilteredDisputes","disputes","selectedDateRange","selectedStatus","selectedPhase","filter","createdAt","status","phase","isBetween","startOf","endOf","DisputeList","loading","errorLoading","myDisputeSelected","onSelectDispute","setSelectedDateRange","setSelectedStatus","setSelectedPhase","layoutName","compactMode","handleSelectedDateRangeChange","range","handlePhaseChange","index","handleStatusChange","handleOnClearAllFilters","filteredDisputes","filtersSelected","length","message","dispute","id","NoDisputes","title","noDataSvg","NoMyDisputes","theme","paragraph","help","noDraftSvg"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react'\nimport { Bar, CardLayout, GU, useLayout, useTheme } from '@aragon/ui'\nimport DisputeCard from './DisputeCard'\nimport DisputeFilters from './DisputeFilters'\nimport DisputesLoading from '../LoadingCard'\nimport ErrorLoading from '../Errors/ErrorLoading'\nimport NoFilterResults from './NoFilterResults'\nimport MessageCard from '../MessageCard'\nimport { dayjs } from '../../utils/date-utils'\nimport * as DisputesTypes from '../../types/dispute-status-types'\n\nimport noDataSvg from '../../assets/noData.svg'\nimport noDraftSvg from '../../assets/noDraft.svg'\n\nconst ALL_FILTER = 0\nconst UNSELECTED_FILTER = -1\nconst INITIAL_DATE_RANGE = { start: null, end: null }\nconst DISPUTES_STATUS_TYPES = [\n  DisputesTypes.Phase.All,\n  DisputesTypes.Status.Open,\n  DisputesTypes.Status.Closed,\n]\nconst DISPUTES_STATUS_STRING = DISPUTES_STATUS_TYPES.map(\n  DisputesTypes.convertToString\n)\n\nconst DISPUTES_PHASE_TYPES = [\n  DisputesTypes.Phase.All,\n  DisputesTypes.Phase.Evidence,\n  DisputesTypes.Phase.JuryDrafting,\n  DisputesTypes.Phase.VotingPeriod,\n  DisputesTypes.Phase.AppealRuling,\n  DisputesTypes.Phase.ConfirmAppeal,\n  DisputesTypes.Phase.ExecuteRuling,\n  DisputesTypes.Phase.ClaimRewards,\n]\nconst DISPUTES_PHASE_STRING = DISPUTES_PHASE_TYPES.map(\n  DisputesTypes.convertToString\n)\n\nconst getFilteredDisputes = ({\n  disputes = [],\n  selectedDateRange,\n  selectedStatus,\n  selectedPhase,\n}) => {\n  return disputes.filter(\n    ({ createdAt, status, phase }) =>\n      (selectedPhase === UNSELECTED_FILTER ||\n        selectedPhase === ALL_FILTER ||\n        phase === DISPUTES_PHASE_TYPES[selectedPhase]) &&\n      (!selectedDateRange.start ||\n        !selectedDateRange.end ||\n        dayjs(createdAt).isBetween(\n          dayjs(selectedDateRange.start).startOf('day'),\n          dayjs(selectedDateRange.end).endOf('day'),\n          '[]'\n        )) &&\n      (selectedStatus === UNSELECTED_FILTER ||\n        selectedStatus === ALL_FILTER ||\n        status === DISPUTES_STATUS_TYPES[selectedStatus])\n  )\n}\n\nfunction DisputeList({\n  disputes,\n  loading,\n  errorLoading,\n  myDisputeSelected,\n  onSelectDispute,\n}) {\n  const [selectedDateRange, setSelectedDateRange] = useState(INITIAL_DATE_RANGE)\n  const [selectedStatus, setSelectedStatus] = useState(UNSELECTED_FILTER)\n  const [selectedPhase, setSelectedPhase] = useState(UNSELECTED_FILTER)\n  const { layoutName } = useLayout()\n  const compactMode = layoutName === 'small'\n\n  const handleSelectedDateRangeChange = range => {\n    setSelectedDateRange(range)\n  }\n  const handlePhaseChange = useCallback(index => {\n    return setSelectedPhase(index)\n  }, [])\n\n  const handleStatusChange = useCallback(\n    index => {\n      setSelectedStatus(index)\n    },\n    [setSelectedStatus]\n  )\n\n  const handleOnClearAllFilters = useCallback(() => {\n    setSelectedDateRange(INITIAL_DATE_RANGE)\n    setSelectedStatus(UNSELECTED_FILTER)\n    setSelectedPhase(UNSELECTED_FILTER)\n  }, [])\n\n  const filteredDisputes = getFilteredDisputes({\n    disputes,\n    selectedDateRange,\n    selectedStatus,\n    selectedPhase,\n  })\n\n  const filtersSelected =\n    selectedDateRange !== INITIAL_DATE_RANGE ||\n    selectedStatus !== UNSELECTED_FILTER ||\n    selectedPhase !== UNSELECTED_FILTER\n\n  return (\n    <div\n      css={`\n        width: 100%;\n        margin-top: ${compactMode ? 0 : -2 * GU}px;\n        padding-bottom: ${3 * GU}px;\n      `}\n    >\n      {!compactMode && (\n        <Bar\n          css={`\n            border-top: 0;\n            border-top-left-radius: 0;\n            border-top-right-radius: 0;\n          `}\n        >\n          <DisputeFilters\n            phaseTypes={DISPUTES_PHASE_STRING}\n            statusTypes={DISPUTES_STATUS_STRING}\n            dateRangeFilter={selectedDateRange}\n            phaseFilter={selectedPhase}\n            statusFilter={selectedStatus}\n            onDateRangeChange={handleSelectedDateRangeChange}\n            onPhaseChange={handlePhaseChange}\n            onStatusChange={handleStatusChange}\n          />\n        </Bar>\n      )}\n\n      {(() => {\n        if (filteredDisputes.length === 0 && filtersSelected)\n          return <NoFilterResults onClearFilters={handleOnClearAllFilters} />\n\n        if (errorLoading) {\n          return (\n            <ErrorLoading subject=\"dispute\" errors={[errorLoading.message]} />\n          )\n        }\n\n        if (loading) {\n          return <DisputesLoading />\n        }\n\n        if (disputes.length === 0) {\n          return myDisputeSelected ? <NoMyDisputes /> : <NoDisputes />\n        }\n\n        return (\n          <CardLayout columnWidthMin={30 * GU} rowHeight={272}>\n            {filteredDisputes.map(dispute => {\n              return (\n                <DisputeCard\n                  key={dispute.id}\n                  dispute={dispute}\n                  onSelectDispute={onSelectDispute}\n                />\n              )\n            })}\n          </CardLayout>\n        )\n      })()}\n    </div>\n  )\n}\n\nconst NoDisputes = () => {\n  const title = 'No disputes yet!'\n  return <MessageCard title={title} icon={noDataSvg} />\n}\n\nconst NoMyDisputes = () => {\n  const theme = useTheme()\n\n  const title = 'You havenâ€™t been drafted to arbitrate a dispute yet'\n  const paragraph = (\n    <span>\n      The more{' '}\n      <span\n        css={`\n          color: ${theme.help};\n        `}\n      >\n        DGC you activate\n      </span>\n      ,more chances you have to be drafted to arbitrate on-chain proposals\n    </span>\n  )\n\n  return <MessageCard title={title} paragraph={paragraph} icon={noDraftSvg} />\n}\n\nexport default DisputeList\n"]},"metadata":{},"sourceType":"module"}