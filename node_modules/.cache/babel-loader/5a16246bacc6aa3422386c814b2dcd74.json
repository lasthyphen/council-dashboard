{"ast":null,"code":"import _slicedToArray from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _styled14 from\"styled-components\";import _styled13 from\"styled-components\";import _styled12 from\"styled-components\";import _styled11 from\"styled-components\";import _styled10 from\"styled-components\";import _styled9 from\"styled-components\";import _styled8 from\"styled-components\";import _styled7 from\"styled-components\";import _styled6 from\"styled-components\";import _styled5 from\"styled-components\";import _styled4 from\"styled-components\";import _styled3 from\"styled-components\";import _styled2 from\"styled-components\";import _styled from\"styled-components\";import React,{useCallback,useMemo}from'react';import{Box,Button,GU,Help,Info,Link,textStyle,useTheme}from'@aragon/ui';import Loading from'../Loading';import NoRewards from'./NoRewards';import{useWallet}from'../../providers/Wallet';import{useCourtConfig}from'../../providers/CourtConfig';import useJurorSubscriptionFees from'../../hooks/useJurorSubscriptionFees';import{addressesEqual}from'../../lib/web3-utils';import{bigNum,formatTokenAmount}from'../../lib/math-utils';// anjRewards => ANJ => First settle with `onSettleReward()`, then withdraw\n// feeRewards => DAI =>  First settle with `onSettleReward()` or `onSettleAppealDeposit()`, then withdraw\n// subscriptions fees => DAI => Can be withdrawn directly from the CourtSubscription contract\n// Only after the rewards are settled can a juror withdraw them from the treasury (`onWithdraw()`)\n// As opposed to fee rewards, subscription fees are directly withdrawn to the juror's wallet when claimed\nvar RewardsModule=React.memo(function RewardsModule(_ref){var rewards=_ref.rewards,treasury=_ref.treasury,loading=_ref.loading,onClaimRewards=_ref.onClaimRewards;var wallet=useWallet();var _useCourtConfig=useCourtConfig(),feeToken=_useCourtConfig.feeToken;// Subscriptions are fetched directly from the subscriptions contract\nvar subscriptionFees=useJurorSubscriptionFees();var _ref2=rewards||{},anjRewards=_ref2.anjRewards,feeRewards=_ref2.feeRewards;var _useTotalFeeRewards=useTotalFeeRewards(feeRewards===null||feeRewards===void 0?void 0:feeRewards.arbitrableFees,feeRewards===null||feeRewards===void 0?void 0:feeRewards.appealFees,subscriptionFees),totalAppealFees=_useTotalFeeRewards.totalAppealFees,totalArbitrableFees=_useTotalFeeRewards.totalArbitrableFees,totalSettledFees=_useTotalFeeRewards.totalSettledFees,totalSubscriptionFees=_useTotalFeeRewards.totalSubscriptionFees;// We'll get the total juror's balance held in the treasury\n// TODO: feeToken can change over time, this means jurors could have multiple balances in the treasury (one for each fee token).\n//       - Handle potential multiple fee token balances\nvar treasuryToken=treasury===null||treasury===void 0?void 0:treasury.find(function(_ref3){var token=_ref3.token;return addressesEqual(token.id,feeToken.id);});var treasuryBalance=treasuryToken?treasuryToken.amount:bigNum(0);// Total dispute fees include appeal fees and arbitrable fees (fees paid by the creator of the dispute for the first round\n// and fees paid by appealers for subsequent rounds)\nvar totalDisputesFees=totalArbitrableFees.add(totalAppealFees);// All dispute fees are sent to the treasury after being settled\n// Note that the total dispute fees could include already settled fees so we must discount them from the total treasury fees\nvar totalTreasuryFees=totalDisputesFees.sub(totalSettledFees).add(treasuryBalance);var totalFeeRewards=totalTreasuryFees.add(totalSubscriptionFees);// Form submission\nvar handleFormSubmit=useCallback(function(event){event.preventDefault();if(!rewards)return;onClaimRewards(wallet.account,feeRewards.arbitrableFees,feeRewards.appealFees,totalTreasuryFees,subscriptionFees,feeToken.id);},[feeRewards,feeToken,onClaimRewards,rewards,subscriptionFees,totalTreasuryFees,wallet.account]);var hasRewardsToClaim=(anjRewards===null||anjRewards===void 0?void 0:anjRewards.gt(0))||totalFeeRewards.gt(0);var showHeading=!loading&&hasRewardsToClaim;return React.createElement(Box,{heading:showHeading&&'Rewards',padding:hasRewardsToClaim?0:3*GU},function(){if(loading){return React.createElement(Loading,{height:150,size:\"large\"});}if(!hasRewardsToClaim){return React.createElement(NoRewards,null);}return React.createElement(\"div\",null,rewards&&anjRewards.gt(0)&&React.createElement(ANJRewards,{amount:anjRewards}),totalFeeRewards.gt(0)&&React.createElement(FeeSection,null,React.createElement(\"form\",{onSubmit:handleFormSubmit},totalSubscriptionFees.gt(0)&&React.createElement(SubscriptionFeeRewards,{totalFees:totalSubscriptionFees}),totalDisputesFees.gt(0)&&React.createElement(DisputesFeeRewards,{totalAppealFees:totalAppealFees,totalArbitrableFees:totalArbitrableFees,distribution:feeRewards.distribution}),React.createElement(TotalFees,{totalFees:totalFeeRewards}))));}());});var ANJRewards=function ANJRewards(_ref4){var amount=_ref4.amount;var _useCourtConfig2=useCourtConfig(),anjToken=_useCourtConfig2.anjToken;var formattedAmount=formatTokenAmount(amount,true,anjToken.decimals,true);return React.createElement(FeeSection,null,React.createElement(_StyledRowFee,{label:\"Ruling fees\",amount:formattedAmount,symbol:anjToken.symbol,showPositive:true,_css:2*GU}),React.createElement(Info,null,\"This amount will be sent to your inactive wallet\"));};var _StyledDiv=_styled(\"div\").withConfig({displayName:\"RewardsModule___StyledDiv\",componentId:\"sc-98apz2-0\"})([\"display:flex;align-items:center;\"]);var _StyledSpan=_styled(\"span\").withConfig({displayName:\"RewardsModule___StyledSpan\",componentId:\"sc-98apz2-1\"})([\"color:\",\";margin-right:\",\"px;\"],function(p){return p._css4;},function(p){return p._css5;});var _StyledHelp=_styled(Help).withConfig({displayName:\"RewardsModule___StyledHelp\",componentId:\"sc-98apz2-2\"})([\"padding:0;\"]);var DisputesFeeRewards=function DisputesFeeRewards(_ref5){var distribution=_ref5.distribution,totalAppealFees=_ref5.totalAppealFees,totalArbitrableFees=_ref5.totalArbitrableFees;var theme=useTheme();var _useCourtConfig3=useCourtConfig(),feeToken=_useCourtConfig3.feeToken;var symbol=feeToken.symbol,decimals=feeToken.decimals;// Format total amounts\nvar totalArbitrableFormatted=formatTokenAmount(totalArbitrableFees,true,decimals,true);var totalAppealFormatted=formatTokenAmount(totalAppealFees,true,decimals,true);return React.createElement(React.Fragment,null,totalArbitrableFees.gt(0)&&React.createElement(_StyledRowFee2,{label:\"Dispute fees\",amount:totalArbitrableFormatted,symbol:symbol,showPositive:true,_css2:2*GU}),totalAppealFees.gt(0)&&React.createElement(_StyledRowFee3,{label:\"Appeal fees\",amount:totalAppealFormatted,symbol:symbol,showPositive:true,_css3:2*GU}),React.createElement(_StyledDiv,null,React.createElement(_StyledSpan,{_css4:theme.help,_css5:1*GU},\"Distribution\"),React.createElement(_StyledHelp,{hint:\"Rewards per dispute\"},React.createElement(DisputesFeeDistribution,{symbol:symbol,decimals:decimals,distribution:distribution}))));};function SubscriptionFeeRewards(_ref6){var totalFees=_ref6.totalFees;var _useCourtConfig4=useCourtConfig(),feeToken=_useCourtConfig4.feeToken;var formattedAmount=formatTokenAmount(totalFees,true,feeToken.decimals,true);return React.createElement(_StyledRowFee4,{label:\"Subscriptions\",amount:formattedAmount,symbol:feeToken.symbol,showPositive:true,_css6:2*GU});}var _StyledDiv2=_styled(\"div\").withConfig({displayName:\"RewardsModule___StyledDiv2\",componentId:\"sc-98apz2-3\"})([\"border-top:1px solid \",\";margin-top:\",\"px;padding-top:\",\"px;\"],function(p){return p._css7;},function(p){return p._css8;},function(p){return p._css9;});var _StyledButton=_styled(Button).withConfig({displayName:\"RewardsModule___StyledButton\",componentId:\"sc-98apz2-4\"})([\"margin-top:\",\"px;\"],function(p){return p._css10;});function TotalFees(_ref7){var totalFees=_ref7.totalFees;var theme=useTheme();var _useCourtConfig5=useCourtConfig(),feeToken=_useCourtConfig5.feeToken;var symbol=feeToken.symbol,decimals=feeToken.decimals;var totalFeesFormatted=formatTokenAmount(totalFees,true,decimals,true);return React.createElement(_StyledDiv2,{_css7:theme.border,_css8:2*GU,_css9:2*GU},React.createElement(RowFee,{label:\"Total rewards\",amount:totalFeesFormatted,symbol:symbol,showPositive:true}),React.createElement(_StyledButton,{mode:\"positive\",type:\"submit\",wide:true,_css10:2*GU},\"Claim rewards\"));}var _StyledH=_styled(\"h3\").withConfig({displayName:\"RewardsModule___StyledH\",componentId:\"sc-98apz2-5\"})([\"\",\";color:\",\";margin-bottom:\",\"px;\"],function(p){return p._css11;},function(p){return p._css12;},function(p){return p._css13;});var DisputesFeeDistribution=function DisputesFeeDistribution(_ref8){var distribution=_ref8.distribution,symbol=_ref8.symbol,decimals=_ref8.decimals;var theme=useTheme();return React.createElement(\"div\",null,React.createElement(_StyledH,{_css11:textStyle('label2'),_css12:theme.surfaceContentSecondary,_css13:2*GU},\"Rewards distribution per dispute\"),distribution.sort(function(d1,d2){return d1.disputeId-d2.disputeId;}).map(function(_ref9){var disputeId=_ref9.disputeId,amount=_ref9.amount;var formattedAmount=formatTokenAmount(amount,false,decimals);return React.createElement(_StyledRowFee5,{key:disputeId,label:React.createElement(Link,{href:\"#/disputes/\".concat(disputeId),external:false},\"Dispute #\".concat(disputeId)),isLabelLink:true,amount:formattedAmount,symbol:symbol,showPositive:false,_css14:textStyle('body2'),_css15:1*GU});}));};var _StyledDiv3=_styled(\"div\").withConfig({displayName:\"RewardsModule___StyledDiv3\",componentId:\"sc-98apz2-6\"})([\"display:flex;align-items:center;justify-content:space-between;&:last-child{margin-bottom:0;}\"]);var _StyledSpan2=_styled(\"span\").withConfig({displayName:\"RewardsModule___StyledSpan2\",componentId:\"sc-98apz2-7\"})([\"\",\";\"],function(p){return p._css16;});var RowFee=function RowFee(_ref10){var label=_ref10.label,isLabelLink=_ref10.isLabelLink,amount=_ref10.amount,symbol=_ref10.symbol,showPositive=_ref10.showPositive,props=_objectWithoutProperties(_ref10,[\"label\",\"isLabelLink\",\"amount\",\"symbol\",\"showPositive\"]);var theme=useTheme();return React.createElement(_StyledDiv3,props,isLabelLink?label:React.createElement(\"span\",null,label),React.createElement(_StyledSpan2,{_css16:showPositive&&\"color: \".concat(theme.positive)},amount,\" \",symbol));};var _StyledRowFee5=_styled(RowFee).withConfig({displayName:\"RewardsModule___StyledRowFee5\",componentId:\"sc-98apz2-8\"})([\"\",\";margin-bottom:\",\"px;\"],function(p){return p._css14;},function(p){return p._css15;});var _StyledRowFee4=_styled(RowFee).withConfig({displayName:\"RewardsModule___StyledRowFee4\",componentId:\"sc-98apz2-9\"})([\"margin-bottom:\",\"px;\"],function(p){return p._css6;});var _StyledRowFee3=_styled(RowFee).withConfig({displayName:\"RewardsModule___StyledRowFee3\",componentId:\"sc-98apz2-10\"})([\"margin-bottom:\",\"px;\"],function(p){return p._css3;});var _StyledRowFee2=_styled(RowFee).withConfig({displayName:\"RewardsModule___StyledRowFee2\",componentId:\"sc-98apz2-11\"})([\"margin-bottom:\",\"px;\"],function(p){return p._css2;});var _StyledRowFee=_styled(RowFee).withConfig({displayName:\"RewardsModule___StyledRowFee\",componentId:\"sc-98apz2-12\"})([\"margin-bottom:\",\"px;\"],function(p){return p._css;});var _StyledDiv4=_styled(\"div\").withConfig({displayName:\"RewardsModule___StyledDiv4\",componentId:\"sc-98apz2-13\"})([\"padding:\",\"px;&:not(:last-child){border-bottom:1px solid \",\";}\"],function(p){return p._css17;},function(p){return p._css18;});var FeeSection=function FeeSection(_ref11){var children=_ref11.children;var theme=useTheme();return React.createElement(_StyledDiv4,{_css17:3*GU,_css18:theme.border},children);};function getTotalFees(fees){var key=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'amount';return Array.isArray(fees)?fees.reduce(function(acc,fee){return acc.add(fee[key]);},bigNum(0)):bigNum(0);}function getTotalSettledFees(arbitrableFees,appealFees){return[arbitrableFees,appealFees].map(function(fees){return getTotalFees(fees,'settledAmount');}).reduce(function(acc,amount){return acc.add(amount);},bigNum(0));}var useTotalFeeRewards=function useTotalFeeRewards(){var arbitrableFees=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var appealFees=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];var subscriptionFees=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];return useMemo(function(){var _map=[arbitrableFees,appealFees,subscriptionFees].map(function(fees){return getTotalFees(fees);}),_map2=_slicedToArray(_map,3),totalArbitrableFees=_map2[0],totalAppealFees=_map2[1],totalSubscriptionFees=_map2[2];var totalSettledFees=getTotalSettledFees(arbitrableFees,appealFees);return{totalAppealFees:totalAppealFees,totalArbitrableFees:totalArbitrableFees,totalSettledFees:totalSettledFees,totalSubscriptionFees:totalSubscriptionFees};},[appealFees,arbitrableFees,subscriptionFees]);};export default RewardsModule;","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/Dashboard/RewardsModule.js"],"names":["React","useCallback","useMemo","Box","Button","GU","Help","Info","Link","textStyle","useTheme","Loading","NoRewards","useWallet","useCourtConfig","useJurorSubscriptionFees","addressesEqual","bigNum","formatTokenAmount","RewardsModule","memo","rewards","treasury","loading","onClaimRewards","wallet","feeToken","subscriptionFees","anjRewards","feeRewards","useTotalFeeRewards","arbitrableFees","appealFees","totalAppealFees","totalArbitrableFees","totalSettledFees","totalSubscriptionFees","treasuryToken","find","token","id","treasuryBalance","amount","totalDisputesFees","add","totalTreasuryFees","sub","totalFeeRewards","handleFormSubmit","event","preventDefault","account","hasRewardsToClaim","gt","showHeading","distribution","ANJRewards","anjToken","formattedAmount","decimals","symbol","DisputesFeeRewards","theme","totalArbitrableFormatted","totalAppealFormatted","help","SubscriptionFeeRewards","totalFees","TotalFees","totalFeesFormatted","border","DisputesFeeDistribution","surfaceContentSecondary","sort","d1","d2","disputeId","map","RowFee","label","isLabelLink","showPositive","props","positive","FeeSection","children","getTotalFees","fees","key","Array","isArray","reduce","acc","fee","getTotalSettledFees"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo } from 'react'\nimport {\n  Box,\n  Button,\n  GU,\n  Help,\n  Info,\n  Link,\n  textStyle,\n  useTheme,\n} from '@aragon/ui'\n\nimport Loading from '../Loading'\nimport NoRewards from './NoRewards'\n\nimport { useWallet } from '../../providers/Wallet'\nimport { useCourtConfig } from '../../providers/CourtConfig'\nimport useJurorSubscriptionFees from '../../hooks/useJurorSubscriptionFees'\n\nimport { addressesEqual } from '../../lib/web3-utils'\nimport { bigNum, formatTokenAmount } from '../../lib/math-utils'\n\n// anjRewards => ANJ => First settle with `onSettleReward()`, then withdraw\n// feeRewards => DAI =>  First settle with `onSettleReward()` or `onSettleAppealDeposit()`, then withdraw\n// subscriptions fees => DAI => Can be withdrawn directly from the CourtSubscription contract\n// Only after the rewards are settled can a juror withdraw them from the treasury (`onWithdraw()`)\n// As opposed to fee rewards, subscription fees are directly withdrawn to the juror's wallet when claimed\nconst RewardsModule = React.memo(function RewardsModule({\n  rewards,\n  treasury,\n  loading,\n  onClaimRewards,\n}) {\n  const wallet = useWallet()\n  const { feeToken } = useCourtConfig()\n\n  // Subscriptions are fetched directly from the subscriptions contract\n  const subscriptionFees = useJurorSubscriptionFees()\n  const { anjRewards, feeRewards } = rewards || {}\n\n  const {\n    totalAppealFees,\n    totalArbitrableFees,\n    totalSettledFees,\n    totalSubscriptionFees,\n  } = useTotalFeeRewards(\n    feeRewards?.arbitrableFees,\n    feeRewards?.appealFees,\n    subscriptionFees\n  )\n\n  // We'll get the total juror's balance held in the treasury\n  // TODO: feeToken can change over time, this means jurors could have multiple balances in the treasury (one for each fee token).\n  //       - Handle potential multiple fee token balances\n  const treasuryToken = treasury?.find(({ token }) =>\n    addressesEqual(token.id, feeToken.id)\n  )\n  const treasuryBalance = treasuryToken ? treasuryToken.amount : bigNum(0)\n\n  // Total dispute fees include appeal fees and arbitrable fees (fees paid by the creator of the dispute for the first round\n  // and fees paid by appealers for subsequent rounds)\n  const totalDisputesFees = totalArbitrableFees.add(totalAppealFees)\n\n  // All dispute fees are sent to the treasury after being settled\n  // Note that the total dispute fees could include already settled fees so we must discount them from the total treasury fees\n  const totalTreasuryFees = totalDisputesFees\n    .sub(totalSettledFees)\n    .add(treasuryBalance)\n  const totalFeeRewards = totalTreasuryFees.add(totalSubscriptionFees)\n\n  // Form submission\n  const handleFormSubmit = useCallback(\n    event => {\n      event.preventDefault()\n\n      if (!rewards) return\n\n      onClaimRewards(\n        wallet.account,\n        feeRewards.arbitrableFees,\n        feeRewards.appealFees,\n        totalTreasuryFees,\n        subscriptionFees,\n        feeToken.id\n      )\n    },\n    [\n      feeRewards,\n      feeToken,\n      onClaimRewards,\n      rewards,\n      subscriptionFees,\n      totalTreasuryFees,\n      wallet.account,\n    ]\n  )\n\n  const hasRewardsToClaim = anjRewards?.gt(0) || totalFeeRewards.gt(0)\n  const showHeading = !loading && hasRewardsToClaim\n\n  return (\n    <Box\n      heading={showHeading && 'Rewards'}\n      padding={hasRewardsToClaim ? 0 : 3 * GU}\n    >\n      {(() => {\n        if (loading) {\n          return <Loading height={150} size=\"large\" />\n        }\n\n        if (!hasRewardsToClaim) {\n          return <NoRewards />\n        }\n\n        return (\n          <div>\n            {rewards && anjRewards.gt(0) && <ANJRewards amount={anjRewards} />}\n            {totalFeeRewards.gt(0) && (\n              <FeeSection>\n                <form onSubmit={handleFormSubmit}>\n                  {totalSubscriptionFees.gt(0) && (\n                    <SubscriptionFeeRewards totalFees={totalSubscriptionFees} />\n                  )}\n                  {totalDisputesFees.gt(0) && (\n                    <DisputesFeeRewards\n                      totalAppealFees={totalAppealFees}\n                      totalArbitrableFees={totalArbitrableFees}\n                      distribution={feeRewards.distribution}\n                    />\n                  )}\n                  <TotalFees totalFees={totalFeeRewards} />\n                </form>\n              </FeeSection>\n            )}\n          </div>\n        )\n      })()}\n    </Box>\n  )\n})\n\nconst ANJRewards = ({ amount }) => {\n  const { anjToken } = useCourtConfig()\n\n  const formattedAmount = formatTokenAmount(\n    amount,\n    true,\n    anjToken.decimals,\n    true\n  )\n\n  return (\n    <FeeSection>\n      <RowFee\n        label=\"Ruling fees\"\n        amount={formattedAmount}\n        symbol={anjToken.symbol}\n        showPositive\n        css={`\n          margin-bottom: ${2 * GU}px;\n        `}\n      />\n      <Info>This amount will be sent to your inactive wallet</Info>\n    </FeeSection>\n  )\n}\n\nconst DisputesFeeRewards = ({\n  distribution,\n  totalAppealFees,\n  totalArbitrableFees,\n}) => {\n  const theme = useTheme()\n  const { feeToken } = useCourtConfig()\n  const { symbol, decimals } = feeToken\n\n  // Format total amounts\n  const totalArbitrableFormatted = formatTokenAmount(\n    totalArbitrableFees,\n    true,\n    decimals,\n    true\n  )\n  const totalAppealFormatted = formatTokenAmount(\n    totalAppealFees,\n    true,\n    decimals,\n    true\n  )\n\n  return (\n    <>\n      {totalArbitrableFees.gt(0) && (\n        <RowFee\n          label=\"Dispute fees\"\n          amount={totalArbitrableFormatted}\n          symbol={symbol}\n          showPositive\n          css={`\n            margin-bottom: ${2 * GU}px;\n          `}\n        />\n      )}\n      {totalAppealFees.gt(0) && (\n        <RowFee\n          label=\"Appeal fees\"\n          amount={totalAppealFormatted}\n          symbol={symbol}\n          showPositive\n          css={`\n            margin-bottom: ${2 * GU}px;\n          `}\n        />\n      )}\n      <div\n        css={`\n          display: flex;\n          align-items: center;\n        `}\n      >\n        <span\n          css={`\n            color: ${theme.help};\n            margin-right: ${1 * GU}px;\n          `}\n        >\n          Distribution\n        </span>\n        <Help\n          hint=\"Rewards per dispute\"\n          css={`\n            padding: 0;\n          `}\n        >\n          <DisputesFeeDistribution\n            symbol={symbol}\n            decimals={decimals}\n            distribution={distribution}\n          />\n        </Help>\n      </div>\n    </>\n  )\n}\n\nfunction SubscriptionFeeRewards({ totalFees }) {\n  const { feeToken } = useCourtConfig()\n  const formattedAmount = formatTokenAmount(\n    totalFees,\n    true,\n    feeToken.decimals,\n    true\n  )\n\n  return (\n    <RowFee\n      label=\"Subscriptions\"\n      amount={formattedAmount}\n      symbol={feeToken.symbol}\n      showPositive\n      css={`\n        margin-bottom: ${2 * GU}px;\n      `}\n    />\n  )\n}\n\nfunction TotalFees({ totalFees }) {\n  const theme = useTheme()\n  const { feeToken } = useCourtConfig()\n\n  const { symbol, decimals } = feeToken\n  const totalFeesFormatted = formatTokenAmount(totalFees, true, decimals, true)\n\n  return (\n    <div\n      css={`\n        border-top: 1px solid ${theme.border};\n        margin-top: ${2 * GU}px;\n        padding-top: ${2 * GU}px;\n      `}\n    >\n      <RowFee\n        label=\"Total rewards\"\n        amount={totalFeesFormatted}\n        symbol={symbol}\n        showPositive\n      />\n      <Button\n        mode=\"positive\"\n        type=\"submit\"\n        wide\n        css={`\n          margin-top: ${2 * GU}px;\n        `}\n      >\n        Claim rewards\n      </Button>\n    </div>\n  )\n}\n\nconst DisputesFeeDistribution = ({ distribution, symbol, decimals }) => {\n  const theme = useTheme()\n  return (\n    <div>\n      <h3\n        css={`\n          ${textStyle('label2')};\n          color: ${theme.surfaceContentSecondary};\n          margin-bottom: ${2 * GU}px;\n        `}\n      >\n        Rewards distribution per dispute\n      </h3>\n      {distribution\n        .sort((d1, d2) => d1.disputeId - d2.disputeId)\n        .map(({ disputeId, amount }) => {\n          const formattedAmount = formatTokenAmount(amount, false, decimals)\n\n          return (\n            <RowFee\n              key={disputeId}\n              css={`\n                ${textStyle('body2')};\n                margin-bottom: ${1 * GU}px;\n              `}\n              label={\n                <Link href={`#/disputes/${disputeId}`} external={false}>\n                  {`Dispute #${disputeId}`}\n                </Link>\n              }\n              isLabelLink\n              amount={formattedAmount}\n              symbol={symbol}\n              showPositive={false}\n            />\n          )\n        })}\n    </div>\n  )\n}\n\nconst RowFee = ({\n  label,\n  isLabelLink,\n  amount,\n  symbol,\n  showPositive,\n  ...props\n}) => {\n  const theme = useTheme()\n\n  return (\n    <div\n      css={`\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n\n        &:last-child {\n          margin-bottom: 0;\n        }\n      `}\n      {...props}\n    >\n      {isLabelLink ? label : <span>{label}</span>}\n\n      <span\n        css={`\n          ${showPositive && `color: ${theme.positive}`};\n        `}\n      >\n        {amount} {symbol}\n      </span>\n    </div>\n  )\n}\n\nconst FeeSection = ({ children }) => {\n  const theme = useTheme()\n  return (\n    <div\n      css={`\n        padding: ${3 * GU}px;\n\n        & :not(:last-child) {\n          border-bottom: 1px solid ${theme.border};\n        }\n      `}\n    >\n      {children}\n    </div>\n  )\n}\n\nfunction getTotalFees(fees, key = 'amount') {\n  return Array.isArray(fees)\n    ? fees.reduce((acc, fee) => acc.add(fee[key]), bigNum(0))\n    : bigNum(0)\n}\n\nfunction getTotalSettledFees(arbitrableFees, appealFees) {\n  return [arbitrableFees, appealFees]\n    .map(fees => getTotalFees(fees, 'settledAmount'))\n    .reduce((acc, amount) => acc.add(amount), bigNum(0))\n}\n\nconst useTotalFeeRewards = (\n  arbitrableFees = [],\n  appealFees = [],\n  subscriptionFees = []\n) => {\n  return useMemo(() => {\n    const [totalArbitrableFees, totalAppealFees, totalSubscriptionFees] = [\n      arbitrableFees,\n      appealFees,\n      subscriptionFees,\n    ].map(fees => getTotalFees(fees))\n\n    const totalSettledFees = getTotalSettledFees(arbitrableFees, appealFees)\n\n    return {\n      totalAppealFees,\n      totalArbitrableFees,\n      totalSettledFees,\n      totalSubscriptionFees,\n    }\n  }, [appealFees, arbitrableFees, subscriptionFees])\n}\n\nexport default RewardsModule\n"]},"metadata":{},"sourceType":"module"}