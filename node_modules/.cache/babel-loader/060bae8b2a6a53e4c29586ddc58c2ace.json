{"ast":null,"code":"import _slicedToArray from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _styled from\"styled-components\";import React,{useEffect,useCallback,useState}from'react';import{GU,Inside,useViewport,Modal}from'@aragon/ui';import{useWallet}from'../providers/Wallet';import{useSubscriptionDetails}from'../hooks/useEmailNotifications';import EmailNotificationsManager from'./EmailNotifications/EmailNotificationsManager';var _StyledModal=_styled(Modal).withConfig({displayName:\"EmailNotificationsLoader___StyledModal\",componentId:\"slq1yg-0\"})([\"z-index:4\"]);function EmailNotificationsLoader(_ref){var children=_ref.children;var _useViewport=useViewport(),width=_useViewport.width;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),modalVisible=_useState2[0],setModalVisible=_useState2[1];var wallet=useWallet();var _useSubscriptionDetai=useSubscriptionDetails(wallet.account),addressVerified=_useSubscriptionDetai.addressVerified,emailExists=_useSubscriptionDetai.emailExists,fetching=_useSubscriptionDetai.fetching;useEffect(function(){var visible=wallet.account&&!addressVerified;setModalVisible(visible);},[wallet.account,addressVerified]);var handleOnClose=useCallback(function(){setModalVisible(false);},[]);return React.createElement(React.Fragment,null,!fetching&&React.createElement(_StyledModal,{width:Math.min(76*GU,width-40),visible:modalVisible,onClose:handleOnClose},React.createElement(Inside,{name:\"NotificationsModal\"},React.createElement(EmailNotificationsManager,{emailExists:emailExists,addressVerified:addressVerified}))),children);}export default EmailNotificationsLoader;","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/EmailNotificationsLoader.js"],"names":["React","useEffect","useCallback","useState","GU","Inside","useViewport","Modal","useWallet","useSubscriptionDetails","EmailNotificationsManager","EmailNotificationsLoader","children","width","modalVisible","setModalVisible","wallet","account","addressVerified","emailExists","fetching","visible","handleOnClose","Math","min"],"mappings":"mKAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,WAA3B,CAAwCC,QAAxC,KAAwD,OAAxD,CACA,OAASC,EAAT,CAAaC,MAAb,CAAqBC,WAArB,CAAkCC,KAAlC,KAA+C,YAA/C,CACA,OAASC,SAAT,KAA0B,qBAA1B,CACA,OAASC,sBAAT,KAAuC,gCAAvC,CACA,MAAOC,CAAAA,yBAAP,KAAsC,gDAAtC,C,yIAEA,QAASC,CAAAA,wBAAT,MAAgD,IAAZC,CAAAA,QAAY,MAAZA,QAAY,kBAC5BN,WAAW,EADiB,CACtCO,KADsC,cACtCA,KADsC,eAENV,QAAQ,CAAC,KAAD,CAFF,wCAEvCW,YAFuC,eAEzBC,eAFyB,eAG9C,GAAMC,CAAAA,MAAM,CAAGR,SAAS,EAAxB,CAH8C,0BAIKC,sBAAsB,CACvEO,MAAM,CAACC,OADgE,CAJ3B,CAItCC,eAJsC,uBAItCA,eAJsC,CAIrBC,WAJqB,uBAIrBA,WAJqB,CAIRC,QAJQ,uBAIRA,QAJQ,CAQ9CnB,SAAS,CAAC,UAAM,CACd,GAAMoB,CAAAA,OAAO,CAAGL,MAAM,CAACC,OAAP,EAAkB,CAACC,eAAnC,CACAH,eAAe,CAACM,OAAD,CAAf,CACD,CAHQ,CAGN,CAACL,MAAM,CAACC,OAAR,CAAiBC,eAAjB,CAHM,CAAT,CAKA,GAAMI,CAAAA,aAAa,CAAGpB,WAAW,CAAC,UAAM,CACtCa,eAAe,CAAC,KAAD,CAAf,CACD,CAFgC,CAE9B,EAF8B,CAAjC,CAIA,MACE,qBAAC,KAAD,CAAO,QAAP,MACG,CAACK,QAAD,EACC,kCACE,KAAK,CAAEG,IAAI,CAACC,GAAL,CAAS,GAAKpB,EAAd,CAAkBS,KAAK,CAAG,EAA1B,CADT,CAEE,OAAO,CAAEC,YAFX,CAGE,OAAO,CAAEQ,aAHX,EAME,oBAAC,MAAD,EAAQ,IAAI,CAAC,oBAAb,EACE,oBAAC,yBAAD,EACE,WAAW,CAAEH,WADf,CAEE,eAAe,CAAED,eAFnB,EADF,CANF,CAFJ,CAgBGN,QAhBH,CADF,CAoBD,CAED,cAAeD,CAAAA,wBAAf","sourcesContent":["import React, { useEffect, useCallback, useState } from 'react'\nimport { GU, Inside, useViewport, Modal } from '@aragon/ui'\nimport { useWallet } from '../providers/Wallet'\nimport { useSubscriptionDetails } from '../hooks/useEmailNotifications'\nimport EmailNotificationsManager from './EmailNotifications/EmailNotificationsManager'\n\nfunction EmailNotificationsLoader({ children }) {\n  const { width } = useViewport()\n  const [modalVisible, setModalVisible] = useState(false)\n  const wallet = useWallet()\n  const { addressVerified, emailExists, fetching } = useSubscriptionDetails(\n    wallet.account\n  )\n\n  useEffect(() => {\n    const visible = wallet.account && !addressVerified\n    setModalVisible(visible)\n  }, [wallet.account, addressVerified])\n\n  const handleOnClose = useCallback(() => {\n    setModalVisible(false)\n  }, [])\n\n  return (\n    <React.Fragment>\n      {!fetching && (\n        <Modal\n          width={Math.min(76 * GU, width - 40)}\n          visible={modalVisible}\n          onClose={handleOnClose}\n          css=\"z-index: 4\"\n        >\n          <Inside name=\"NotificationsModal\">\n            <EmailNotificationsManager\n              emailExists={emailExists}\n              addressVerified={addressVerified}\n            />\n          </Inside>\n        </Modal>\n      )}\n      {children}\n    </React.Fragment>\n  )\n}\n\nexport default EmailNotificationsLoader\n"]},"metadata":{},"sourceType":"module"}