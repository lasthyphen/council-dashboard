{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n}), exports.default = void 0;\n\nvar _ethers = require(\"ethers\"),\n    _defaults = require(\"../../defaults\"); // From: https://github.com/danfinlay/eth-method-registry\n\n\nconst REGISTRY_LOOKUP_ABI = [\"function entries(bytes4) public view returns (string)\"],\n      REGISTRY_MAP = {\n  1: \"0x44691B39d1a75dC4E0A0346CBB15E310e6ED1E86\"\n}; // networkId -> registry address\n\nclass MethodRegistry {\n  constructor(opts = {}) {\n    this.provider = opts.provider || new _ethers.ethers.providers.WebSocketProvider(_defaults.DEFAULT_ETH_NODE), this.registryAddres = opts.registry || REGISTRY_MAP[opts.network];\n  }\n\n  async initRegistry() {\n    if (!this.registryAddres) throw new Error(\"No method registry found for the network.\");\n    this.registry = new _ethers.ethers.Contract(this.registryAddres, REGISTRY_LOOKUP_ABI, this.provider);\n  }\n\n  async lookup(sigBytes) {\n    return this.registry || (await this.initRegistry()), this.registry.entries(sigBytes);\n  }\n\n}\n\nexports.default = MethodRegistry;","map":null,"metadata":{},"sourceType":"script"}