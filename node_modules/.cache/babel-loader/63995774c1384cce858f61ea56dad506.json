{"ast":null,"code":"import _styled14 from \"styled-components\";\nimport _styled13 from \"styled-components\";\nimport _styled12 from \"styled-components\";\nimport _styled11 from \"styled-components\";\nimport _styled10 from \"styled-components\";\nimport _styled9 from \"styled-components\";\nimport _styled8 from \"styled-components\";\nimport _styled7 from \"styled-components\";\nimport _styled6 from \"styled-components\";\nimport _styled5 from \"styled-components\";\nimport _styled4 from \"styled-components\";\nimport _styled3 from \"styled-components\";\nimport _styled2 from \"styled-components\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/saleemfareed/oneds/court-dashboard/src/components/Disputes/panels/CommitPanel.js\";\nimport React, { useCallback, useRef, useState } from 'react';\nimport { Button, GU, IconCopy, IconDownload, Info, Link, Switch, TextInput, textStyle, useToast, useTheme } from '@aragon/ui';\nimport useOneTimeCode from '../../../hooks/useOneTimeCode';\nimport { useWallet } from '../../../providers/Wallet';\nimport IconOneTimeCode from \"../../../assets/IconOneTimeCode.svg\";\nimport { getVoteId, saveAutoRevealPreference } from '../../../utils/crvoting-utils';\n\nvar _StyledButton = _styled(Button).withConfig({\n  displayName: \"CommitPanel___StyledButton\",\n  componentId: \"a92zkh-0\"\n})([\"margin-top:\", \"px;\"], p => p._css);\n\nconst CommitPanel = React.memo(function CommitPanel({\n  dispute,\n  onCommit,\n  onDone,\n  outcome\n}) {\n  const [codeSaved, setCodeSaved] = useState(false);\n  const [codeCopied, setCodeCopied] = useState(false);\n  const [revealService, setRevealService] = useState(true);\n  const {\n    account: connectedAccount\n  } = useWallet();\n  const {\n    oneTimeCode,\n    download\n  } = useOneTimeCode();\n  const toast = useToast();\n  const handleCommit = useCallback(event => {\n    event.preventDefault();\n    saveAutoRevealPreference(connectedAccount, getVoteId(dispute.id, dispute.lastRoundId), revealService);\n    onDone();\n    return onCommit(connectedAccount, dispute.id, dispute.lastRoundId, outcome, oneTimeCode, revealService);\n  }, [connectedAccount, dispute.id, dispute.lastRoundId, onCommit, onDone, oneTimeCode, outcome, revealService]);\n  const handleDownloadCode = useCallback(() => {\n    download();\n    setCodeSaved(true);\n  }, [download]);\n  const handleCopyCode = useCallback(() => {\n    setCodeCopied(true);\n    toast('One-time-use code copied');\n  }, [toast]);\n  const handleRevealService = useCallback(checked => {\n    setRevealService(checked);\n    toast(checked ? 'Court auto-reveal service enabled' : 'Court auto-reveal service disabled');\n  }, [toast]);\n  return React.createElement(\"form\", {\n    onSubmit: handleCommit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(OneTimeCode, {\n    code: oneTimeCode,\n    onDownload: handleDownloadCode,\n    onCopy: handleCopyCode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(RevealService, {\n    onRevealServiceChange: handleRevealService,\n    revealService: revealService,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(InfoSection, {\n    commitEndTime: dispute.nextTransition,\n    copiedOrSaved: codeCopied || codeSaved,\n    revealService: revealService,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(_StyledButton, {\n    disabled: !(codeSaved || codeCopied),\n    onClick: handleCommit,\n    type: \"submit\",\n    mode: \"strong\",\n    wide: true,\n    _css: 2 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Commit your vote\"));\n});\n\nvar _StyledDiv = _styled(\"div\").withConfig({\n  displayName: \"CommitPanel___StyledDiv\",\n  componentId: \"a92zkh-1\"\n})([\"display:flex;\"]);\n\nvar _StyledDiv2 = _styled(\"div\").withConfig({\n  displayName: \"CommitPanel___StyledDiv2\",\n  componentId: \"a92zkh-2\"\n})([\"margin-left:\", \"px;\"], p => p._css2);\n\nvar _StyledH = _styled(\"h2\").withConfig({\n  displayName: \"CommitPanel___StyledH\",\n  componentId: \"a92zkh-3\"\n})([\"display:block;\", \";font-weight:600;\"], p => p._css3);\n\nvar _StyledSpan = _styled(\"span\").withConfig({\n  displayName: \"CommitPanel___StyledSpan\",\n  componentId: \"a92zkh-4\"\n})([\"display:block;\", \";margin-top:\", \"px;\"], p => p._css4, p => p._css5);\n\nvar _StyledDiv3 = _styled(\"div\").withConfig({\n  displayName: \"CommitPanel___StyledDiv3\",\n  componentId: \"a92zkh-5\"\n})([\"margin-top:\", \"px;\"], p => p._css6);\n\nvar _StyledTextInput = _styled(TextInput).withConfig({\n  displayName: \"CommitPanel___StyledTextInput\",\n  componentId: \"a92zkh-6\"\n})([\"height:\", \"px;padding:\", \"px \", \"px;\", \";font-weight:600;resize:none;&:read-only{color:\", \";}\"], p => p._css7, p => p._css8, p => p._css9, p => p._css10, p => p._css11);\n\nvar _StyledDiv4 = _styled(\"div\").withConfig({\n  displayName: \"CommitPanel___StyledDiv4\",\n  componentId: \"a92zkh-7\"\n})([\"margin-top:\", \"px;display:flex;\"], p => p._css12);\n\nvar _StyledButton2 = _styled(Button).withConfig({\n  displayName: \"CommitPanel___StyledButton2\",\n  componentId: \"a92zkh-8\"\n})([\"margin-right:\", \"px;flex-grow:1;\"], p => p._css13);\n\nvar _StyledButton3 = _styled(Button).withConfig({\n  displayName: \"CommitPanel___StyledButton3\",\n  componentId: \"a92zkh-9\"\n})([\"flex-grow:1;\"]);\n\nconst OneTimeCode = React.memo(function OneTimeCode({\n  code,\n  onDownload,\n  onCopy\n}) {\n  const theme = useTheme();\n  const inputRef = useRef(null);\n  const handleInputFocus = useCallback(event => event.target.select(), []);\n  const handleCopy = useCallback(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n\n      try {\n        document.execCommand('copy');\n        onCopy();\n      } catch (err) {\n        console.error('Error copying the one-time-use code');\n      }\n    }\n  }, [onCopy]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(_StyledDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    height: 6 * GU,\n    src: IconOneTimeCode,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), React.createElement(_StyledDiv2, {\n    _css2: 2 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(_StyledH, {\n    _css3: textStyle('body2'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"One-time-use code\"), React.createElement(_StyledSpan, {\n    _css4: textStyle('body2'),\n    _css5: 1 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"Please save the code displayed below for maximum security.\"))), React.createElement(_StyledDiv3, {\n    _css6: 2 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(_StyledTextInput, {\n    ref: inputRef,\n    onFocus: handleInputFocus,\n    multiline: true,\n    readOnly: true,\n    value: code,\n    wide: true,\n    _css7: 10 * GU,\n    _css8: 1.5 * GU,\n    _css9: 2 * GU,\n    _css10: textStyle('body1'),\n    _css11: theme.accent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  })), React.createElement(_StyledDiv4, {\n    _css12: 2 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(_StyledButton2, {\n    onClick: onDownload,\n    icon: React.createElement(IconDownload, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }),\n    label: \"Download\",\n    _css13: 2 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }), React.createElement(_StyledButton3, {\n    onClick: handleCopy,\n    icon: React.createElement(IconCopy, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }),\n    label: \"Copy\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  })));\n});\n\nvar _StyledDiv5 = _styled(\"div\").withConfig({\n  displayName: \"CommitPanel___StyledDiv5\",\n  componentId: \"a92zkh-10\"\n})([\"display:flex;margin-top:\", \"px;align-items:center;\"], p => p._css14);\n\nvar _StyledSpan2 = _styled(\"span\").withConfig({\n  displayName: \"CommitPanel___StyledSpan2\",\n  componentId: \"a92zkh-11\"\n})([\"margin-left:\", \"px;\", \";\"], p => p._css15, p => p._css16);\n\nvar _StyledDiv6 = _styled(\"div\").withConfig({\n  displayName: \"CommitPanel___StyledDiv6\",\n  componentId: \"a92zkh-12\"\n})([\"margin-top:\", \"px;\", \";\"], p => p._css17, p => p._css18);\n\nconst RevealService = React.memo(function RevealService({\n  onRevealServiceChange,\n  revealService\n}) {\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, React.createElement(_StyledDiv5, {\n    _css14: 4 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    checked: revealService,\n    onChange: onRevealServiceChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }), React.createElement(_StyledSpan2, {\n    _css15: 2 * GU,\n    _css16: textStyle('body1'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, \"Auto-reveal service.\")), React.createElement(_StyledDiv6, {\n    _css17: 1 * GU,\n    _css18: textStyle('body2'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, \"By enabling this feature you trust Aragon One to reveal your vote on your behalf in this and following disputes. You can always turn off this service later if you choose.\", React.createElement(Link, {\n    href: \"https://help.aragon.org/article/43-dispute-lifecycle#onetime\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, \"Learn more\"), \".\"));\n});\n\nvar _StyledInfo = _styled(Info).withConfig({\n  displayName: \"CommitPanel___StyledInfo\",\n  componentId: \"a92zkh-13\"\n})([\"margin-top:\", \"px;\"], p => p._css19);\n\nconst InfoSection = React.memo(function InfoSection({\n  revealService\n}) {\n  const content = revealService ? `As a safety measure, you must copy or download this code before you can\n       commit your vote. This code is valid for revealing your vote for this\n       dispute only. You won’t be required to enter this code unless a problem\n       occurs with our services.` : `You must copy or download this code before you can commit your vote. You\n       will later be asked to provide this same code to reveal your vote.\n       Failure to provide the correct code will result in a monetary penalty to\n       your account.`;\n  return React.createElement(_StyledInfo, {\n    title: !revealService && 'Action requirement',\n    mode: revealService ? 'info' : 'warning',\n    _css19: 2 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }, content);\n});\nexport default CommitPanel;","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/Disputes/panels/CommitPanel.js"],"names":["React","useCallback","useRef","useState","Button","GU","IconCopy","IconDownload","Info","Link","Switch","TextInput","textStyle","useToast","useTheme","useOneTimeCode","useWallet","getVoteId","saveAutoRevealPreference","CommitPanel","memo","dispute","onCommit","onDone","outcome","codeSaved","setCodeSaved","codeCopied","setCodeCopied","revealService","setRevealService","account","connectedAccount","oneTimeCode","download","toast","handleCommit","event","preventDefault","id","lastRoundId","handleDownloadCode","handleCopyCode","handleRevealService","checked","nextTransition","OneTimeCode","code","onDownload","onCopy","theme","inputRef","handleInputFocus","target","select","handleCopy","current","focus","document","execCommand","err","console","error","IconOneTimeCode","accent","RevealService","onRevealServiceChange","InfoSection","content"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef, useState } from 'react'\nimport {\n  Button,\n  GU,\n  IconCopy,\n  IconDownload,\n  Info,\n  Link,\n  Switch,\n  TextInput,\n  textStyle,\n  useToast,\n  useTheme,\n} from '@aragon/ui'\nimport useOneTimeCode from '../../../hooks/useOneTimeCode'\nimport { useWallet } from '../../../providers/Wallet'\nimport IconOneTimeCode from '../../../assets/IconOneTimeCode.svg'\nimport {\n  getVoteId,\n  saveAutoRevealPreference,\n} from '../../../utils/crvoting-utils'\n\nconst CommitPanel = React.memo(function CommitPanel({\n  dispute,\n  onCommit,\n  onDone,\n  outcome,\n}) {\n  const [codeSaved, setCodeSaved] = useState(false)\n  const [codeCopied, setCodeCopied] = useState(false)\n  const [revealService, setRevealService] = useState(true)\n  const { account: connectedAccount } = useWallet()\n  const { oneTimeCode, download } = useOneTimeCode()\n  const toast = useToast()\n\n  const handleCommit = useCallback(\n    event => {\n      event.preventDefault()\n      saveAutoRevealPreference(\n        connectedAccount,\n        getVoteId(dispute.id, dispute.lastRoundId),\n        revealService\n      )\n\n      onDone()\n      return onCommit(\n        connectedAccount,\n        dispute.id,\n        dispute.lastRoundId,\n        outcome,\n        oneTimeCode,\n        revealService\n      )\n    },\n    [\n      connectedAccount,\n      dispute.id,\n      dispute.lastRoundId,\n      onCommit,\n      onDone,\n      oneTimeCode,\n      outcome,\n      revealService,\n    ]\n  )\n\n  const handleDownloadCode = useCallback(() => {\n    download()\n    setCodeSaved(true)\n  }, [download])\n\n  const handleCopyCode = useCallback(() => {\n    setCodeCopied(true)\n    toast('One-time-use code copied')\n  }, [toast])\n\n  const handleRevealService = useCallback(\n    checked => {\n      setRevealService(checked)\n      toast(\n        checked\n          ? 'Court auto-reveal service enabled'\n          : 'Court auto-reveal service disabled'\n      )\n    },\n    [toast]\n  )\n\n  return (\n    <form onSubmit={handleCommit}>\n      <OneTimeCode\n        code={oneTimeCode}\n        onDownload={handleDownloadCode}\n        onCopy={handleCopyCode}\n      />\n      <RevealService\n        onRevealServiceChange={handleRevealService}\n        revealService={revealService}\n      />\n      <InfoSection\n        commitEndTime={dispute.nextTransition}\n        copiedOrSaved={codeCopied || codeSaved}\n        revealService={revealService}\n      />\n      <Button\n        css={`\n          margin-top: ${2 * GU}px;\n        `}\n        disabled={!(codeSaved || codeCopied)}\n        onClick={handleCommit}\n        type=\"submit\"\n        mode=\"strong\"\n        wide\n      >\n        Commit your vote\n      </Button>\n    </form>\n  )\n})\n\nconst OneTimeCode = React.memo(function OneTimeCode({\n  code,\n  onDownload,\n  onCopy,\n}) {\n  const theme = useTheme()\n  const inputRef = useRef(null)\n\n  const handleInputFocus = useCallback(event => event.target.select(), [])\n\n  const handleCopy = useCallback(() => {\n    if (inputRef.current) {\n      inputRef.current.focus()\n\n      try {\n        document.execCommand('copy')\n        onCopy()\n      } catch (err) {\n        console.error('Error copying the one-time-use code')\n      }\n    }\n  }, [onCopy])\n\n  return (\n    <React.Fragment>\n      <div\n        css={`\n          display: flex;\n        `}\n      >\n        <img height={6 * GU} src={IconOneTimeCode} alt=\"\" />\n        <div\n          css={`\n            margin-left: ${2 * GU}px;\n          `}\n        >\n          <h2\n            css={`\n              display: block;\n              ${textStyle('body2')};\n              font-weight: 600;\n            `}\n          >\n            One-time-use code\n          </h2>\n          <span\n            css={`\n              display: block;\n              ${textStyle('body2')};\n              margin-top: ${1 * GU}px;\n            `}\n          >\n            Please save the code displayed below for maximum security.\n          </span>\n        </div>\n      </div>\n      <div\n        css={`\n          margin-top: ${2 * GU}px;\n        `}\n      >\n        <TextInput\n          ref={inputRef}\n          onFocus={handleInputFocus}\n          multiline\n          readOnly\n          value={code}\n          wide\n          css={`\n            height: ${10 * GU}px;\n            padding: ${1.5 * GU}px ${2 * GU}px;\n            ${textStyle('body1')};\n            font-weight: 600;\n            resize: none;\n            &:read-only {\n              color: ${theme.accent};\n            }\n          `}\n        />\n      </div>\n      <div\n        css={`\n          margin-top: ${2 * GU}px;\n          display: flex;\n        `}\n      >\n        <Button\n          css={`\n            margin-right: ${2 * GU}px;\n            flex-grow: 1;\n          `}\n          onClick={onDownload}\n          icon={<IconDownload />}\n          label=\"Download\"\n        />\n        <Button\n          css={`\n            flex-grow: 1;\n          `}\n          onClick={handleCopy}\n          icon={<IconCopy />}\n          label=\"Copy\"\n        />\n      </div>\n    </React.Fragment>\n  )\n})\n\nconst RevealService = React.memo(function RevealService({\n  onRevealServiceChange,\n  revealService,\n}) {\n  return (\n    <React.Fragment>\n      <div\n        css={`\n          display: flex;\n          margin-top: ${4 * GU}px;\n          align-items: center;\n        `}\n      >\n        <Switch checked={revealService} onChange={onRevealServiceChange} />\n        <span\n          css={`\n            margin-left: ${2 * GU}px;\n            ${textStyle('body1')};\n          `}\n        >\n          Auto-reveal service.\n        </span>\n      </div>\n      <div\n        css={`\n          margin-top: ${1 * GU}px;\n          ${textStyle('body2')};\n        `}\n      >\n        By enabling this feature you trust Aragon One to reveal your vote on\n        your behalf in this and following disputes. You can always turn off this\n        service later if you choose.\n        <Link href=\"https://help.aragon.org/article/43-dispute-lifecycle#onetime\">\n          Learn more\n        </Link>\n        .\n      </div>\n    </React.Fragment>\n  )\n})\n\nconst InfoSection = React.memo(function InfoSection({ revealService }) {\n  const content = revealService\n    ? `As a safety measure, you must copy or download this code before you can\n       commit your vote. This code is valid for revealing your vote for this\n       dispute only. You won’t be required to enter this code unless a problem\n       occurs with our services.`\n    : `You must copy or download this code before you can commit your vote. You\n       will later be asked to provide this same code to reveal your vote.\n       Failure to provide the correct code will result in a monetary penalty to\n       your account.`\n\n  return (\n    <Info\n      css={`\n        margin-top: ${2 * GU}px;\n      `}\n      title={!revealService && 'Action requirement'}\n      mode={revealService ? 'info' : 'warning'}\n    >\n      {content}\n    </Info>\n  )\n})\n\nexport default CommitPanel\n"]},"metadata":{},"sourceType":"module"}