{"ast":null,"code":"import _objectSpread from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{toMs}from'./date-utils';import{bigNum}from'../lib/math-utils';export function transformSubscriptionModuleDataAttributes(subscriptionModule){return _objectSpread({},subscriptionModule,{currentPeriod:parseInt(subscriptionModule.currentPeriod,10),feeAmount:bigNum(subscriptionModule.feeAmount),periodDuration:toMs(parseInt(subscriptionModule.periodDuration)),periods:subscriptionModule.periods.map(function(period){return _objectSpread({},period,{id:parseInt(period.id,10),totalActiveBalance:period.totalActiveBalance,collectedFees:bigNum(period.collectedFees)});})});}export function transformClaimedFeesDataAttributes(claimedFee){return _objectSpread({},claimedFee,{period:{id:parseInt(claimedFee.period.id,10)}});}export function hasJurorClaimed(claimedFees,periodId){return claimedFees.some(function(claimedFee){return claimedFee.period.id===periodId;});}","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/utils/subscription-utils.js"],"names":["toMs","bigNum","transformSubscriptionModuleDataAttributes","subscriptionModule","currentPeriod","parseInt","feeAmount","periodDuration","periods","map","period","id","totalActiveBalance","collectedFees","transformClaimedFeesDataAttributes","claimedFee","hasJurorClaimed","claimedFees","periodId","some"],"mappings":"2HAAA,OAASA,IAAT,KAAqB,cAArB,CACA,OAASC,MAAT,KAAuB,mBAAvB,CAEA,MAAO,SAASC,CAAAA,yCAAT,CAAmDC,kBAAnD,CAAuE,CAC5E,wBACKA,kBADL,EAEEC,aAAa,CAAEC,QAAQ,CAACF,kBAAkB,CAACC,aAApB,CAAmC,EAAnC,CAFzB,CAGEE,SAAS,CAAEL,MAAM,CAACE,kBAAkB,CAACG,SAApB,CAHnB,CAIEC,cAAc,CAAEP,IAAI,CAACK,QAAQ,CAACF,kBAAkB,CAACI,cAApB,CAAT,CAJtB,CAKEC,OAAO,CAAEL,kBAAkB,CAACK,OAAnB,CAA2BC,GAA3B,CAA+B,SAAAC,MAAM,0BACzCA,MADyC,EAE5CC,EAAE,CAAEN,QAAQ,CAACK,MAAM,CAACC,EAAR,CAAY,EAAZ,CAFgC,CAG5CC,kBAAkB,CAAEF,MAAM,CAACE,kBAHiB,CAI5CC,aAAa,CAAEZ,MAAM,CAACS,MAAM,CAACG,aAAR,CAJuB,IAArC,CALX,GAYD,CAED,MAAO,SAASC,CAAAA,kCAAT,CAA4CC,UAA5C,CAAwD,CAC7D,wBACKA,UADL,EAEEL,MAAM,CAAE,CACNC,EAAE,CAAEN,QAAQ,CAACU,UAAU,CAACL,MAAX,CAAkBC,EAAnB,CAAuB,EAAvB,CADN,CAFV,GAMD,CAED,MAAO,SAASK,CAAAA,eAAT,CAAyBC,WAAzB,CAAsCC,QAAtC,CAAgD,CACrD,MAAOD,CAAAA,WAAW,CAACE,IAAZ,CAAiB,SAAAJ,UAAU,QAAIA,CAAAA,UAAU,CAACL,MAAX,CAAkBC,EAAlB,GAAyBO,QAA7B,EAA3B,CAAP,CACD","sourcesContent":["import { toMs } from './date-utils'\nimport { bigNum } from '../lib/math-utils'\n\nexport function transformSubscriptionModuleDataAttributes(subscriptionModule) {\n  return {\n    ...subscriptionModule,\n    currentPeriod: parseInt(subscriptionModule.currentPeriod, 10),\n    feeAmount: bigNum(subscriptionModule.feeAmount),\n    periodDuration: toMs(parseInt(subscriptionModule.periodDuration)),\n    periods: subscriptionModule.periods.map(period => ({\n      ...period,\n      id: parseInt(period.id, 10),\n      totalActiveBalance: period.totalActiveBalance,\n      collectedFees: bigNum(period.collectedFees),\n    })),\n  }\n}\n\nexport function transformClaimedFeesDataAttributes(claimedFee) {\n  return {\n    ...claimedFee,\n    period: {\n      id: parseInt(claimedFee.period.id, 10),\n    },\n  }\n}\n\nexport function hasJurorClaimed(claimedFees, periodId) {\n  return claimedFees.some(claimedFee => claimedFee.period.id === periodId)\n}\n"]},"metadata":{},"sourceType":"module"}