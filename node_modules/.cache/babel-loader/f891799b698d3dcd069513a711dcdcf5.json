{"ast":null,"code":"import _styled13 from \"styled-components\";\nimport _styled12 from \"styled-components\";\nimport _styled11 from \"styled-components\";\nimport _styled10 from \"styled-components\";\nimport _styled9 from \"styled-components\";\nimport _styled8 from \"styled-components\";\nimport _styled7 from \"styled-components\";\nimport _styled6 from \"styled-components\";\nimport _styled5 from \"styled-components\";\nimport _styled4 from \"styled-components\";\nimport _styled3 from \"styled-components\";\nimport _styled2 from \"styled-components\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/saleemfareed/oneds/court-dashboard/src/components/Disputes/DisputeTimeline.js\";\nimport React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport { Accordion, GU, textStyle, useTheme, Timer } from '@aragon/ui';\nimport DisputeOutcomeText from './DisputeOutcomeText';\nimport DisputeRoundPill from './DisputeRoundPill';\nimport Step from '../Step';\nimport Stepper from '../Stepper';\nimport { IconFlag, IconFolder, IconGavelNoFill, IconRewards, IconRuling, IconThinking, IconUsers, IconVoting } from '../../utils/dispute-icons';\nimport { Phase as DisputePhase, getPhaseStringForStatus } from '../../types/dispute-status-types';\nimport { dateFormat } from '../../utils/date-utils';\nimport useDisputeTimeline from '../../hooks/useDisputeTimeline';\n\nvar _StyledDiv = styled(\"div\").withConfig({\n  displayName: \"DisputeTimeline___StyledDiv\",\n  componentId: \"sc-1enj16q-0\"\n})([\"width:100%;\"]);\n\nvar _StyledDiv2 = styled(\"div\").withConfig({\n  displayName: \"DisputeTimeline___StyledDiv2\",\n  componentId: \"sc-1enj16q-1\"\n})([\"display:flex;align-items:center;\"]);\n\nvar _StyledImg = styled(\"img\").withConfig({\n  displayName: \"DisputeTimeline___StyledImg\",\n  componentId: \"sc-1enj16q-2\"\n})([\"margin-right:\", \"px;\"], p => p._css);\n\nvar _StyledStepper = styled(Stepper).withConfig({\n  displayName: \"DisputeTimeline___StyledStepper\",\n  componentId: \"sc-1enj16q-3\"\n})([\"padding:\", \"px 0;\"], p => p._css2);\n\nconst Timeline = React.memo(function Timeline({\n  timeline\n}) {\n  const theme = useTheme();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Stepper, {\n    lineColor: theme.accent.alpha(0.3),\n    lineTop: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, timeline.map((item, index) => {\n    if (!Array.isArray(item)) {\n      return React.createElement(ItemStep, {\n        key: index,\n        item: item,\n        index: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      });\n    }\n\n    return item.map((round, roundIndex) => {\n      if (roundIndex === 0) {\n        return round.map((roundItem, phaseIndex) => React.createElement(ItemStep, {\n          key: phaseIndex,\n          item: roundItem,\n          index: phaseIndex,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(Step, {\n        key: roundIndex,\n        active: false,\n        content: React.createElement(_StyledDiv, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(StyledAccordion, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(Accordion, {\n          key: roundIndex,\n          items: [[React.createElement(_StyledDiv2, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, React.createElement(_StyledImg, {\n            alt: 18,\n            src: IconGavelNoFill,\n            _css: 1 * GU,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }), React.createElement(DisputeRoundPill, {\n            roundId: round[0].roundId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          })), React.createElement(_StyledStepper, {\n            lineColor: theme.accent.alpha(0.3),\n            lineTop: 12,\n            _css2: 3 * GU,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }, round.map((roundItem, phaseIndex) => React.createElement(ItemStep, {\n            key: phaseIndex,\n            item: roundItem,\n            index: phaseIndex,\n            roundStepContainer: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          })))]],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }))),\n        displayPoint: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      });\n    });\n  })));\n});\n\nvar _StyledDiv3 = styled(\"div\").withConfig({\n  displayName: \"DisputeTimeline___StyledDiv3\",\n  componentId: \"sc-1enj16q-4\"\n})([\"background:\", \";border-radius:80%;position:relative;z-index:1;display:inline-flex;\"], p => p._css3);\n\nvar _StyledSpan = styled(\"span\").withConfig({\n  displayName: \"DisputeTimeline___StyledSpan\",\n  componentId: \"sc-1enj16q-5\"\n})([\"\", \"\"], p => p._css4);\n\nvar _StyledSpan2 = styled(\"span\").withConfig({\n  displayName: \"DisputeTimeline___StyledSpan2\",\n  componentId: \"sc-1enj16q-6\"\n})([\"color:\", \";opacity:0.6;\"], p => p._css5);\n\nvar _StyledStep = styled(Step).withConfig({\n  displayName: \"DisputeTimeline___StyledStep\",\n  componentId: \"sc-1enj16q-7\"\n})([\"\", \"\"], p => p._css6);\n\nfunction ItemStep({\n  item,\n  index,\n  roundStepContainer\n}) {\n  const theme = useTheme();\n  return React.createElement(_StyledStep, {\n    key: index,\n    active: item.active,\n    stepPoint: React.createElement(_StyledDiv3, {\n      _css3: item.active ? 'linear-gradient(51.69deg, #FFB36D -0.55%, #FF8888 88.44%)' : '#FFE2D7',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(PhaseIcon, {\n      phase: item.phase,\n      active: item.active,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })),\n    content: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(_StyledSpan, {\n      _css4: textStyle('body1'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, getPhaseStringForStatus(item.phase, item.active))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(_StyledSpan2, {\n      _css5: theme.surfaceContentSecondary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(DisplayTime, {\n      item: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }))), item.active && React.createElement(DisputeRoundPill, {\n      roundId: item.roundId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), item.showOutcome && React.createElement(Outcome, {\n      outcome: item.outcome,\n      phase: item.phase,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }))),\n    displayPoint: true,\n    _css6: roundStepContainer ? 'margin-left: 0px;' : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  });\n}\n\nvar _StyledDiv4 = styled(\"div\").withConfig({\n  displayName: \"DisputeTimeline___StyledDiv4\",\n  componentId: \"sc-1enj16q-8\"\n})([\"position:relative;\"]);\n\nvar _StyledDiv5 = styled(\"div\").withConfig({\n  displayName: \"DisputeTimeline___StyledDiv5\",\n  componentId: \"sc-1enj16q-9\"\n})([\"margin-top:\", \"px;\"], p => p._css7);\n\nvar _StyledSpan3 = styled(\"span\").withConfig({\n  displayName: \"DisputeTimeline___StyledSpan3\",\n  componentId: \"sc-1enj16q-10\"\n})([\"\", \" color:\", \";text-transform:uppercase;\"], p => p._css8, p => p._css9);\n\nfunction Outcome({\n  outcome,\n  phase\n}) {\n  const theme = useTheme();\n  const title = phase && phase === DisputePhase.RevealVote ? 'Jury outcome' : 'Outcome';\n  return React.createElement(_StyledDiv4, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(OutcomePoint, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }), React.createElement(_StyledDiv5, {\n    _css7: 1 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(_StyledSpan3, {\n    _css8: textStyle('body3'),\n    _css9: theme.surfaceContentSecondary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, title)), React.createElement(DisputeOutcomeText, {\n    outcome: outcome,\n    phase: phase,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }));\n}\n\nfunction PhaseIcon({\n  phase,\n  active\n}) {\n  const icon = useMemo(() => {\n    if (phase === DisputePhase.Created || phase === DisputePhase.NotStarted) {\n      return IconFlag;\n    }\n\n    if (phase === DisputePhase.Evidence) {\n      return IconFolder;\n    }\n\n    if (phase === DisputePhase.JuryDrafting) {\n      return IconUsers;\n    }\n\n    if (phase === DisputePhase.VotingPeriod || phase === DisputePhase.RevealVote) {\n      return IconVoting;\n    }\n\n    if (phase === DisputePhase.AppealRuling || phase === DisputePhase.ConfirmAppeal) {\n      return IconThinking;\n    }\n\n    if (phase === DisputePhase.ExecuteRuling) {\n      return IconRuling;\n    }\n\n    return IconRewards;\n  }, [phase]);\n  return React.createElement(\"img\", {\n    src: active ? icon.active : icon.inactive,\n    width: 6 * GU,\n    height: 6 * GU,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  });\n}\n\nfunction DisplayTime({\n  item\n}) {\n  const {\n    endTime,\n    active\n  } = item;\n\n  if (active) {\n    if (!endTime) {\n      return 'ANY TIME';\n    }\n\n    return React.createElement(Timer, {\n      end: new Date(endTime),\n      maxUnits: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(React.Fragment, null, dateFormat(endTime, 'onlyDate'));\n}\n\nvar _StyledDiv6 = styled(\"div\").withConfig({\n  displayName: \"DisputeTimeline___StyledDiv6\",\n  componentId: \"sc-1enj16q-11\"\n})([\"position:absolute;top:5px;left:-44px;width:16px;height:16px;display:flex;align-items:center;justify-content:center;background:#fef3f1;border-radius:50%;\"]);\n\nvar _StyledDiv7 = styled(\"div\").withConfig({\n  displayName: \"DisputeTimeline___StyledDiv7\",\n  componentId: \"sc-1enj16q-12\"\n})([\"width:6px;height:6px;background:\", \";border-radius:50%;\"], p => p._css10);\n\nfunction OutcomePoint() {\n  const theme = useTheme();\n  return React.createElement(_StyledDiv6, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, React.createElement(_StyledDiv7, {\n    _css10: theme.accent.alpha(0.3),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }));\n}\n\nconst StyledAccordion = styled.div.withConfig({\n  displayName: \"DisputeTimeline__StyledAccordion\",\n  componentId: \"sc-1enj16q-13\"\n})([\"padding:0;& > div:first-child{border-radius:0px;border-left:0;border-right:0;}&::after{height:0px !important;width:0px !important;}\"]);\nexport default function DisputeTimeline({\n  dispute\n}) {\n  const disputeTimeLine = useDisputeTimeline(dispute);\n  return React.createElement(Timeline, {\n    timeline: disputeTimeLine,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/Disputes/DisputeTimeline.js"],"names":["React","useMemo","styled","Accordion","GU","textStyle","useTheme","Timer","DisputeOutcomeText","DisputeRoundPill","Step","Stepper","IconFlag","IconFolder","IconGavelNoFill","IconRewards","IconRuling","IconThinking","IconUsers","IconVoting","Phase","DisputePhase","getPhaseStringForStatus","dateFormat","useDisputeTimeline","Timeline","memo","timeline","theme","accent","alpha","map","item","index","Array","isArray","round","roundIndex","roundItem","phaseIndex","roundId","ItemStep","roundStepContainer","active","phase","surfaceContentSecondary","showOutcome","outcome","Outcome","title","RevealVote","PhaseIcon","icon","Created","NotStarted","Evidence","JuryDrafting","VotingPeriod","AppealRuling","ConfirmAppeal","ExecuteRuling","inactive","DisplayTime","endTime","Date","OutcomePoint","StyledAccordion","div","DisputeTimeline","dispute","disputeTimeLine"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,EAAoBC,EAApB,EAAwBC,SAAxB,EAAmCC,QAAnC,EAA6CC,KAA7C,QAA0D,YAA1D;AAEA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,SACEC,QADF,EAEEC,UAFF,EAGEC,eAHF,EAIEC,WAJF,EAKEC,UALF,EAMEC,YANF,EAOEC,SAPF,EAQEC,UARF,QASO,2BATP;AAWA,SACEC,KAAK,IAAIC,YADX,EAEEC,uBAFF,QAGO,kCAHP;AAIA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;;;;;;;;;;;;;;;;;;;;;;AAEA,MAAMC,QAAQ,GAAGzB,KAAK,CAAC0B,IAAN,CAAW,SAASD,QAAT,CAAkB;AAAEE,EAAAA;AAAF,CAAlB,EAAgC;AAC1D,QAAMC,KAAK,GAAGtB,QAAQ,EAAtB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEsB,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,GAAnB,CAApB;AAA6C,IAAA,OAAO,EAAE,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QAAQ,CAACI,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC7B,QAAI,CAACC,KAAK,CAACC,OAAN,CAAcH,IAAd,CAAL,EAA0B;AACxB,aAAO,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEC,KAAf;AAAsB,QAAA,IAAI,EAAED,IAA5B;AAAkC,QAAA,KAAK,EAAEC,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,WAAOD,IAAI,CAACD,GAAL,CAAS,CAACK,KAAD,EAAQC,UAAR,KAAuB;AACrC,UAAIA,UAAU,KAAK,CAAnB,EAAsB;AACpB,eAAOD,KAAK,CAACL,GAAN,CAAU,CAACO,SAAD,EAAYC,UAAZ,KACf,oBAAC,QAAD;AACE,UAAA,GAAG,EAAEA,UADP;AAEE,UAAA,IAAI,EAAED,SAFR;AAGE,UAAA,KAAK,EAAEC,UAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,CAAP;AAOD;;AAED,aACE,oBAAC,IAAD;AACE,QAAA,GAAG,EAAEF,UADP;AAEE,QAAA,MAAM,EAAE,KAFV;AAGE,QAAA,OAAO,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,SAAD;AACE,UAAA,GAAG,EAAEA,UADP;AAEE,UAAA,KAAK,EAAE,CACL,CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAME;AACE,YAAA,GAAG,EAAE,EADP;AAEE,YAAA,GAAG,EAAEvB,eAFP;AAAA,kBAIoB,IAAIV,EAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,EAaE,oBAAC,gBAAD;AAAkB,YAAA,OAAO,EAAEgC,KAAK,CAAC,CAAD,CAAL,CAASI,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,CADF,EAiBE;AACE,YAAA,SAAS,EAAEZ,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,GAAnB,CADb;AAEE,YAAA,OAAO,EAAE,EAFX;AAAA,mBAIe,IAAI1B,EAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAOGgC,KAAK,CAACL,GAAN,CAAU,CAACO,SAAD,EAAYC,UAAZ,KACT,oBAAC,QAAD;AACE,YAAA,GAAG,EAAEA,UADP;AAEE,YAAA,IAAI,EAAED,SAFR;AAGE,YAAA,KAAK,EAAEC,UAHT;AAIE,YAAA,kBAAkB,MAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,CAPH,CAjBF,CADK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CALF,CAJJ;AAoDE,QAAA,YAAY,EAAE,KApDhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAwDD,KAnEM,CAAP;AAoED,GAzEA,CADH,CADF,CADF;AAgFD,CAnFgB,CAAjB;;;;;;;;;;;;;;;;;;;;;;AAqFA,SAASE,QAAT,CAAkB;AAAET,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeS,EAAAA;AAAf,CAAlB,EAAuD;AACrD,QAAMd,KAAK,GAAGtB,QAAQ,EAAtB;AAEA,SACE;AACE,IAAA,GAAG,EAAE2B,KADP;AAEE,IAAA,MAAM,EAAED,IAAI,CAACW,MAFf;AAGE,IAAA,SAAS,EACP;AAAA,aAEkBX,IAAI,CAACW,MAAL,GACV,2DADU,GAEV,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEX,IAAI,CAACY,KAAvB;AAA8B,MAAA,MAAM,EAAEZ,IAAI,CAACW,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CAJJ;AAkBE,IAAA,OAAO,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA,aAAWtC,SAAS,CAAC,OAAD,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGiB,uBAAuB,CAACU,IAAI,CAACY,KAAN,EAAaZ,IAAI,CAACW,MAAlB,CAD1B,CADF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA,aAEaf,KAAK,CAACiB,uBAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAEb,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF,CANF,EAgBGA,IAAI,CAACW,MAAL,IAAe,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAEX,IAAI,CAACQ,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBlB,EAiBGR,IAAI,CAACc,WAAL,IACC,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAEd,IAAI,CAACe,OAAvB;AAAgC,MAAA,KAAK,EAAEf,IAAI,CAACY,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBJ,CADF,CAnBJ;AA2CE,IAAA,YAAY,MA3Cd;AAAA,WA6CMF,kBAAkB,GAAG,mBAAH,GAAyB,EA7CjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAkDD;;;;;;;;;;;;;;;;;AAED,SAASM,OAAT,CAAiB;AAAED,EAAAA,OAAF;AAAWH,EAAAA;AAAX,CAAjB,EAAqC;AACnC,QAAMhB,KAAK,GAAGtB,QAAQ,EAAtB;AACA,QAAM2C,KAAK,GACTL,KAAK,IAAIA,KAAK,KAAKvB,YAAY,CAAC6B,UAAhC,GAA6C,cAA7C,GAA8D,SADhE;AAGA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME;AAAA,WAEkB,IAAI9C,EAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAA,WAEMC,SAAS,CAAC,OAAD,CAFf;AAAA,WAGYuB,KAAK,CAACiB,uBAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGI,KAPH,CALF,CANF,EAqBE,oBAAC,kBAAD;AAAoB,IAAA,OAAO,EAAEF,OAA7B;AAAsC,IAAA,KAAK,EAAEH,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,CADF;AAyBD;;AAED,SAASO,SAAT,CAAmB;AAAEP,EAAAA,KAAF;AAASD,EAAAA;AAAT,CAAnB,EAAsC;AACpC,QAAMS,IAAI,GAAGnD,OAAO,CAAC,MAAM;AACzB,QAAI2C,KAAK,KAAKvB,YAAY,CAACgC,OAAvB,IAAkCT,KAAK,KAAKvB,YAAY,CAACiC,UAA7D,EAAyE;AACvE,aAAO1C,QAAP;AACD;;AACD,QAAIgC,KAAK,KAAKvB,YAAY,CAACkC,QAA3B,EAAqC;AACnC,aAAO1C,UAAP;AACD;;AACD,QAAI+B,KAAK,KAAKvB,YAAY,CAACmC,YAA3B,EAAyC;AACvC,aAAOtC,SAAP;AACD;;AACD,QACE0B,KAAK,KAAKvB,YAAY,CAACoC,YAAvB,IACAb,KAAK,KAAKvB,YAAY,CAAC6B,UAFzB,EAGE;AACA,aAAO/B,UAAP;AACD;;AACD,QACEyB,KAAK,KAAKvB,YAAY,CAACqC,YAAvB,IACAd,KAAK,KAAKvB,YAAY,CAACsC,aAFzB,EAGE;AACA,aAAO1C,YAAP;AACD;;AACD,QAAI2B,KAAK,KAAKvB,YAAY,CAACuC,aAA3B,EAA0C;AACxC,aAAO5C,UAAP;AACD;;AACD,WAAOD,WAAP;AACD,GA1BmB,EA0BjB,CAAC6B,KAAD,CA1BiB,CAApB;AA4BA,SACE;AACE,IAAA,GAAG,EAAED,MAAM,GAAGS,IAAI,CAACT,MAAR,GAAiBS,IAAI,CAACS,QADnC;AAEE,IAAA,KAAK,EAAE,IAAIzD,EAFb;AAGE,IAAA,MAAM,EAAE,IAAIA,EAHd;AAIE,IAAA,GAAG,EAAC,EAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD;;AAED,SAAS0D,WAAT,CAAqB;AAAE9B,EAAAA;AAAF,CAArB,EAA+B;AAC7B,QAAM;AAAE+B,IAAAA,OAAF;AAAWpB,IAAAA;AAAX,MAAsBX,IAA5B;;AACA,MAAIW,MAAJ,EAAY;AACV,QAAI,CAACoB,OAAL,EAAc;AACZ,aAAO,UAAP;AACD;;AACD,WAAO,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAE,IAAIC,IAAJ,CAASD,OAAT,CAAZ;AAA+B,MAAA,QAAQ,EAAE,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,SAAO,0CAAGxC,UAAU,CAACwC,OAAD,EAAU,UAAV,CAAb,CAAP;AACD;;;;;;;;;;;;AAED,SAASE,YAAT,GAAwB;AACtB,QAAMrC,KAAK,GAAGtB,QAAQ,EAAtB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcE;AAAA,YAIkBsB,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,GAAnB,CAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CADF;AAyBD;;AAED,MAAMoC,eAAe,GAAGhE,MAAM,CAACiE,GAAV;AAAA;AAAA;AAAA,2IAArB;AAeA,eAAe,SAASC,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAAsC;AACnD,QAAMC,eAAe,GAAG9C,kBAAkB,CAAC6C,OAAD,CAA1C;AAEA,SAAO,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD","sourcesContent":["import React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport { Accordion, GU, textStyle, useTheme, Timer } from '@aragon/ui'\n\nimport DisputeOutcomeText from './DisputeOutcomeText'\nimport DisputeRoundPill from './DisputeRoundPill'\nimport Step from '../Step'\nimport Stepper from '../Stepper'\n\nimport {\n  IconFlag,\n  IconFolder,\n  IconGavelNoFill,\n  IconRewards,\n  IconRuling,\n  IconThinking,\n  IconUsers,\n  IconVoting,\n} from '../../utils/dispute-icons'\n\nimport {\n  Phase as DisputePhase,\n  getPhaseStringForStatus,\n} from '../../types/dispute-status-types'\nimport { dateFormat } from '../../utils/date-utils'\nimport useDisputeTimeline from '../../hooks/useDisputeTimeline'\n\nconst Timeline = React.memo(function Timeline({ timeline }) {\n  const theme = useTheme()\n\n  return (\n    <div>\n      <Stepper lineColor={theme.accent.alpha(0.3)} lineTop={12}>\n        {timeline.map((item, index) => {\n          if (!Array.isArray(item)) {\n            return <ItemStep key={index} item={item} index={index} />\n          }\n\n          return item.map((round, roundIndex) => {\n            if (roundIndex === 0) {\n              return round.map((roundItem, phaseIndex) => (\n                <ItemStep\n                  key={phaseIndex}\n                  item={roundItem}\n                  index={phaseIndex}\n                />\n              ))\n            }\n\n            return (\n              <Step\n                key={roundIndex}\n                active={false}\n                content={\n                  <div\n                    css={`\n                      width: 100%;\n                    `}\n                  >\n                    <StyledAccordion>\n                      <Accordion\n                        key={roundIndex}\n                        items={[\n                          [\n                            <div\n                              css={`\n                                display: flex;\n                                align-items: center;\n                              `}\n                            >\n                              <img\n                                alt={18}\n                                src={IconGavelNoFill}\n                                css={`\n                                  margin-right: ${1 * GU}px;\n                                `}\n                              />\n                              <DisputeRoundPill roundId={round[0].roundId} />\n                            </div>,\n\n                            <Stepper\n                              lineColor={theme.accent.alpha(0.3)}\n                              lineTop={12}\n                              css={`\n                                padding: ${3 * GU}px 0;\n                              `}\n                            >\n                              {round.map((roundItem, phaseIndex) => (\n                                <ItemStep\n                                  key={phaseIndex}\n                                  item={roundItem}\n                                  index={phaseIndex}\n                                  roundStepContainer\n                                />\n                              ))}\n                            </Stepper>,\n                          ],\n                        ]}\n                      />\n                    </StyledAccordion>\n                  </div>\n                }\n                displayPoint={false}\n              />\n            )\n          })\n        })}\n      </Stepper>\n    </div>\n  )\n})\n\nfunction ItemStep({ item, index, roundStepContainer }) {\n  const theme = useTheme()\n\n  return (\n    <Step\n      key={index}\n      active={item.active}\n      stepPoint={\n        <div\n          css={`\n            background: ${item.active\n              ? 'linear-gradient(51.69deg, #FFB36D -0.55%, #FF8888 88.44%)'\n              : '#FFE2D7'};\n            border-radius: 80%;\n            position: relative;\n            z-index: 1;\n            display: inline-flex;\n          `}\n        >\n          <PhaseIcon phase={item.phase} active={item.active} />\n        </div>\n      }\n      content={\n        <div>\n          <div>\n            <div>\n              <span css={textStyle('body1')}>\n                {getPhaseStringForStatus(item.phase, item.active)}\n              </span>\n            </div>\n            <div>\n              <span\n                css={`\n                  color: ${theme.surfaceContentSecondary};\n                  opacity: 0.6;\n                `}\n              >\n                <DisplayTime item={item} />\n              </span>\n            </div>\n            {item.active && <DisputeRoundPill roundId={item.roundId} />}\n            {item.showOutcome && (\n              <Outcome outcome={item.outcome} phase={item.phase} />\n            )}\n          </div>\n        </div>\n      }\n      displayPoint\n      css={`\n        ${roundStepContainer ? 'margin-left: 0px;' : ''}\n      `}\n    />\n  )\n}\n\nfunction Outcome({ outcome, phase }) {\n  const theme = useTheme()\n  const title =\n    phase && phase === DisputePhase.RevealVote ? 'Jury outcome' : 'Outcome'\n\n  return (\n    <div\n      css={`\n        position: relative;\n      `}\n    >\n      <OutcomePoint />\n      <div\n        css={`\n          margin-top: ${1 * GU}px;\n        `}\n      >\n        <span\n          css={`\n            ${textStyle('body3')}\n            color:${theme.surfaceContentSecondary};\n            text-transform: uppercase;\n          `}\n        >\n          {title}\n        </span>\n      </div>\n      <DisputeOutcomeText outcome={outcome} phase={phase} />\n    </div>\n  )\n}\n\nfunction PhaseIcon({ phase, active }) {\n  const icon = useMemo(() => {\n    if (phase === DisputePhase.Created || phase === DisputePhase.NotStarted) {\n      return IconFlag\n    }\n    if (phase === DisputePhase.Evidence) {\n      return IconFolder\n    }\n    if (phase === DisputePhase.JuryDrafting) {\n      return IconUsers\n    }\n    if (\n      phase === DisputePhase.VotingPeriod ||\n      phase === DisputePhase.RevealVote\n    ) {\n      return IconVoting\n    }\n    if (\n      phase === DisputePhase.AppealRuling ||\n      phase === DisputePhase.ConfirmAppeal\n    ) {\n      return IconThinking\n    }\n    if (phase === DisputePhase.ExecuteRuling) {\n      return IconRuling\n    }\n    return IconRewards\n  }, [phase])\n\n  return (\n    <img\n      src={active ? icon.active : icon.inactive}\n      width={6 * GU}\n      height={6 * GU}\n      alt=\"\"\n    />\n  )\n}\n\nfunction DisplayTime({ item }) {\n  const { endTime, active } = item\n  if (active) {\n    if (!endTime) {\n      return 'ANY TIME'\n    }\n    return <Timer end={new Date(endTime)} maxUnits={3} />\n  }\n  return <>{dateFormat(endTime, 'onlyDate')}</>\n}\n\nfunction OutcomePoint() {\n  const theme = useTheme()\n\n  return (\n    <div\n      css={`\n        position: absolute;\n        top: 5px;\n        left: -44px;\n        width: 16px;\n        height: 16px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: #fef3f1;\n        border-radius: 50%;\n      `}\n    >\n      <div\n        css={`\n          width: 6px;\n          height: 6px;\n          background: ${theme.accent.alpha(0.3)};\n          border-radius: 50%;\n        `}\n      />\n    </div>\n  )\n}\n\nconst StyledAccordion = styled.div`\n  padding: 0;\n\n  & > div:first-child {\n    border-radius: 0px;\n    border-left: 0;\n    border-right: 0;\n  }\n\n  &::after {\n    height: 0px !important;\n    width: 0px !important;\n  }\n`\n\nexport default function DisputeTimeline({ dispute }) {\n  const disputeTimeLine = useDisputeTimeline(dispute)\n\n  return <Timeline timeline={disputeTimeLine} />\n}\n"]},"metadata":{},"sourceType":"module"}