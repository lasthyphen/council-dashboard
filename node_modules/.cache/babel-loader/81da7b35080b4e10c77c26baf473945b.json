{"ast":null,"code":"var _jsxFileName = \"/Users/saleemfareed/oneds/court-dashboard/src/components/Dashboard/panels/ActivateANJ.js\";\nimport React, { useCallback } from 'react';\nimport ANJForm from './ANJForm';\nimport { formatUnits } from '../../../lib/math-utils';\nimport { useCourtConfig } from '../../../providers/CourtConfig';\nconst ActivateANJ = React.memo(function ActivateANJ({\n  onActivateANJ,\n  activeBalance,\n  walletBalance,\n  inactiveBalance,\n  fromWallet,\n  onDone\n}) {\n  const {\n    anjToken,\n    minActiveBalance\n  } = useCourtConfig();\n  const maxAmount = fromWallet ? walletBalance : inactiveBalance;\n  const minActiveBalanceFormatted = formatUnits(minActiveBalance, {\n    digits: anjToken.decimals\n  });\n  const maxAmountFormatted = formatUnits(maxAmount, {\n    digits: anjToken.decimals,\n    precision: anjToken.decimals\n  });\n  const validation = useCallback(amountBN => {\n    if (amountBN.gt(maxAmount)) {\n      return `Insufficient funds, your ${fromWallet ? 'wallet balance is' : 'inactive balance available for activation is'} ${maxAmountFormatted} ${anjToken.symbol} `;\n    }\n\n    if (activeBalance.add(amountBN).lt(minActiveBalance)) {\n      return `You must have at least ${minActiveBalanceFormatted} ${anjToken.symbol} activated`;\n    }\n\n    return null;\n  }, [activeBalance, anjToken.symbol, fromWallet, maxAmount, maxAmountFormatted, minActiveBalance, minActiveBalanceFormatted]);\n  return React.createElement(ANJForm, {\n    actionLabel: \"Activate\",\n    maxAmount: maxAmount,\n    onSubmit: onActivateANJ,\n    onDone: onDone,\n    runParentValidation: validation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  });\n});\nexport default ActivateANJ;","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/Dashboard/panels/ActivateANJ.js"],"names":["React","useCallback","ANJForm","formatUnits","useCourtConfig","ActivateANJ","memo","onActivateANJ","activeBalance","walletBalance","inactiveBalance","fromWallet","onDone","anjToken","minActiveBalance","maxAmount","minActiveBalanceFormatted","digits","decimals","maxAmountFormatted","precision","validation","amountBN","gt","symbol","add","lt"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,cAAT,QAA+B,gCAA/B;AAEA,MAAMC,WAAW,GAAGL,KAAK,CAACM,IAAN,CAAW,SAASD,WAAT,CAAqB;AAClDE,EAAAA,aADkD;AAElDC,EAAAA,aAFkD;AAGlDC,EAAAA,aAHkD;AAIlDC,EAAAA,eAJkD;AAKlDC,EAAAA,UALkD;AAMlDC,EAAAA;AANkD,CAArB,EAO5B;AACD,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAiCV,cAAc,EAArD;AACA,QAAMW,SAAS,GAAGJ,UAAU,GAAGF,aAAH,GAAmBC,eAA/C;AAEA,QAAMM,yBAAyB,GAAGb,WAAW,CAACW,gBAAD,EAAmB;AAC9DG,IAAAA,MAAM,EAAEJ,QAAQ,CAACK;AAD6C,GAAnB,CAA7C;AAGA,QAAMC,kBAAkB,GAAGhB,WAAW,CAACY,SAAD,EAAY;AAChDE,IAAAA,MAAM,EAAEJ,QAAQ,CAACK,QAD+B;AAEhDE,IAAAA,SAAS,EAAEP,QAAQ,CAACK;AAF4B,GAAZ,CAAtC;AAKA,QAAMG,UAAU,GAAGpB,WAAW,CAC5BqB,QAAQ,IAAI;AACV,QAAIA,QAAQ,CAACC,EAAT,CAAYR,SAAZ,CAAJ,EAA4B;AAC1B,aAAQ,4BACNJ,UAAU,GACN,mBADM,GAEN,8CACL,IAAGQ,kBAAmB,IAAGN,QAAQ,CAACW,MAAO,GAJ1C;AAKD;;AAED,QAAIhB,aAAa,CAACiB,GAAd,CAAkBH,QAAlB,EAA4BI,EAA5B,CAA+BZ,gBAA/B,CAAJ,EAAsD;AACpD,aAAQ,0BAAyBE,yBAA0B,IAAGH,QAAQ,CAACW,MAAO,YAA9E;AACD;;AAED,WAAO,IAAP;AACD,GAf2B,EAgB5B,CACEhB,aADF,EAEEK,QAAQ,CAACW,MAFX,EAGEb,UAHF,EAIEI,SAJF,EAKEI,kBALF,EAMEL,gBANF,EAOEE,yBAPF,CAhB4B,CAA9B;AA2BA,SACE,oBAAC,OAAD;AACE,IAAA,WAAW,EAAC,UADd;AAEE,IAAA,SAAS,EAAED,SAFb;AAGE,IAAA,QAAQ,EAAER,aAHZ;AAIE,IAAA,MAAM,EAAEK,MAJV;AAKE,IAAA,mBAAmB,EAAES,UALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AASD,CAvDmB,CAApB;AAyDA,eAAehB,WAAf","sourcesContent":["import React, { useCallback } from 'react'\nimport ANJForm from './ANJForm'\nimport { formatUnits } from '../../../lib/math-utils'\nimport { useCourtConfig } from '../../../providers/CourtConfig'\n\nconst ActivateANJ = React.memo(function ActivateANJ({\n  onActivateANJ,\n  activeBalance,\n  walletBalance,\n  inactiveBalance,\n  fromWallet,\n  onDone,\n}) {\n  const { anjToken, minActiveBalance } = useCourtConfig()\n  const maxAmount = fromWallet ? walletBalance : inactiveBalance\n\n  const minActiveBalanceFormatted = formatUnits(minActiveBalance, {\n    digits: anjToken.decimals,\n  })\n  const maxAmountFormatted = formatUnits(maxAmount, {\n    digits: anjToken.decimals,\n    precision: anjToken.decimals,\n  })\n\n  const validation = useCallback(\n    amountBN => {\n      if (amountBN.gt(maxAmount)) {\n        return `Insufficient funds, your ${\n          fromWallet\n            ? 'wallet balance is'\n            : 'inactive balance available for activation is'\n        } ${maxAmountFormatted} ${anjToken.symbol} `\n      }\n\n      if (activeBalance.add(amountBN).lt(minActiveBalance)) {\n        return `You must have at least ${minActiveBalanceFormatted} ${anjToken.symbol} activated`\n      }\n\n      return null\n    },\n    [\n      activeBalance,\n      anjToken.symbol,\n      fromWallet,\n      maxAmount,\n      maxAmountFormatted,\n      minActiveBalance,\n      minActiveBalanceFormatted,\n    ]\n  )\n\n  return (\n    <ANJForm\n      actionLabel=\"Activate\"\n      maxAmount={maxAmount}\n      onSubmit={onActivateANJ}\n      onDone={onDone}\n      runParentValidation={validation}\n    />\n  )\n})\n\nexport default ActivateANJ\n"]},"metadata":{},"sourceType":"module"}