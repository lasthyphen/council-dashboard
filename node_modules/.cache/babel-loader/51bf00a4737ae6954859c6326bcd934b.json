{"ast":null,"code":"import _styled7 from\"styled-components\";import _styled6 from\"styled-components\";import _styled5 from\"styled-components\";import _styled4 from\"styled-components\";import _styled3 from\"styled-components\";import _styled2 from\"styled-components\";import _styled from\"styled-components\";import React from'react';import{Box,GU,TransactionBadge,textStyle,useTheme}from'@aragon/ui';import DisputeActions from'./DisputeActions';import DisputeCurrentRuling from'./DisputeCurrentRuling';import DisputeInfoContent from'./DisputeInfoContent';import DisputeStatus from'./DisputeStatus';import DisputeVoided from'./DisputeVoided';import ErrorLoading from'../Errors/ErrorLoading';import LoadingCard from'../LoadingCard';import{Phase as DisputePhase,Status}from'../../types/dispute-status-types';import{getNetworkType}from'../../lib/web3-utils';import iconCourt from\"../../assets/courtIcon.svg\";var _StyledSection=_styled(\"section\").withConfig({displayName:\"DisputeInfo___StyledSection\",componentId:\"sc-1ps3uft-0\"})([\"display:grid;grid-template-columns:auto;grid-gap:\",\"px;align-items:center;\"],function(p){return p._css;});var DisputeInfo=React.memo(function(_ref){var id=_ref.id,error=_ref.error,dispute=_ref.dispute,loading=_ref.loading,onDraft=_ref.onDraft,onLeak=_ref.onLeak,onAutoReveal=_ref.onAutoReveal,onExecuteRuling=_ref.onExecuteRuling,onRequestAppeal=_ref.onRequestAppeal,onRequestCommit=_ref.onRequestCommit,onRequestReveal=_ref.onRequestReveal;var _ref2=dispute||{},phase=_ref2.phase,status=_ref2.status;var isDisputeVoided=status===Status.Voided;var isFinalRulingEnsured=phase===DisputePhase.ExecuteRuling||status===Status.Closed;return React.createElement(Box,{padding:5*GU},React.createElement(_StyledSection,{_css:2.5*GU},React.createElement(DisputeHeader,{dispute:dispute,error:error===null||error===void 0?void 0:error.message}),function(){if(error){return React.createElement(ErrorLoading,{subject:\"dispute\",errors:[error.message],border:false});}if(loading){return React.createElement(LoadingCard,{border:false});}if(isDisputeVoided){return React.createElement(DisputeVoided,{id:id,description:dispute.voidedDescription,link:dispute.voidedLink});}return React.createElement(DisputeInfoContent,{dispute:dispute,isFinalRulingEnsured:isFinalRulingEnsured});}(),!loading&&!isDisputeVoided&&!(error===null||error===void 0?void 0:error.fromGraph)&&React.createElement(React.Fragment,null,(phase===DisputePhase.AppealRuling||phase===DisputePhase.ConfirmAppeal||isFinalRulingEnsured)&&React.createElement(DisputeCurrentRuling,{dispute:dispute}),React.createElement(DisputeActions,{dispute:dispute,onAutoReveal:onAutoReveal,onDraft:onDraft,onRequestCommit:onRequestCommit,onRequestReveal:onRequestReveal,onLeak:onLeak,onRequestAppeal:onRequestAppeal,onExecuteRuling:onExecuteRuling}))));});var _StyledDiv=_styled(\"div\").withConfig({displayName:\"DisputeInfo___StyledDiv\",componentId:\"sc-1ps3uft-1\"})([\"display:flex;margin-bottom:\",\"px;\"],function(p){return p._css2;});var _StyledDiv2=_styled(\"div\").withConfig({displayName:\"DisputeInfo___StyledDiv2\",componentId:\"sc-1ps3uft-2\"})([\"display:flex;align-items:center;width:100%;\"]);var _StyledDiv3=_styled(\"div\").withConfig({displayName:\"DisputeInfo___StyledDiv3\",componentId:\"sc-1ps3uft-3\"})([\"background:linear-gradient( 233deg,\",\" -50%,\",\" 91% );border-radius:50%;padding:\",\"px;display:inline-block;\"],function(p){return p._css3;},function(p){return p._css4;},function(p){return p._css5;});var _StyledDiv4=_styled(\"div\").withConfig({displayName:\"DisputeInfo___StyledDiv4\",componentId:\"sc-1ps3uft-4\"})([\"margin-left:\",\"px;width:100%;\"],function(p){return p._css6;});var _StyledH=_styled(\"h1\").withConfig({displayName:\"DisputeInfo___StyledH\",componentId:\"sc-1ps3uft-5\"})([\"display:flex;align-items:center;justify-content:space-between;margin-bottom:\",\"px;\",\";width:100%;\"],function(p){return p._css7;},function(p){return p._css8;});var _StyledDisputeStatus=_styled(DisputeStatus).withConfig({displayName:\"DisputeInfo___StyledDisputeStatus\",componentId:\"sc-1ps3uft-6\"})([\"margin:0 0 0 \",\"px;\"],function(p){return p._css9;});function DisputeHeader(_ref3){var dispute=_ref3.dispute,error=_ref3.error;var theme=useTheme();var _ref4=dispute||{},id=_ref4.id,description=_ref4.description,txHash=_ref4.txHash;return React.createElement(_StyledDiv,{_css2:3*GU},React.createElement(_StyledDiv2,null,React.createElement(_StyledDiv3,{_css3:theme.accentStart,_css4:theme.accentEnd,_css5:1.5*GU},React.createElement(\"img\",{src:iconCourt,alt:\"\",width:\"39\",height:\"32\"})),React.createElement(_StyledDiv4,{_css6:3*GU},React.createElement(_StyledH,{_css7:1*GU,_css8:textStyle('title3')},React.createElement(\"span\",null,\"Dispute #\",id,\": \",description),!error&&dispute&&React.createElement(_StyledDisputeStatus,{dispute:dispute,_css9:1*GU})),Boolean((dispute===null||dispute===void 0?void 0:dispute.status)!==Status.Voided&&txHash)&&React.createElement(TransactionBadge,{transaction:txHash,networkType:getNetworkType()}))));}export default DisputeInfo;","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/Disputes/DisputeInfo.js"],"names":["React","Box","GU","TransactionBadge","textStyle","useTheme","DisputeActions","DisputeCurrentRuling","DisputeInfoContent","DisputeStatus","DisputeVoided","ErrorLoading","LoadingCard","Phase","DisputePhase","Status","getNetworkType","DisputeInfo","memo","id","error","dispute","loading","onDraft","onLeak","onAutoReveal","onExecuteRuling","onRequestAppeal","onRequestCommit","onRequestReveal","phase","status","isDisputeVoided","Voided","isFinalRulingEnsured","ExecuteRuling","Closed","message","voidedDescription","voidedLink","fromGraph","AppealRuling","ConfirmAppeal","DisputeHeader","theme","description","txHash","accentStart","accentEnd","iconCourt","Boolean"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Box, GU, TransactionBadge, textStyle, useTheme } from '@aragon/ui'\nimport DisputeActions from './DisputeActions'\nimport DisputeCurrentRuling from './DisputeCurrentRuling'\nimport DisputeInfoContent from './DisputeInfoContent'\nimport DisputeStatus from './DisputeStatus'\nimport DisputeVoided from './DisputeVoided'\nimport ErrorLoading from '../Errors/ErrorLoading'\nimport LoadingCard from '../LoadingCard'\nimport { Phase as DisputePhase, Status } from '../../types/dispute-status-types'\nimport { getNetworkType } from '../../lib/web3-utils'\n\nimport iconCourt from '../../assets/courtIcon.svg'\n\nconst DisputeInfo = React.memo(function({\n  id,\n  error,\n  dispute,\n  loading,\n  onDraft,\n  onLeak,\n  onAutoReveal,\n  onExecuteRuling,\n  onRequestAppeal,\n  onRequestCommit,\n  onRequestReveal,\n}) {\n  const { phase, status } = dispute || {}\n\n  const isDisputeVoided = status === Status.Voided\n  const isFinalRulingEnsured =\n    phase === DisputePhase.ExecuteRuling || status === Status.Closed\n\n  return (\n    <Box padding={5 * GU}>\n      <section\n        css={`\n          display: grid;\n          grid-template-columns: auto;\n          grid-gap: ${2.5 * GU}px;\n          align-items: center;\n        `}\n      >\n        <DisputeHeader dispute={dispute} error={error?.message} />\n        {(() => {\n          if (error) {\n            return (\n              <ErrorLoading\n                subject=\"dispute\"\n                errors={[error.message]}\n                border={false}\n              />\n            )\n          }\n\n          if (loading) {\n            return <LoadingCard border={false} />\n          }\n\n          if (isDisputeVoided) {\n            return (\n              <DisputeVoided\n                id={id}\n                description={dispute.voidedDescription}\n                link={dispute.voidedLink}\n              />\n            )\n          }\n          return (\n            <DisputeInfoContent\n              dispute={dispute}\n              isFinalRulingEnsured={isFinalRulingEnsured}\n            />\n          )\n        })()}\n        {!loading && !isDisputeVoided && !error?.fromGraph && (\n          <>\n            {(phase === DisputePhase.AppealRuling ||\n              phase === DisputePhase.ConfirmAppeal ||\n              isFinalRulingEnsured) && (\n              <DisputeCurrentRuling dispute={dispute} />\n            )}\n            <DisputeActions\n              dispute={dispute}\n              onAutoReveal={onAutoReveal}\n              onDraft={onDraft}\n              onRequestCommit={onRequestCommit}\n              onRequestReveal={onRequestReveal}\n              onLeak={onLeak}\n              onRequestAppeal={onRequestAppeal}\n              onExecuteRuling={onExecuteRuling}\n            />\n          </>\n        )}\n      </section>\n    </Box>\n  )\n})\n\nfunction DisputeHeader({ dispute, error }) {\n  const theme = useTheme()\n  const { id, description, txHash } = dispute || {}\n\n  return (\n    <div\n      css={`\n        display: flex;\n        margin-bottom: ${3 * GU}px;\n      `}\n    >\n      <div\n        css={`\n          display: flex;\n          align-items: center;\n          width: 100%;\n        `}\n      >\n        <div\n          css={`\n            background: linear-gradient(\n              233deg,\n              ${theme.accentStart} -50%,\n              ${theme.accentEnd} 91%\n            );\n            border-radius: 50%;\n            padding: ${1.5 * GU}px;\n            display: inline-block;\n          `}\n        >\n          <img src={iconCourt} alt=\"\" width=\"39\" height=\"32\" />\n        </div>\n        <div\n          css={`\n            margin-left: ${3 * GU}px;\n            width: 100%;\n          `}\n        >\n          <h1\n            css={`\n              display: flex;\n              align-items: center;\n              justify-content: space-between;\n              margin-bottom: ${1 * GU}px;\n              ${textStyle('title3')};\n              width: 100%;\n            `}\n          >\n            <span>\n              Dispute #{id}: {description}\n            </span>\n            {!error && dispute && (\n              <DisputeStatus\n                dispute={dispute}\n                css={`\n                  margin: 0 0 0 ${1 * GU}px;\n                `}\n              />\n            )}\n          </h1>\n          {Boolean(dispute?.status !== Status.Voided && txHash) && (\n            <TransactionBadge\n              transaction={txHash}\n              networkType={getNetworkType()}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nDisputeInfo.propTypes = {\n  dispute: PropTypes.object, // TODO: define DisputeType\n  id: PropTypes.string.isRequired,\n  loading: PropTypes.bool,\n}\n\nexport default DisputeInfo\n"]},"metadata":{},"sourceType":"module"}