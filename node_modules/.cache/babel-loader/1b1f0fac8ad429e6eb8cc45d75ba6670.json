{"ast":null,"code":"import _regeneratorRuntime from \"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport TransactionRequest from '../transactions/TransactionRequest';\nimport { decodeTransactionPath } from './path/decodePath';\nimport { tryEvaluatingRadspec, postprocessRadspecDescription } from './radspec/index';\nexport function describeTransaction(_x, _x2, _x3) {\n  return _describeTransaction.apply(this, arguments);\n}\n/**\n * Use radspec to create a human-readable description for each transaction in the given `path`\n *\n */\n\nfunction _describeTransaction() {\n  _describeTransaction = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(transaction, apps, provider) {\n    var description, descriptionAnnotated, processed;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (transaction.to) {\n              _context.next = 2;\n              break;\n            }\n\n            throw new Error(\"Could not describe transaction: missing 'to'\");\n\n          case 2:\n            if (transaction.data) {\n              _context.next = 4;\n              break;\n            }\n\n            throw new Error(\"Could not describe transaction: missing 'data'\");\n\n          case 4:\n            _context.prev = 4;\n            _context.next = 7;\n            return tryEvaluatingRadspec(transaction, apps, provider);\n\n          case 7:\n            description = _context.sent;\n\n            if (!description) {\n              _context.next = 14;\n              break;\n            }\n\n            _context.next = 11;\n            return postprocessRadspecDescription(description, apps);\n\n          case 11:\n            processed = _context.sent;\n            descriptionAnnotated = processed.annotatedDescription;\n            description = processed.description;\n\n          case 14:\n            if (!transaction.children) {\n              _context.next = 18;\n              break;\n            }\n\n            _context.next = 17;\n            return describeTransactionPath(transaction.children, apps, provider);\n\n          case 17:\n            transaction.children = _context.sent;\n\n          case 18:\n            _context.next = 23;\n            break;\n\n          case 20:\n            _context.prev = 20;\n            _context.t0 = _context[\"catch\"](4);\n            throw new Error(\"Could not describe transaction: \".concat(_context.t0));\n\n          case 23:\n            return _context.abrupt(\"return\", new TransactionRequest(_objectSpread({}, transaction, {\n              description: description,\n              descriptionAnnotated: descriptionAnnotated\n            })));\n\n          case 24:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[4, 20]]);\n  }));\n  return _describeTransaction.apply(this, arguments);\n}\n\nexport function describeTransactionPath(_x4, _x5, _x6) {\n  return _describeTransactionPath.apply(this, arguments);\n}\n\nfunction _describeTransactionPath() {\n  _describeTransactionPath = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(path, apps, provider) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", Promise.all(path.map(function (step) {\n              return describeTransaction(step, apps, provider);\n            })));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _describeTransactionPath.apply(this, arguments);\n}\n\nexport function describeScript(_x7, _x8, _x9) {\n  return _describeScript.apply(this, arguments);\n}\n\nfunction _describeScript() {\n  _describeScript = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(script, apps, provider) {\n    var path;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            path = decodeTransactionPath(script);\n            return _context3.abrupt(\"return\", describeTransactionPath(path, apps, provider));\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _describeScript.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}