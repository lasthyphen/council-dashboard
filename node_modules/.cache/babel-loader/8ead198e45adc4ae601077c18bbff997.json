{"ast":null,"code":"import _styled14 from \"styled-components\";\nimport _styled13 from \"styled-components\";\nimport _styled12 from \"styled-components\";\nimport _styled11 from \"styled-components\";\nimport _styled10 from \"styled-components\";\nimport _styled9 from \"styled-components\";\nimport _styled8 from \"styled-components\";\nimport _styled7 from \"styled-components\";\nimport _styled6 from \"styled-components\";\nimport _styled5 from \"styled-components\";\nimport _styled4 from \"styled-components\";\nimport _styled3 from \"styled-components\";\nimport _styled2 from \"styled-components\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/saleemfareed/oneds/court-dashboard/src/components/Dashboard/RewardsModule.js\";\nimport React, { useCallback, useMemo } from 'react';\nimport { Box, Button, GU, Help, Info, Link, textStyle, useTheme } from '@aragon/ui';\nimport Loading from '../Loading';\nimport NoRewards from './NoRewards';\nimport { useWallet } from '../../providers/Wallet';\nimport { useCourtConfig } from '../../providers/CourtConfig';\nimport useJurorSubscriptionFees from '../../hooks/useJurorSubscriptionFees';\nimport { addressesEqual } from '../../lib/web3-utils';\nimport { bigNum, formatTokenAmount } from '../../lib/math-utils'; // anjRewards => ANJ => First settle with `onSettleReward()`, then withdraw\n// feeRewards => DAI =>  First settle with `onSettleReward()` or `onSettleAppealDeposit()`, then withdraw\n// subscriptions fees => DAI => Can be withdrawn directly from the CourtSubscription contract\n// Only after the rewards are settled can a juror withdraw them from the treasury (`onWithdraw()`)\n// As opposed to fee rewards, subscription fees are directly withdrawn to the juror's wallet when claimed\n\nconst RewardsModule = React.memo(function RewardsModule({\n  rewards,\n  treasury,\n  loading,\n  onClaimRewards\n}) {\n  const wallet = useWallet();\n  const {\n    feeToken\n  } = useCourtConfig(); // Subscriptions are fetched directly from the subscriptions contract\n\n  const subscriptionFees = useJurorSubscriptionFees();\n  const {\n    anjRewards,\n    feeRewards\n  } = rewards || {};\n  const {\n    totalAppealFees,\n    totalArbitrableFees,\n    totalSettledFees,\n    totalSubscriptionFees\n  } = useTotalFeeRewards(feeRewards === null || feeRewards === void 0 ? void 0 : feeRewards.arbitrableFees, feeRewards === null || feeRewards === void 0 ? void 0 : feeRewards.appealFees, subscriptionFees); // We'll get the total juror's balance held in the treasury\n  // TODO: feeToken can change over time, this means jurors could have multiple balances in the treasury (one for each fee token).\n  //       - Handle potential multiple fee token balances\n\n  const treasuryToken = treasury === null || treasury === void 0 ? void 0 : treasury.find(({\n    token\n  }) => addressesEqual(token.id, feeToken.id));\n  const treasuryBalance = treasuryToken ? treasuryToken.amount : bigNum(0); // Total dispute fees include appeal fees and arbitrable fees (fees paid by the creator of the dispute for the first round\n  // and fees paid by appealers for subsequent rounds)\n\n  const totalDisputesFees = totalArbitrableFees.add(totalAppealFees); // All dispute fees are sent to the treasury after being settled\n  // Note that the total dispute fees could include already settled fees so we must discount them from the total treasury fees\n\n  const totalTreasuryFees = totalDisputesFees.sub(totalSettledFees).add(treasuryBalance);\n  const totalFeeRewards = totalTreasuryFees.add(totalSubscriptionFees); // Form submission\n\n  const handleFormSubmit = useCallback(event => {\n    event.preventDefault();\n    if (!rewards) return;\n    onClaimRewards(wallet.account, feeRewards.arbitrableFees, feeRewards.appealFees, totalTreasuryFees, subscriptionFees, feeToken.id);\n  }, [feeRewards, feeToken, onClaimRewards, rewards, subscriptionFees, totalTreasuryFees, wallet.account]);\n  const hasRewardsToClaim = (anjRewards === null || anjRewards === void 0 ? void 0 : anjRewards.gt(0)) || totalFeeRewards.gt(0);\n  const showHeading = !loading && hasRewardsToClaim;\n  return React.createElement(Box, {\n    heading: showHeading && 'Rewards',\n    padding: hasRewardsToClaim ? 0 : 3 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, (() => {\n    if (loading) {\n      return React.createElement(Loading, {\n        height: 150,\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      });\n    }\n\n    if (!hasRewardsToClaim) {\n      return React.createElement(NoRewards, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, rewards && anjRewards.gt(0) && React.createElement(ANJRewards, {\n      amount: anjRewards,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), totalFeeRewards.gt(0) && React.createElement(FeeSection, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, totalSubscriptionFees.gt(0) && React.createElement(SubscriptionFeeRewards, {\n      totalFees: totalSubscriptionFees,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), totalDisputesFees.gt(0) && React.createElement(DisputesFeeRewards, {\n      totalAppealFees: totalAppealFees,\n      totalArbitrableFees: totalArbitrableFees,\n      distribution: feeRewards.distribution,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(TotalFees, {\n      totalFees: totalFeeRewards,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }))));\n  })());\n});\n\nconst ANJRewards = ({\n  amount\n}) => {\n  const {\n    anjToken\n  } = useCourtConfig();\n  const formattedAmount = formatTokenAmount(amount, true, anjToken.decimals, true);\n  return React.createElement(FeeSection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(_StyledRowFee, {\n    label: \"Ruling fees\",\n    amount: formattedAmount,\n    symbol: anjToken.symbol,\n    showPositive: true,\n    _css: 2 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), React.createElement(Info, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"This amount will be sent to your inactive wallet\"));\n};\n\nvar _StyledDiv = _styled(\"div\").withConfig({\n  displayName: \"RewardsModule___StyledDiv\",\n  componentId: \"sc-98apz2-0\"\n})([\"display:flex;align-items:center;\"]);\n\nvar _StyledSpan = _styled(\"span\").withConfig({\n  displayName: \"RewardsModule___StyledSpan\",\n  componentId: \"sc-98apz2-1\"\n})([\"color:\", \";margin-right:\", \"px;\"], p => p._css4, p => p._css5);\n\nvar _StyledHelp = _styled(Help).withConfig({\n  displayName: \"RewardsModule___StyledHelp\",\n  componentId: \"sc-98apz2-2\"\n})([\"padding:0;\"]);\n\nconst DisputesFeeRewards = ({\n  distribution,\n  totalAppealFees,\n  totalArbitrableFees\n}) => {\n  const theme = useTheme();\n  const {\n    feeToken\n  } = useCourtConfig();\n  const {\n    symbol,\n    decimals\n  } = feeToken; // Format total amounts\n\n  const totalArbitrableFormatted = formatTokenAmount(totalArbitrableFees, true, decimals, true);\n  const totalAppealFormatted = formatTokenAmount(totalAppealFees, true, decimals, true);\n  return React.createElement(React.Fragment, null, totalArbitrableFees.gt(0) && React.createElement(_StyledRowFee2, {\n    label: \"Dispute fees\",\n    amount: totalArbitrableFormatted,\n    symbol: symbol,\n    showPositive: true,\n    _css2: 2 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }), totalAppealFees.gt(0) && React.createElement(_StyledRowFee3, {\n    label: \"Appeal fees\",\n    amount: totalAppealFormatted,\n    symbol: symbol,\n    showPositive: true,\n    _css3: 2 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }), React.createElement(_StyledDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(_StyledSpan, {\n    _css4: theme.help,\n    _css5: 1 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, \"Distribution\"), React.createElement(_StyledHelp, {\n    hint: \"Rewards per dispute\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, React.createElement(DisputesFeeDistribution, {\n    symbol: symbol,\n    decimals: decimals,\n    distribution: distribution,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }))));\n};\n\nfunction SubscriptionFeeRewards({\n  totalFees\n}) {\n  const {\n    feeToken\n  } = useCourtConfig();\n  const formattedAmount = formatTokenAmount(totalFees, true, feeToken.decimals, true);\n  return React.createElement(_StyledRowFee4, {\n    label: \"Subscriptions\",\n    amount: formattedAmount,\n    symbol: feeToken.symbol,\n    showPositive: true,\n    _css6: 2 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  });\n}\n\nvar _StyledDiv2 = _styled(\"div\").withConfig({\n  displayName: \"RewardsModule___StyledDiv2\",\n  componentId: \"sc-98apz2-3\"\n})([\"border-top:1px solid \", \";margin-top:\", \"px;padding-top:\", \"px;\"], p => p._css7, p => p._css8, p => p._css9);\n\nvar _StyledButton = _styled(Button).withConfig({\n  displayName: \"RewardsModule___StyledButton\",\n  componentId: \"sc-98apz2-4\"\n})([\"margin-top:\", \"px;\"], p => p._css10);\n\nfunction TotalFees({\n  totalFees\n}) {\n  const theme = useTheme();\n  const {\n    feeToken\n  } = useCourtConfig();\n  const {\n    symbol,\n    decimals\n  } = feeToken;\n  const totalFeesFormatted = formatTokenAmount(totalFees, true, decimals, true);\n  return React.createElement(_StyledDiv2, {\n    _css7: theme.border,\n    _css8: 2 * GU,\n    _css9: 2 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, React.createElement(RowFee, {\n    label: \"Total rewards\",\n    amount: totalFeesFormatted,\n    symbol: symbol,\n    showPositive: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }), React.createElement(_StyledButton, {\n    mode: \"positive\",\n    type: \"submit\",\n    wide: true,\n    _css10: 2 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }, \"Claim rewards\"));\n}\n\nvar _StyledH = _styled(\"h3\").withConfig({\n  displayName: \"RewardsModule___StyledH\",\n  componentId: \"sc-98apz2-5\"\n})([\"\", \";color:\", \";margin-bottom:\", \"px;\"], p => p._css11, p => p._css12, p => p._css13);\n\nconst DisputesFeeDistribution = ({\n  distribution,\n  symbol,\n  decimals\n}) => {\n  const theme = useTheme();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306\n    },\n    __self: this\n  }, React.createElement(_StyledH, {\n    _css11: textStyle('label2'),\n    _css12: theme.surfaceContentSecondary,\n    _css13: 2 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307\n    },\n    __self: this\n  }, \"Rewards distribution per dispute\"), distribution.sort((d1, d2) => d1.disputeId - d2.disputeId).map(({\n    disputeId,\n    amount\n  }) => {\n    const formattedAmount = formatTokenAmount(amount, false, decimals);\n    return React.createElement(_StyledRowFee5, {\n      key: disputeId,\n      label: React.createElement(Link, {\n        href: `#/disputes/${disputeId}`,\n        external: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, `Dispute #${disputeId}`),\n      isLabelLink: true,\n      amount: formattedAmount,\n      symbol: symbol,\n      showPositive: false,\n      _css14: textStyle('body2'),\n      _css15: 1 * GU,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    });\n  }));\n};\n\nvar _StyledDiv3 = _styled(\"div\").withConfig({\n  displayName: \"RewardsModule___StyledDiv3\",\n  componentId: \"sc-98apz2-6\"\n})([\"display:flex;align-items:center;justify-content:space-between;&:last-child{margin-bottom:0;}\"]);\n\nvar _StyledSpan2 = _styled(\"span\").withConfig({\n  displayName: \"RewardsModule___StyledSpan2\",\n  componentId: \"sc-98apz2-7\"\n})([\"\", \";\"], p => p._css16);\n\nconst RowFee = ({\n  label,\n  isLabelLink,\n  amount,\n  symbol,\n  showPositive,\n  ...props\n}) => {\n  const theme = useTheme();\n  return React.createElement(_StyledDiv3, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355\n    },\n    __self: this\n  }), isLabelLink ? label : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367\n    },\n    __self: this\n  }, label), React.createElement(_StyledSpan2, {\n    _css16: showPositive && `color: ${theme.positive}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369\n    },\n    __self: this\n  }, amount, \" \", symbol));\n};\n\nvar _StyledRowFee5 = _styled(RowFee).withConfig({\n  displayName: \"RewardsModule___StyledRowFee5\",\n  componentId: \"sc-98apz2-8\"\n})([\"\", \";margin-bottom:\", \"px;\"], p => p._css14, p => p._css15);\n\nvar _StyledRowFee4 = _styled(RowFee).withConfig({\n  displayName: \"RewardsModule___StyledRowFee4\",\n  componentId: \"sc-98apz2-9\"\n})([\"margin-bottom:\", \"px;\"], p => p._css6);\n\nvar _StyledRowFee3 = _styled(RowFee).withConfig({\n  displayName: \"RewardsModule___StyledRowFee3\",\n  componentId: \"sc-98apz2-10\"\n})([\"margin-bottom:\", \"px;\"], p => p._css3);\n\nvar _StyledRowFee2 = _styled(RowFee).withConfig({\n  displayName: \"RewardsModule___StyledRowFee2\",\n  componentId: \"sc-98apz2-11\"\n})([\"margin-bottom:\", \"px;\"], p => p._css2);\n\nvar _StyledRowFee = _styled(RowFee).withConfig({\n  displayName: \"RewardsModule___StyledRowFee\",\n  componentId: \"sc-98apz2-12\"\n})([\"margin-bottom:\", \"px;\"], p => p._css);\n\nvar _StyledDiv4 = _styled(\"div\").withConfig({\n  displayName: \"RewardsModule___StyledDiv4\",\n  componentId: \"sc-98apz2-13\"\n})([\"padding:\", \"px;&:not(:last-child){border-bottom:1px solid \", \";}\"], p => p._css17, p => p._css18);\n\nconst FeeSection = ({\n  children\n}) => {\n  const theme = useTheme();\n  return React.createElement(_StyledDiv4, {\n    _css17: 3 * GU,\n    _css18: theme.border,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383\n    },\n    __self: this\n  }, children);\n};\n\nfunction getTotalFees(fees, key = 'amount') {\n  return Array.isArray(fees) ? fees.reduce((acc, fee) => acc.add(fee[key]), bigNum(0)) : bigNum(0);\n}\n\nfunction getTotalSettledFees(arbitrableFees, appealFees) {\n  return [arbitrableFees, appealFees].map(fees => getTotalFees(fees, 'settledAmount')).reduce((acc, amount) => acc.add(amount), bigNum(0));\n}\n\nconst useTotalFeeRewards = (arbitrableFees = [], appealFees = [], subscriptionFees = []) => {\n  return useMemo(() => {\n    const [totalArbitrableFees, totalAppealFees, totalSubscriptionFees] = [arbitrableFees, appealFees, subscriptionFees].map(fees => getTotalFees(fees));\n    const totalSettledFees = getTotalSettledFees(arbitrableFees, appealFees);\n    return {\n      totalAppealFees,\n      totalArbitrableFees,\n      totalSettledFees,\n      totalSubscriptionFees\n    };\n  }, [appealFees, arbitrableFees, subscriptionFees]);\n};\n\nexport default RewardsModule;","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/Dashboard/RewardsModule.js"],"names":["React","useCallback","useMemo","Box","Button","GU","Help","Info","Link","textStyle","useTheme","Loading","NoRewards","useWallet","useCourtConfig","useJurorSubscriptionFees","addressesEqual","bigNum","formatTokenAmount","RewardsModule","memo","rewards","treasury","loading","onClaimRewards","wallet","feeToken","subscriptionFees","anjRewards","feeRewards","totalAppealFees","totalArbitrableFees","totalSettledFees","totalSubscriptionFees","useTotalFeeRewards","arbitrableFees","appealFees","treasuryToken","find","token","id","treasuryBalance","amount","totalDisputesFees","add","totalTreasuryFees","sub","totalFeeRewards","handleFormSubmit","event","preventDefault","account","hasRewardsToClaim","gt","showHeading","distribution","ANJRewards","anjToken","formattedAmount","decimals","symbol","DisputesFeeRewards","theme","totalArbitrableFormatted","totalAppealFormatted","help","SubscriptionFeeRewards","totalFees","TotalFees","totalFeesFormatted","border","DisputesFeeDistribution","surfaceContentSecondary","sort","d1","d2","disputeId","map","RowFee","label","isLabelLink","showPositive","props","positive","FeeSection","children","getTotalFees","fees","key","Array","isArray","reduce","acc","fee","getTotalSettledFees"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo } from 'react'\nimport {\n  Box,\n  Button,\n  GU,\n  Help,\n  Info,\n  Link,\n  textStyle,\n  useTheme,\n} from '@aragon/ui'\n\nimport Loading from '../Loading'\nimport NoRewards from './NoRewards'\n\nimport { useWallet } from '../../providers/Wallet'\nimport { useCourtConfig } from '../../providers/CourtConfig'\nimport useJurorSubscriptionFees from '../../hooks/useJurorSubscriptionFees'\n\nimport { addressesEqual } from '../../lib/web3-utils'\nimport { bigNum, formatTokenAmount } from '../../lib/math-utils'\n\n// anjRewards => ANJ => First settle with `onSettleReward()`, then withdraw\n// feeRewards => DAI =>  First settle with `onSettleReward()` or `onSettleAppealDeposit()`, then withdraw\n// subscriptions fees => DAI => Can be withdrawn directly from the CourtSubscription contract\n// Only after the rewards are settled can a juror withdraw them from the treasury (`onWithdraw()`)\n// As opposed to fee rewards, subscription fees are directly withdrawn to the juror's wallet when claimed\nconst RewardsModule = React.memo(function RewardsModule({\n  rewards,\n  treasury,\n  loading,\n  onClaimRewards,\n}) {\n  const wallet = useWallet()\n  const { feeToken } = useCourtConfig()\n\n  // Subscriptions are fetched directly from the subscriptions contract\n  const subscriptionFees = useJurorSubscriptionFees()\n  const { anjRewards, feeRewards } = rewards || {}\n\n  const {\n    totalAppealFees,\n    totalArbitrableFees,\n    totalSettledFees,\n    totalSubscriptionFees,\n  } = useTotalFeeRewards(\n    feeRewards?.arbitrableFees,\n    feeRewards?.appealFees,\n    subscriptionFees\n  )\n\n  // We'll get the total juror's balance held in the treasury\n  // TODO: feeToken can change over time, this means jurors could have multiple balances in the treasury (one for each fee token).\n  //       - Handle potential multiple fee token balances\n  const treasuryToken = treasury?.find(({ token }) =>\n    addressesEqual(token.id, feeToken.id)\n  )\n  const treasuryBalance = treasuryToken ? treasuryToken.amount : bigNum(0)\n\n  // Total dispute fees include appeal fees and arbitrable fees (fees paid by the creator of the dispute for the first round\n  // and fees paid by appealers for subsequent rounds)\n  const totalDisputesFees = totalArbitrableFees.add(totalAppealFees)\n\n  // All dispute fees are sent to the treasury after being settled\n  // Note that the total dispute fees could include already settled fees so we must discount them from the total treasury fees\n  const totalTreasuryFees = totalDisputesFees\n    .sub(totalSettledFees)\n    .add(treasuryBalance)\n  const totalFeeRewards = totalTreasuryFees.add(totalSubscriptionFees)\n\n  // Form submission\n  const handleFormSubmit = useCallback(\n    event => {\n      event.preventDefault()\n\n      if (!rewards) return\n\n      onClaimRewards(\n        wallet.account,\n        feeRewards.arbitrableFees,\n        feeRewards.appealFees,\n        totalTreasuryFees,\n        subscriptionFees,\n        feeToken.id\n      )\n    },\n    [\n      feeRewards,\n      feeToken,\n      onClaimRewards,\n      rewards,\n      subscriptionFees,\n      totalTreasuryFees,\n      wallet.account,\n    ]\n  )\n\n  const hasRewardsToClaim = anjRewards?.gt(0) || totalFeeRewards.gt(0)\n  const showHeading = !loading && hasRewardsToClaim\n\n  return (\n    <Box\n      heading={showHeading && 'Rewards'}\n      padding={hasRewardsToClaim ? 0 : 3 * GU}\n    >\n      {(() => {\n        if (loading) {\n          return <Loading height={150} size=\"large\" />\n        }\n\n        if (!hasRewardsToClaim) {\n          return <NoRewards />\n        }\n\n        return (\n          <div>\n            {rewards && anjRewards.gt(0) && <ANJRewards amount={anjRewards} />}\n            {totalFeeRewards.gt(0) && (\n              <FeeSection>\n                <form onSubmit={handleFormSubmit}>\n                  {totalSubscriptionFees.gt(0) && (\n                    <SubscriptionFeeRewards totalFees={totalSubscriptionFees} />\n                  )}\n                  {totalDisputesFees.gt(0) && (\n                    <DisputesFeeRewards\n                      totalAppealFees={totalAppealFees}\n                      totalArbitrableFees={totalArbitrableFees}\n                      distribution={feeRewards.distribution}\n                    />\n                  )}\n                  <TotalFees totalFees={totalFeeRewards} />\n                </form>\n              </FeeSection>\n            )}\n          </div>\n        )\n      })()}\n    </Box>\n  )\n})\n\nconst ANJRewards = ({ amount }) => {\n  const { anjToken } = useCourtConfig()\n\n  const formattedAmount = formatTokenAmount(\n    amount,\n    true,\n    anjToken.decimals,\n    true\n  )\n\n  return (\n    <FeeSection>\n      <RowFee\n        label=\"Ruling fees\"\n        amount={formattedAmount}\n        symbol={anjToken.symbol}\n        showPositive\n        css={`\n          margin-bottom: ${2 * GU}px;\n        `}\n      />\n      <Info>This amount will be sent to your inactive wallet</Info>\n    </FeeSection>\n  )\n}\n\nconst DisputesFeeRewards = ({\n  distribution,\n  totalAppealFees,\n  totalArbitrableFees,\n}) => {\n  const theme = useTheme()\n  const { feeToken } = useCourtConfig()\n  const { symbol, decimals } = feeToken\n\n  // Format total amounts\n  const totalArbitrableFormatted = formatTokenAmount(\n    totalArbitrableFees,\n    true,\n    decimals,\n    true\n  )\n  const totalAppealFormatted = formatTokenAmount(\n    totalAppealFees,\n    true,\n    decimals,\n    true\n  )\n\n  return (\n    <>\n      {totalArbitrableFees.gt(0) && (\n        <RowFee\n          label=\"Dispute fees\"\n          amount={totalArbitrableFormatted}\n          symbol={symbol}\n          showPositive\n          css={`\n            margin-bottom: ${2 * GU}px;\n          `}\n        />\n      )}\n      {totalAppealFees.gt(0) && (\n        <RowFee\n          label=\"Appeal fees\"\n          amount={totalAppealFormatted}\n          symbol={symbol}\n          showPositive\n          css={`\n            margin-bottom: ${2 * GU}px;\n          `}\n        />\n      )}\n      <div\n        css={`\n          display: flex;\n          align-items: center;\n        `}\n      >\n        <span\n          css={`\n            color: ${theme.help};\n            margin-right: ${1 * GU}px;\n          `}\n        >\n          Distribution\n        </span>\n        <Help\n          hint=\"Rewards per dispute\"\n          css={`\n            padding: 0;\n          `}\n        >\n          <DisputesFeeDistribution\n            symbol={symbol}\n            decimals={decimals}\n            distribution={distribution}\n          />\n        </Help>\n      </div>\n    </>\n  )\n}\n\nfunction SubscriptionFeeRewards({ totalFees }) {\n  const { feeToken } = useCourtConfig()\n  const formattedAmount = formatTokenAmount(\n    totalFees,\n    true,\n    feeToken.decimals,\n    true\n  )\n\n  return (\n    <RowFee\n      label=\"Subscriptions\"\n      amount={formattedAmount}\n      symbol={feeToken.symbol}\n      showPositive\n      css={`\n        margin-bottom: ${2 * GU}px;\n      `}\n    />\n  )\n}\n\nfunction TotalFees({ totalFees }) {\n  const theme = useTheme()\n  const { feeToken } = useCourtConfig()\n\n  const { symbol, decimals } = feeToken\n  const totalFeesFormatted = formatTokenAmount(totalFees, true, decimals, true)\n\n  return (\n    <div\n      css={`\n        border-top: 1px solid ${theme.border};\n        margin-top: ${2 * GU}px;\n        padding-top: ${2 * GU}px;\n      `}\n    >\n      <RowFee\n        label=\"Total rewards\"\n        amount={totalFeesFormatted}\n        symbol={symbol}\n        showPositive\n      />\n      <Button\n        mode=\"positive\"\n        type=\"submit\"\n        wide\n        css={`\n          margin-top: ${2 * GU}px;\n        `}\n      >\n        Claim rewards\n      </Button>\n    </div>\n  )\n}\n\nconst DisputesFeeDistribution = ({ distribution, symbol, decimals }) => {\n  const theme = useTheme()\n  return (\n    <div>\n      <h3\n        css={`\n          ${textStyle('label2')};\n          color: ${theme.surfaceContentSecondary};\n          margin-bottom: ${2 * GU}px;\n        `}\n      >\n        Rewards distribution per dispute\n      </h3>\n      {distribution\n        .sort((d1, d2) => d1.disputeId - d2.disputeId)\n        .map(({ disputeId, amount }) => {\n          const formattedAmount = formatTokenAmount(amount, false, decimals)\n\n          return (\n            <RowFee\n              key={disputeId}\n              css={`\n                ${textStyle('body2')};\n                margin-bottom: ${1 * GU}px;\n              `}\n              label={\n                <Link href={`#/disputes/${disputeId}`} external={false}>\n                  {`Dispute #${disputeId}`}\n                </Link>\n              }\n              isLabelLink\n              amount={formattedAmount}\n              symbol={symbol}\n              showPositive={false}\n            />\n          )\n        })}\n    </div>\n  )\n}\n\nconst RowFee = ({\n  label,\n  isLabelLink,\n  amount,\n  symbol,\n  showPositive,\n  ...props\n}) => {\n  const theme = useTheme()\n\n  return (\n    <div\n      css={`\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n\n        &:last-child {\n          margin-bottom: 0;\n        }\n      `}\n      {...props}\n    >\n      {isLabelLink ? label : <span>{label}</span>}\n\n      <span\n        css={`\n          ${showPositive && `color: ${theme.positive}`};\n        `}\n      >\n        {amount} {symbol}\n      </span>\n    </div>\n  )\n}\n\nconst FeeSection = ({ children }) => {\n  const theme = useTheme()\n  return (\n    <div\n      css={`\n        padding: ${3 * GU}px;\n\n        & :not(:last-child) {\n          border-bottom: 1px solid ${theme.border};\n        }\n      `}\n    >\n      {children}\n    </div>\n  )\n}\n\nfunction getTotalFees(fees, key = 'amount') {\n  return Array.isArray(fees)\n    ? fees.reduce((acc, fee) => acc.add(fee[key]), bigNum(0))\n    : bigNum(0)\n}\n\nfunction getTotalSettledFees(arbitrableFees, appealFees) {\n  return [arbitrableFees, appealFees]\n    .map(fees => getTotalFees(fees, 'settledAmount'))\n    .reduce((acc, amount) => acc.add(amount), bigNum(0))\n}\n\nconst useTotalFeeRewards = (\n  arbitrableFees = [],\n  appealFees = [],\n  subscriptionFees = []\n) => {\n  return useMemo(() => {\n    const [totalArbitrableFees, totalAppealFees, totalSubscriptionFees] = [\n      arbitrableFees,\n      appealFees,\n      subscriptionFees,\n    ].map(fees => getTotalFees(fees))\n\n    const totalSettledFees = getTotalSettledFees(arbitrableFees, appealFees)\n\n    return {\n      totalAppealFees,\n      totalArbitrableFees,\n      totalSettledFees,\n      totalSubscriptionFees,\n    }\n  }, [appealFees, arbitrableFees, subscriptionFees])\n}\n\nexport default RewardsModule\n"]},"metadata":{},"sourceType":"module"}