{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n}), exports.default = void 0;\n\nvar _bool = _interopRequireDefault(require(\"./bool\")),\n    _int = _interopRequireDefault(require(\"./int\")),\n    _uint = _interopRequireDefault(require(\"./uint\")),\n    _address = _interopRequireDefault(require(\"./address\")),\n    _bytes = _interopRequireDefault(require(\"./bytes\")),\n    _string = _interopRequireDefault(require(\"./string\")),\n    _fixed = _interopRequireDefault(require(\"./fixed\")),\n    _ufixed = _interopRequireDefault(require(\"./ufixed\")),\n    _default = {\n  types: {\n    bool: _bool.default,\n    int: _int.default,\n    uint: _uint.default,\n    address: _address.default,\n    bytes: _bytes.default,\n    string: _string.default,\n    fixed: _fixed.default,\n    ufixed: _ufixed.default\n  },\n\n  isType(identifier) {\n    const typeNames = Object.keys(this.types);\n\n    for (let typeName of typeNames) if (this.types[typeName].isType(identifier)) return !0;\n\n    return !1;\n  },\n\n  isInteger(identifier) {\n    return this.types.int.isType(identifier) || this.types.uint.isType(identifier);\n  },\n\n  isAddress(identifier) {\n    return this.types.address.isType(identifier) || this.types.bytes.isType(identifier) && 20 >= this.types.bytes.size(identifier);\n  }\n\n};\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}