{"ast":null,"code":"import _styled2 from \"styled-components\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/saleemfareed/oneds/court-dashboard/src/components/Disputes/panels/RevealPanel.js\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Button, Field, GU, Info, TextInput } from '@aragon/ui';\nimport { useWallet } from '../../../providers/Wallet';\nimport { getJurorDraft } from '../../../utils/juror-draft-utils';\nimport { getDisputeLastRound } from '../../../utils/dispute-utils';\nimport { getCodeFromLocalStorage, getOutcomeFromCommitment, isValidOutcome } from '../../../utils/crvoting-utils';\n\nvar _StyledTextInput = _styled(TextInput).withConfig({\n  displayName: \"RevealPanel___StyledTextInput\",\n  componentId: \"sc-12i709o-0\"\n})([\"height:\", \"px;\"], p => p._css);\n\nvar _StyledInfo = _styled(Info).withConfig({\n  displayName: \"RevealPanel___StyledInfo\",\n  componentId: \"sc-12i709o-1\"\n})([\"margin-bottom:\", \"px;\"], p => p._css2);\n\nconst RevealPanel = React.memo(function RevealPanel({\n  dispute,\n  onDone,\n  onReveal\n}) {\n  const wallet = useWallet();\n  const [error, setError] = useState(null);\n  const [password, setPassword] = useState('');\n  const lastRound = getDisputeLastRound(dispute);\n  const jurorDraft = getJurorDraft(lastRound, wallet.account);\n  const handlePasswordChange = useCallback(event => {\n    setError(null);\n    setPassword(event.target.value);\n  }, []);\n  const validatePassword = useCallback(() => {\n    const outcome = getOutcomeFromCommitment(jurorDraft.commitment, password);\n\n    if (!isValidOutcome(outcome)) {\n      return {\n        error: 'Invalid one time code'\n      };\n    }\n\n    return {\n      outcome\n    };\n  }, [jurorDraft.commitment, password]);\n  const handleReveal = useCallback(event => {\n    event.preventDefault();\n    const {\n      outcome,\n      error\n    } = validatePassword();\n\n    if (error) {\n      return setError(error);\n    }\n\n    onDone();\n    onReveal(dispute.id, dispute.lastRoundId, wallet.account, outcome, password);\n  }, [dispute.id, dispute.lastRoundId, onDone, onReveal, password, validatePassword, wallet.account]);\n  useEffect(() => {\n    const oneTimeCode = getCodeFromLocalStorage(wallet.account, dispute.id);\n\n    if (oneTimeCode) {\n      setPassword(oneTimeCode);\n    }\n  }, [dispute.id, wallet.account]);\n  return React.createElement(\"form\", {\n    onSubmit: handleReveal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Field, {\n    label: \"One-time-use code\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(_StyledTextInput, {\n    value: password,\n    multiline: true,\n    wide: true,\n    onChange: handlePasswordChange,\n    _css: 11 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), error && React.createElement(_StyledInfo, {\n    mode: \"error\",\n    _css2: 2 * GU,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, error), React.createElement(Button, {\n    type: \"submit\",\n    wide: true,\n    mode: \"strong\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Reveal your vote\"));\n});\nexport default RevealPanel;","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/Disputes/panels/RevealPanel.js"],"names":["React","useCallback","useEffect","useState","Button","Field","GU","Info","TextInput","useWallet","getJurorDraft","getDisputeLastRound","getCodeFromLocalStorage","getOutcomeFromCommitment","isValidOutcome","RevealPanel","memo","dispute","onDone","onReveal","wallet","error","setError","password","setPassword","lastRound","jurorDraft","account","handlePasswordChange","event","target","value","validatePassword","outcome","commitment","handleReveal","preventDefault","id","lastRoundId","oneTimeCode"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\nimport { Button, Field, GU, Info, TextInput } from '@aragon/ui'\nimport { useWallet } from '../../../providers/Wallet'\nimport { getJurorDraft } from '../../../utils/juror-draft-utils'\nimport { getDisputeLastRound } from '../../../utils/dispute-utils'\nimport {\n  getCodeFromLocalStorage,\n  getOutcomeFromCommitment,\n  isValidOutcome,\n} from '../../../utils/crvoting-utils'\n\nconst RevealPanel = React.memo(function RevealPanel({\n  dispute,\n  onDone,\n  onReveal,\n}) {\n  const wallet = useWallet()\n  const [error, setError] = useState(null)\n  const [password, setPassword] = useState('')\n  const lastRound = getDisputeLastRound(dispute)\n\n  const jurorDraft = getJurorDraft(lastRound, wallet.account)\n\n  const handlePasswordChange = useCallback(event => {\n    setError(null)\n    setPassword(event.target.value)\n  }, [])\n\n  const validatePassword = useCallback(() => {\n    const outcome = getOutcomeFromCommitment(jurorDraft.commitment, password)\n    if (!isValidOutcome(outcome)) {\n      return { error: 'Invalid one time code' }\n    }\n\n    return { outcome }\n  }, [jurorDraft.commitment, password])\n\n  const handleReveal = useCallback(\n    event => {\n      event.preventDefault()\n\n      const { outcome, error } = validatePassword()\n      if (error) {\n        return setError(error)\n      }\n\n      onDone()\n      onReveal(\n        dispute.id,\n        dispute.lastRoundId,\n        wallet.account,\n        outcome,\n        password\n      )\n    },\n    [\n      dispute.id,\n      dispute.lastRoundId,\n      onDone,\n      onReveal,\n      password,\n      validatePassword,\n      wallet.account,\n    ]\n  )\n\n  useEffect(() => {\n    const oneTimeCode = getCodeFromLocalStorage(wallet.account, dispute.id)\n    if (oneTimeCode) {\n      setPassword(oneTimeCode)\n    }\n  }, [dispute.id, wallet.account])\n\n  return (\n    <form onSubmit={handleReveal}>\n      <Field label=\"One-time-use code\">\n        <TextInput\n          value={password}\n          css={`\n            height: ${11 * GU}px;\n          `}\n          multiline\n          wide\n          onChange={handlePasswordChange}\n        />\n      </Field>\n      {error && (\n        <Info\n          css={`\n            margin-bottom: ${2 * GU}px;\n          `}\n          mode=\"error\"\n        >\n          {error}\n        </Info>\n      )}\n      <Button type=\"submit\" wide mode=\"strong\">\n        Reveal your vote\n      </Button>\n    </form>\n  )\n})\n\nexport default RevealPanel\n"]},"metadata":{},"sourceType":"module"}