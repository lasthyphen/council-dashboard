{"ast":null,"code":"import _styled3 from \"styled-components\";\nimport _styled2 from \"styled-components\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/saleemfareed/oneds/court-dashboard/src/components/Tasks/TasksTable.js\";\nimport React from 'react';\nimport { DataView, GU, Link, textStyle, useTheme, useViewport } from '@aragon/ui';\nimport IdentityBadge from '../IdentityBadge';\nimport TasksFilters from './TasksFilters';\nimport TaskDueDate from './TaskDueDate';\nimport noResults from \"../../assets/noResults.svg\";\nconst ENTRIES_PER_PAGE = 6;\n\nvar _StyledDiv = _styled(\"div\").withConfig({\n  displayName: \"TasksTable___StyledDiv\",\n  componentId: \"pne6u-0\"\n})([\"padding-bottom:\", \"px;display:flex;align-items:center;justify-content:space-between;\"], p => p._css);\n\nvar _StyledDiv2 = _styled(\"div\").withConfig({\n  displayName: \"TasksTable___StyledDiv2\",\n  componentId: \"pne6u-1\"\n})([\"color:\", \";\", \";\"], p => p._css2, p => p._css3);\n\nvar _StyledSpan = _styled(\"span\").withConfig({\n  displayName: \"TasksTable___StyledSpan\",\n  componentId: \"pne6u-2\"\n})([\"\", \"\"], p => p._css4);\n\nconst TaskTable = React.memo(function TaskTable({\n  tasks,\n  emptyFilterResults,\n  onClearFilters,\n  dateRangeFilter,\n  onDateRangeChange,\n  phaseFilter,\n  onPhaseChange,\n  phaseTypes,\n  onlyTable\n}) {\n  const theme = useTheme();\n  const {\n    below\n  } = useViewport();\n  const compactMode = below('medium');\n  return React.createElement(DataView, {\n    entriesPerPage: ENTRIES_PER_PAGE,\n    heading: React.createElement(React.Fragment, null, React.createElement(_StyledDiv, {\n      _css: 2 * GU,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(_StyledDiv2, {\n      _css2: theme.content,\n      _css3: textStyle('body1'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Upcoming tasks\")), !compactMode && !onlyTable && React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(TasksFilters, {\n      dateRangeFilter: dateRangeFilter,\n      onDateRangeChange: onDateRangeChange,\n      phaseFilter: phaseFilter,\n      onPhaseChange: onPhaseChange,\n      phaseTypes: phaseTypes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }))),\n    fields: emptyFilterResults ? [] : ['Action', 'Dispute', 'Assigned to juror', 'Due in'],\n    entries: tasks,\n    renderEntry: ({\n      phase,\n      disputeId,\n      juror,\n      dueDate\n    }) => {\n      return [React.createElement(_StyledSpan, {\n        _css4: textStyle('body2'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, phase), React.createElement(Link, {\n        href: `#/disputes/${disputeId}`,\n        external: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Dispute #\", disputeId), React.createElement(IdentityBadge, {\n        entity: juror,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(TaskDueDate, {\n        dueDate: dueDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })];\n    },\n    status: emptyFilterResults ? 'empty-filters' : 'default',\n    emptyState: {\n      'empty-filters': {\n        displayLoader: false,\n        title: 'No results found',\n        subtitle: 'We couldn’t find any task matching your filter selection.',\n        illustration: React.createElement(\"img\", {\n          src: noResults,\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }),\n        clearLabel: 'Clear filters'\n      }\n    },\n    onStatusEmptyClear: onClearFilters,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  });\n});\nexport default TaskTable;","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/Tasks/TasksTable.js"],"names":["React","DataView","GU","Link","textStyle","useTheme","useViewport","IdentityBadge","TasksFilters","TaskDueDate","ENTRIES_PER_PAGE","TaskTable","memo","tasks","emptyFilterResults","onClearFilters","dateRangeFilter","onDateRangeChange","phaseFilter","onPhaseChange","phaseTypes","onlyTable","theme","below","compactMode","content","phase","disputeId","juror","dueDate","displayLoader","title","subtitle","illustration","noResults","clearLabel"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n  DataView,\n  GU,\n  Link,\n  textStyle,\n  useTheme,\n  useViewport,\n} from '@aragon/ui'\nimport IdentityBadge from '../IdentityBadge'\nimport TasksFilters from './TasksFilters'\nimport TaskDueDate from './TaskDueDate'\n\nimport noResults from '../../assets/noResults.svg'\n\nconst ENTRIES_PER_PAGE = 6\n\nconst TaskTable = React.memo(function TaskTable({\n  tasks,\n  emptyFilterResults,\n  onClearFilters,\n  dateRangeFilter,\n  onDateRangeChange,\n  phaseFilter,\n  onPhaseChange,\n  phaseTypes,\n  onlyTable,\n}) {\n  const theme = useTheme()\n  const { below } = useViewport()\n  const compactMode = below('medium')\n\n  return (\n    <DataView\n      entriesPerPage={ENTRIES_PER_PAGE}\n      heading={\n        <>\n          <div\n            css={`\n              padding-bottom: ${2 * GU}px;\n              display: flex;\n              align-items: center;\n              justify-content: space-between;\n            `}\n          >\n            <div\n              css={`\n                color: ${theme.content};\n                ${textStyle('body1')};\n              `}\n            >\n              Upcoming tasks\n            </div>\n          </div>\n          {!compactMode && !onlyTable && (\n            <React.Fragment>\n              <TasksFilters\n                dateRangeFilter={dateRangeFilter}\n                onDateRangeChange={onDateRangeChange}\n                phaseFilter={phaseFilter}\n                onPhaseChange={onPhaseChange}\n                phaseTypes={phaseTypes}\n              />\n            </React.Fragment>\n          )}\n        </>\n      }\n      fields={\n        emptyFilterResults\n          ? []\n          : ['Action', 'Dispute', 'Assigned to juror', 'Due in']\n      }\n      entries={tasks}\n      renderEntry={({ phase, disputeId, juror, dueDate }) => {\n        return [\n          <span\n            css={`\n              ${textStyle('body2')}\n            `}\n          >\n            {phase}\n          </span>,\n          <Link href={`#/disputes/${disputeId}`} external={false}>\n            Dispute #{disputeId}\n          </Link>,\n          <IdentityBadge entity={juror} />,\n          <TaskDueDate dueDate={dueDate} />,\n        ]\n      }}\n      status={emptyFilterResults ? 'empty-filters' : 'default'}\n      emptyState={{\n        'empty-filters': {\n          displayLoader: false,\n          title: 'No results found',\n          subtitle: 'We couldn’t find any task matching your filter selection.',\n          illustration: <img src={noResults} alt=\"\" />,\n          clearLabel: 'Clear filters',\n        },\n      }}\n      onStatusEmptyClear={onClearFilters}\n    />\n  )\n})\n\nexport default TaskTable\n"]},"metadata":{},"sourceType":"module"}