{"ast":null,"code":"var _toConsumableArray = require(\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar getProtocol = function getProtocol(location) {\n  if (location === 'injected') return 'injected';\n  if (location.endsWith('.ipc')) return 'ipc';\n  if (location.startsWith('wss://') || location.startsWith('ws://')) return 'ws';\n  if (location.startsWith('https://') || location.startsWith('http://')) return 'http';\n  return '';\n};\n\nmodule.exports = function (targets, presets) {\n  var _ref;\n\n  return (_ref = []).concat.apply(_ref, _toConsumableArray([].concat(targets).map(function (provider) {\n    if (presets[provider]) {\n      return presets[provider].map(function (location) {\n        return {\n          type: provider,\n          location: location,\n          protocol: getProtocol(location)\n        };\n      });\n    } else {\n      return {\n        type: 'custom',\n        location: provider,\n        protocol: getProtocol(provider)\n      };\n    }\n  }))).filter(function (provider) {\n    if (provider.protocol || provider.type === 'injected') {\n      return true;\n    } else {\n      console.log('eth-provider | Invalid provider preset/location: \"' + provider.location + '\"');\n      return false;\n    }\n  });\n};","map":null,"metadata":{},"sourceType":"script"}