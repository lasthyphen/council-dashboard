{"ast":null,"code":"import _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/saleemfareed/oneds/court-dashboard/src/components/Disputes/DisputeStatus.js\";\nimport React from 'react';\nimport { useTheme } from '@aragon/ui';\nimport { Status } from '../../types/dispute-status-types';\n\nconst getStatusAttributes = (dispute, theme) => {\n  if (dispute.status === Status.Open) {\n    return {\n      label: 'Open',\n      color: '#22B187',\n      background: 'rgba(53, 214, 167, 0.1)'\n    };\n  }\n\n  if (dispute.status === Status.Closed) {\n    return {\n      label: 'Closed',\n      color: theme.content,\n      background: 'rgba(200, 215, 234, 0.4)' // TODO: use theme when available\n\n    };\n  } // Voided dispute\n\n\n  return {\n    label: 'VOID',\n    color: theme.accent,\n    background: `linear-gradient(14deg, ${theme.accentStart.alpha(0.3)} 0, ${theme.accentEnd.alpha(0.3)} 88%)`\n  };\n};\n\nvar _StyledSpan = _styled(\"span\").withConfig({\n  displayName: \"DisputeStatus___StyledSpan\",\n  componentId: \"sc-1e240t8-0\"\n})([\"padding:1px 16px;border-radius:100px;text-transform:uppercase;font-size:12px;color:\", \";background:\", \";margin-top:2px;\"], p => p._css, p => p._css2);\n\nexport default function DisputeStatus({\n  dispute,\n  ...props\n}) {\n  const theme = useTheme();\n  const {\n    label,\n    color,\n    background\n  } = getStatusAttributes(dispute, theme);\n  return React.createElement(_StyledSpan, Object.assign({}, props, {\n    _css: color,\n    _css2: background,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), label);\n}","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/Disputes/DisputeStatus.js"],"names":["React","useTheme","Status","getStatusAttributes","dispute","theme","status","Open","label","color","background","Closed","content","accent","accentStart","alpha","accentEnd","DisputeStatus","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA,SAASC,MAAT,QAAuB,kCAAvB;;AAEA,MAAMC,mBAAmB,GAAG,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC9C,MAAID,OAAO,CAACE,MAAR,KAAmBJ,MAAM,CAACK,IAA9B,EAAoC;AAClC,WAAO;AACLC,MAAAA,KAAK,EAAE,MADF;AAELC,MAAAA,KAAK,EAAE,SAFF;AAGLC,MAAAA,UAAU,EAAE;AAHP,KAAP;AAKD;;AAED,MAAIN,OAAO,CAACE,MAAR,KAAmBJ,MAAM,CAACS,MAA9B,EAAsC;AACpC,WAAO;AACLH,MAAAA,KAAK,EAAE,QADF;AAELC,MAAAA,KAAK,EAAEJ,KAAK,CAACO,OAFR;AAGLF,MAAAA,UAAU,EAAE,0BAHP,CAGmC;;AAHnC,KAAP;AAKD,GAf6C,CAiB9C;;;AACA,SAAO;AACLF,IAAAA,KAAK,EAAE,MADF;AAELC,IAAAA,KAAK,EAAEJ,KAAK,CAACQ,MAFR;AAGLH,IAAAA,UAAU,EAAG,0BAAyBL,KAAK,CAACS,WAAN,CAAkBC,KAAlB,CACpC,GADoC,CAEpC,OAAMV,KAAK,CAACW,SAAN,CAAgBD,KAAhB,CAAsB,GAAtB,CAA2B;AAL9B,GAAP;AAOD,CAzBD;;;;;;;AA2BA,eAAe,SAASE,aAAT,CAAuB;AAAEb,EAAAA,OAAF;AAAW,KAAGc;AAAd,CAAvB,EAA8C;AAC3D,QAAMb,KAAK,GAAGJ,QAAQ,EAAtB;AACA,QAAM;AAAEO,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB,MAA+BP,mBAAmB,CAACC,OAAD,EAAUC,KAAV,CAAxD;AAEA,SACE,mDAUMa,KAVN;AAAA,UAMaT,KANb;AAAA,WAOkBC,UAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAYGF,KAZH,CADF;AAgBD","sourcesContent":["import React from 'react'\nimport { useTheme } from '@aragon/ui'\n\nimport { Status } from '../../types/dispute-status-types'\n\nconst getStatusAttributes = (dispute, theme) => {\n  if (dispute.status === Status.Open) {\n    return {\n      label: 'Open',\n      color: '#22B187',\n      background: 'rgba(53, 214, 167, 0.1)',\n    }\n  }\n\n  if (dispute.status === Status.Closed) {\n    return {\n      label: 'Closed',\n      color: theme.content,\n      background: 'rgba(200, 215, 234, 0.4)', // TODO: use theme when available\n    }\n  }\n\n  // Voided dispute\n  return {\n    label: 'VOID',\n    color: theme.accent,\n    background: `linear-gradient(14deg, ${theme.accentStart.alpha(\n      0.3\n    )} 0, ${theme.accentEnd.alpha(0.3)} 88%)`,\n  }\n}\n\nexport default function DisputeStatus({ dispute, ...props }) {\n  const theme = useTheme()\n  const { label, color, background } = getStatusAttributes(dispute, theme)\n\n  return (\n    <span\n      css={`\n        padding: 1px 16px;\n        border-radius: 100px;\n        text-transform: uppercase;\n        font-size: 12px;\n        color: ${color};\n        background: ${background};\n        margin-top: 2px;\n      `}\n      {...props}\n    >\n      {label}\n    </span>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}