{"ast":null,"code":"import _styled2 from \"styled-components\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/saleemfareed/oneds/court-dashboard/src/components/Disputes/DisputeOutcomeText.js\";\nimport React, { useMemo } from 'react';\nimport { textStyle, useTheme, IconClose, IconCheck } from '@aragon/ui';\nimport { Phase as DisputePhase } from '../../types/dispute-status-types';\nimport { appealRulingToString, finalRulingToString, juryOutcomeToString, OUTCOMES } from '../../utils/crvoting-utils';\n\nvar _StyledDiv = _styled(\"div\").withConfig({\n  displayName: \"DisputeOutcomeText___StyledDiv\",\n  componentId: \"sascqc-0\"\n})([\"color:\", \";display:flex;align-items:center;\"], p => p._css);\n\nvar _StyledSpan = _styled(\"span\").withConfig({\n  displayName: \"DisputeOutcomeText___StyledSpan\",\n  componentId: \"sascqc-1\"\n})([\"\", \"\"], p => p._css2);\n\nfunction DisputeOutcomeText({\n  action,\n  isFinalRuling,\n  outcome,\n  phase,\n  verbose = false\n}) {\n  const {\n    Icon,\n    color\n  } = useOutcomeStyle(outcome);\n  const outcomeText = useMemo(() => {\n    if (isFinalRuling) {\n      return finalRulingToString(outcome);\n    }\n\n    if (phase === DisputePhase.AppealRuling || phase === DisputePhase.ConfirmAppeal) {\n      const confirm = phase === DisputePhase.ConfirmAppeal;\n      return appealRulingToString(outcome, confirm);\n    }\n\n    return juryOutcomeToString(outcome);\n  }, [isFinalRuling, outcome, phase]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(_StyledDiv, {\n    _css: color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    size: \"medium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(_StyledSpan, {\n    _css2: textStyle('body2'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, outcomeText, verbose && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \": \", action))));\n}\n\nfunction useOutcomeStyle(outcome) {\n  const theme = useTheme();\n\n  if (!outcome || outcome === OUTCOMES.Refused) {\n    return {\n      Icon: IconClose,\n      color: theme.disabledIcon\n    };\n  }\n\n  if (outcome === OUTCOMES.Against) {\n    return {\n      Icon: IconClose,\n      color: theme.negative\n    };\n  }\n\n  if (outcome === OUTCOMES.InFavor) {\n    return {\n      Icon: IconCheck,\n      color: theme.positive\n    };\n  }\n}\n\nexport default DisputeOutcomeText;","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/Disputes/DisputeOutcomeText.js"],"names":["React","useMemo","textStyle","useTheme","IconClose","IconCheck","Phase","DisputePhase","appealRulingToString","finalRulingToString","juryOutcomeToString","OUTCOMES","DisputeOutcomeText","action","isFinalRuling","outcome","phase","verbose","Icon","color","useOutcomeStyle","outcomeText","AppealRuling","ConfirmAppeal","confirm","theme","Refused","disabledIcon","Against","negative","InFavor","positive"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,SAA9B,EAAyCC,SAAzC,QAA0D,YAA1D;AAEA,SAASC,KAAK,IAAIC,YAAlB,QAAsC,kCAAtC;AACA,SACEC,oBADF,EAEEC,mBAFF,EAGEC,mBAHF,EAIEC,QAJF,QAKO,4BALP;;;;;;;;;;;;AAOA,SAASC,kBAAT,CAA4B;AAC1BC,EAAAA,MAD0B;AAE1BC,EAAAA,aAF0B;AAG1BC,EAAAA,OAH0B;AAI1BC,EAAAA,KAJ0B;AAK1BC,EAAAA,OAAO,GAAG;AALgB,CAA5B,EAMG;AACD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBC,eAAe,CAACL,OAAD,CAAvC;AAEA,QAAMM,WAAW,GAAGpB,OAAO,CAAC,MAAM;AAChC,QAAIa,aAAJ,EAAmB;AACjB,aAAOL,mBAAmB,CAACM,OAAD,CAA1B;AACD;;AAED,QACEC,KAAK,KAAKT,YAAY,CAACe,YAAvB,IACAN,KAAK,KAAKT,YAAY,CAACgB,aAFzB,EAGE;AACA,YAAMC,OAAO,GAAGR,KAAK,KAAKT,YAAY,CAACgB,aAAvC;AACA,aAAOf,oBAAoB,CAACO,OAAD,EAAUS,OAAV,CAA3B;AACD;;AAED,WAAOd,mBAAmB,CAACK,OAAD,CAA1B;AACD,GAd0B,EAcxB,CAACD,aAAD,EAAgBC,OAAhB,EAAyBC,KAAzB,CAdwB,CAA3B;AAgBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,UAEaG,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE;AAAA,WAEMjB,SAAS,CAAC,OAAD,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGmB,WALH,EAMGJ,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAASJ,MAAT,CANd,CARF,CADF,CADF;AAqBD;;AAED,SAASO,eAAT,CAAyBL,OAAzB,EAAkC;AAChC,QAAMU,KAAK,GAAGtB,QAAQ,EAAtB;;AAEA,MAAI,CAACY,OAAD,IAAYA,OAAO,KAAKJ,QAAQ,CAACe,OAArC,EAA8C;AAC5C,WAAO;AACLR,MAAAA,IAAI,EAAEd,SADD;AAELe,MAAAA,KAAK,EAAEM,KAAK,CAACE;AAFR,KAAP;AAID;;AAED,MAAIZ,OAAO,KAAKJ,QAAQ,CAACiB,OAAzB,EAAkC;AAChC,WAAO;AACLV,MAAAA,IAAI,EAAEd,SADD;AAELe,MAAAA,KAAK,EAAEM,KAAK,CAACI;AAFR,KAAP;AAID;;AAED,MAAId,OAAO,KAAKJ,QAAQ,CAACmB,OAAzB,EAAkC;AAChC,WAAO;AACLZ,MAAAA,IAAI,EAAEb,SADD;AAELc,MAAAA,KAAK,EAAEM,KAAK,CAACM;AAFR,KAAP;AAID;AACF;;AAED,eAAenB,kBAAf","sourcesContent":["import React, { useMemo } from 'react'\nimport { textStyle, useTheme, IconClose, IconCheck } from '@aragon/ui'\n\nimport { Phase as DisputePhase } from '../../types/dispute-status-types'\nimport {\n  appealRulingToString,\n  finalRulingToString,\n  juryOutcomeToString,\n  OUTCOMES,\n} from '../../utils/crvoting-utils'\n\nfunction DisputeOutcomeText({\n  action,\n  isFinalRuling,\n  outcome,\n  phase,\n  verbose = false,\n}) {\n  const { Icon, color } = useOutcomeStyle(outcome)\n\n  const outcomeText = useMemo(() => {\n    if (isFinalRuling) {\n      return finalRulingToString(outcome)\n    }\n\n    if (\n      phase === DisputePhase.AppealRuling ||\n      phase === DisputePhase.ConfirmAppeal\n    ) {\n      const confirm = phase === DisputePhase.ConfirmAppeal\n      return appealRulingToString(outcome, confirm)\n    }\n\n    return juryOutcomeToString(outcome)\n  }, [isFinalRuling, outcome, phase])\n\n  return (\n    <div>\n      <div\n        css={`\n          color: ${color};\n          display: flex;\n          align-items: center;\n        `}\n      >\n        <Icon size=\"medium\" />\n        <span\n          css={`\n            ${textStyle('body2')}\n          `}\n        >\n          {outcomeText}\n          {verbose && <span>: {action}</span>}\n        </span>\n      </div>\n    </div>\n  )\n}\n\nfunction useOutcomeStyle(outcome) {\n  const theme = useTheme()\n\n  if (!outcome || outcome === OUTCOMES.Refused) {\n    return {\n      Icon: IconClose,\n      color: theme.disabledIcon,\n    }\n  }\n\n  if (outcome === OUTCOMES.Against) {\n    return {\n      Icon: IconClose,\n      color: theme.negative,\n    }\n  }\n\n  if (outcome === OUTCOMES.InFavor) {\n    return {\n      Icon: IconCheck,\n      color: theme.positive,\n    }\n  }\n}\n\nexport default DisputeOutcomeText\n"]},"metadata":{},"sourceType":"module"}