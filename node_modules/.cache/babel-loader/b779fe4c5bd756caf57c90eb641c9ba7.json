{"ast":null,"code":"import _defineProperty from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/defineProperty\";var _voteOptionStringMapp,_appealOptionStringMa,_outcomeStringMapping,_appealRulingStringMa,_finalRulingStringMap;import{keccak256,soliditySha3}from'../lib/web3-utils';import{bigNum}from'../lib/math-utils';export var OUTCOMES={Missing:0,Leaked:1,Refused:2,Against:3,InFavor:4};var VALID_OUTCOMES=[OUTCOMES.Refused,OUTCOMES.Against,OUTCOMES.InFavor];export var VOTE_OPTION_REFUSE=OUTCOMES.Refused;export var VOTE_OPTION_AGAINST=OUTCOMES.Against;export var VOTE_OPTION_IN_FAVOR=OUTCOMES.InFavor;export var NOBODY_APPEALED='Nobody appealed';export var NOBODY_CONFIRMED='No confirmation';var voteOptionStringMapping=(_voteOptionStringMapp={},_defineProperty(_voteOptionStringMapp,VOTE_OPTION_REFUSE,'REFUSE TO VOTE'),_defineProperty(_voteOptionStringMapp,VOTE_OPTION_AGAINST,'BLOCK ACTION'),_defineProperty(_voteOptionStringMapp,VOTE_OPTION_IN_FAVOR,'ALLOW ACTION'),_voteOptionStringMapp);export function voteOptionToString(outcome){return voteOptionStringMapping[outcome];}var appealOptionStringMapping=(_appealOptionStringMa={},_defineProperty(_appealOptionStringMa,VOTE_OPTION_REFUSE,'Refuse'),_defineProperty(_appealOptionStringMa,VOTE_OPTION_AGAINST,'Block action'),_defineProperty(_appealOptionStringMa,VOTE_OPTION_IN_FAVOR,'Allow action'),_appealOptionStringMa);export function appealOptionToString(outcome){return appealOptionStringMapping[outcome];}var outcomeStringMapping=(_outcomeStringMapping={},_defineProperty(_outcomeStringMapping,OUTCOMES.Leaked,'Invalid ruling'),_defineProperty(_outcomeStringMapping,OUTCOMES.Refused,'Refused to vote'),_defineProperty(_outcomeStringMapping,OUTCOMES.Against,'Blocked action'),_defineProperty(_outcomeStringMapping,OUTCOMES.InFavor,'Allowed action'),_outcomeStringMapping);export function juryOutcomeToString(outcome){if(!outcome){return outcomeStringMapping[OUTCOMES.Refused];}return outcomeStringMapping[outcome];}var appealRulingStringMapping=(_appealRulingStringMa={},_defineProperty(_appealRulingStringMa,OUTCOMES.Leaked,'Invalid ruling'),_defineProperty(_appealRulingStringMa,OUTCOMES.Refused,'Refused'),_defineProperty(_appealRulingStringMa,OUTCOMES.Against,'Blocked action'),_defineProperty(_appealRulingStringMa,OUTCOMES.InFavor,'Allowed action'),_appealRulingStringMa);export function appealRulingToString(outcome,confirm){if(!outcome){return confirm?NOBODY_CONFIRMED:NOBODY_APPEALED;}return appealRulingStringMapping[outcome];}var finalRulingStringMapping=(_finalRulingStringMap={},_defineProperty(_finalRulingStringMap,OUTCOMES.Leaked,'Invalid ruling'),_defineProperty(_finalRulingStringMap,OUTCOMES.Refused,'Refused'),_defineProperty(_finalRulingStringMap,OUTCOMES.Against,'Blocked action'),_defineProperty(_finalRulingStringMap,OUTCOMES.InFavor,'Allowed action'),_finalRulingStringMap);export function finalRulingToString(outcome){if(!outcome){return finalRulingStringMapping[OUTCOMES.refused];}return finalRulingStringMapping[outcome];}/**\n *\n * @param {String} outcome String representation of the outcome\n * @returns {Number} corresponding outcome number\n */export function getOutcomeNumber(outcome){return OUTCOMES[outcome];}/**\n *\n * @param {bytes} commitment vote commitment\n * @param {bytes} password password used to get the commitment\n * @returns {Number} outcome\n */export function getOutcomeFromCommitment(commitment,password){return VALID_OUTCOMES.find(function(option){return hashVote(option,password)===commitment;});}/**\n * returns all possible appeal ruling options\n * @param {Number} currentOutcome current round outcome\n * @returns {Array} Array of appeal ruling options\n */export function getAppealRulingOptions(){var currentOutcome=arguments.length>0&&arguments[0]!==undefined?arguments[0]:OUTCOMES.Refused;return VALID_OUTCOMES.filter(function(outcome){return outcome!==currentOutcome;}).map(function(outcome){return{outcome:outcome,description:appealOptionToString(outcome)};});}export function filterByValidOutcome(totalValidOutcomes){return VALID_OUTCOMES.map(function(outcomeFilter){return{outcomes:totalValidOutcomes.filter(function(_ref){var outcome=_ref.outcome;return outcome===outcomeFilter;}),outcome:outcomeFilter};});}export function getVoteId(disputeId,roundId){return bigNum(2).pow(bigNum(128)).mul(bigNum(disputeId)).add(bigNum(roundId));}export function hashPassword(password){return keccak256(password);}export function hashVote(outcome,password){return soliditySha3(['uint8','bytes32'],[outcome,hashPassword(password)]);}/**\n *\n * @param {Number} outcome vote outcome\n * @returns {Boolean} True if outcome is valid\n */export function isValidOutcome(outcome){return VALID_OUTCOMES[0]<=outcome&&outcome<=VALID_OUTCOMES[VALID_OUTCOMES.length-1];}export function isvoteLeaked(outcome){if(!outcome)return false;return outcome===OUTCOMES.Leaked;}export function getTotalOutcomeWeight(outcomes){return outcomes.reduce(function(acc,_ref2){var weight=_ref2.weight;return acc+weight;},0);}// Local storage helper functions\n// One time codes\nexport function saveCodeInLocalStorage(connectedAccount,disputeId,oneTimeCode){localStorage.setItem(\"oneTimeCode:\".concat(connectedAccount,\":\").concat(disputeId),oneTimeCode);}export function getCodeFromLocalStorage(connectedAccount,disputeId){return localStorage.getItem(\"oneTimeCode:\".concat(connectedAccount,\":\").concat(disputeId));}export function removeCodeFromLocalStorage(connectedAccount,disputeId){localStorage.removeItem(\"oneTimeCode:\".concat(connectedAccount,\":\").concat(disputeId));}// Auto reveal service preference\nexport function getAutoRevealPreference(connectedAccount,voteId){// Auto reveal preference can be either 'true' or 'false'\nreturn localStorage.getItem(\"autoRevealService:\".concat(connectedAccount,\":\").concat(voteId))==='true';}export function saveAutoRevealPreference(connectedAccount,voteId,enabled){localStorage.setItem(\"autoRevealService:\".concat(connectedAccount,\":\").concat(voteId),enabled);}","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/utils/crvoting-utils.js"],"names":["keccak256","soliditySha3","bigNum","OUTCOMES","Missing","Leaked","Refused","Against","InFavor","VALID_OUTCOMES","VOTE_OPTION_REFUSE","VOTE_OPTION_AGAINST","VOTE_OPTION_IN_FAVOR","NOBODY_APPEALED","NOBODY_CONFIRMED","voteOptionStringMapping","voteOptionToString","outcome","appealOptionStringMapping","appealOptionToString","outcomeStringMapping","juryOutcomeToString","appealRulingStringMapping","appealRulingToString","confirm","finalRulingStringMapping","finalRulingToString","refused","getOutcomeNumber","getOutcomeFromCommitment","commitment","password","find","option","hashVote","getAppealRulingOptions","currentOutcome","filter","map","description","filterByValidOutcome","totalValidOutcomes","outcomeFilter","outcomes","getVoteId","disputeId","roundId","pow","mul","add","hashPassword","isValidOutcome","length","isvoteLeaked","getTotalOutcomeWeight","reduce","acc","weight","saveCodeInLocalStorage","connectedAccount","oneTimeCode","localStorage","setItem","getCodeFromLocalStorage","getItem","removeCodeFromLocalStorage","removeItem","getAutoRevealPreference","voteId","saveAutoRevealPreference","enabled"],"mappings":"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","sourcesContent":["import { keccak256, soliditySha3 } from '../lib/web3-utils'\nimport { bigNum } from '../lib/math-utils'\n\nexport const OUTCOMES = {\n  Missing: 0,\n  Leaked: 1,\n  Refused: 2,\n  Against: 3,\n  InFavor: 4,\n}\n\nconst VALID_OUTCOMES = [OUTCOMES.Refused, OUTCOMES.Against, OUTCOMES.InFavor]\n\nexport const VOTE_OPTION_REFUSE = OUTCOMES.Refused\nexport const VOTE_OPTION_AGAINST = OUTCOMES.Against\nexport const VOTE_OPTION_IN_FAVOR = OUTCOMES.InFavor\nexport const NOBODY_APPEALED = 'Nobody appealed'\nexport const NOBODY_CONFIRMED = 'No confirmation'\n\nconst voteOptionStringMapping = {\n  [VOTE_OPTION_REFUSE]: 'REFUSE TO VOTE',\n  [VOTE_OPTION_AGAINST]: 'BLOCK ACTION',\n  [VOTE_OPTION_IN_FAVOR]: 'ALLOW ACTION',\n}\n\nexport function voteOptionToString(outcome) {\n  return voteOptionStringMapping[outcome]\n}\n\nconst appealOptionStringMapping = {\n  [VOTE_OPTION_REFUSE]: 'Refuse',\n  [VOTE_OPTION_AGAINST]: 'Block action',\n  [VOTE_OPTION_IN_FAVOR]: 'Allow action',\n}\n\nexport function appealOptionToString(outcome) {\n  return appealOptionStringMapping[outcome]\n}\n\nconst outcomeStringMapping = {\n  [OUTCOMES.Leaked]: 'Invalid ruling',\n  [OUTCOMES.Refused]: 'Refused to vote',\n  [OUTCOMES.Against]: 'Blocked action',\n  [OUTCOMES.InFavor]: 'Allowed action',\n}\n\nexport function juryOutcomeToString(outcome) {\n  if (!outcome) {\n    return outcomeStringMapping[OUTCOMES.Refused]\n  }\n  return outcomeStringMapping[outcome]\n}\n\nconst appealRulingStringMapping = {\n  [OUTCOMES.Leaked]: 'Invalid ruling',\n  [OUTCOMES.Refused]: 'Refused',\n  [OUTCOMES.Against]: 'Blocked action',\n  [OUTCOMES.InFavor]: 'Allowed action',\n}\n\nexport function appealRulingToString(outcome, confirm) {\n  if (!outcome) {\n    return confirm ? NOBODY_CONFIRMED : NOBODY_APPEALED\n  }\n  return appealRulingStringMapping[outcome]\n}\n\nconst finalRulingStringMapping = {\n  [OUTCOMES.Leaked]: 'Invalid ruling',\n  [OUTCOMES.Refused]: 'Refused',\n  [OUTCOMES.Against]: 'Blocked action',\n  [OUTCOMES.InFavor]: 'Allowed action',\n}\n\nexport function finalRulingToString(outcome) {\n  if (!outcome) {\n    return finalRulingStringMapping[OUTCOMES.refused]\n  }\n  return finalRulingStringMapping[outcome]\n}\n\n/**\n *\n * @param {String} outcome String representation of the outcome\n * @returns {Number} corresponding outcome number\n */\nexport function getOutcomeNumber(outcome) {\n  return OUTCOMES[outcome]\n}\n\n/**\n *\n * @param {bytes} commitment vote commitment\n * @param {bytes} password password used to get the commitment\n * @returns {Number} outcome\n */\nexport function getOutcomeFromCommitment(commitment, password) {\n  return VALID_OUTCOMES.find(\n    option => hashVote(option, password) === commitment\n  )\n}\n\n/**\n * returns all possible appeal ruling options\n * @param {Number} currentOutcome current round outcome\n * @returns {Array} Array of appeal ruling options\n */\nexport function getAppealRulingOptions(currentOutcome = OUTCOMES.Refused) {\n  return VALID_OUTCOMES.filter(\n    outcome => outcome !== currentOutcome\n  ).map(outcome => ({ outcome, description: appealOptionToString(outcome) }))\n}\n\nexport function filterByValidOutcome(totalValidOutcomes) {\n  return VALID_OUTCOMES.map(outcomeFilter => {\n    return {\n      outcomes: totalValidOutcomes.filter(\n        ({ outcome }) => outcome === outcomeFilter\n      ),\n      outcome: outcomeFilter,\n    }\n  })\n}\n\nexport function getVoteId(disputeId, roundId) {\n  return bigNum(2)\n    .pow(bigNum(128))\n    .mul(bigNum(disputeId))\n    .add(bigNum(roundId))\n}\n\nexport function hashPassword(password) {\n  return keccak256(password)\n}\n\nexport function hashVote(outcome, password) {\n  return soliditySha3(['uint8', 'bytes32'], [outcome, hashPassword(password)])\n}\n\n/**\n *\n * @param {Number} outcome vote outcome\n * @returns {Boolean} True if outcome is valid\n */\nexport function isValidOutcome(outcome) {\n  return (\n    VALID_OUTCOMES[0] <= outcome &&\n    outcome <= VALID_OUTCOMES[VALID_OUTCOMES.length - 1]\n  )\n}\n\nexport function isvoteLeaked(outcome) {\n  if (!outcome) return false\n\n  return outcome === OUTCOMES.Leaked\n}\n\nexport function getTotalOutcomeWeight(outcomes) {\n  return outcomes.reduce((acc, { weight }) => acc + weight, 0)\n}\n\n// Local storage helper functions\n\n// One time codes\nexport function saveCodeInLocalStorage(\n  connectedAccount,\n  disputeId,\n  oneTimeCode\n) {\n  localStorage.setItem(\n    `oneTimeCode:${connectedAccount}:${disputeId}`,\n    oneTimeCode\n  )\n}\n\nexport function getCodeFromLocalStorage(connectedAccount, disputeId) {\n  return localStorage.getItem(`oneTimeCode:${connectedAccount}:${disputeId}`)\n}\n\nexport function removeCodeFromLocalStorage(connectedAccount, disputeId) {\n  localStorage.removeItem(`oneTimeCode:${connectedAccount}:${disputeId}`)\n}\n\n// Auto reveal service preference\nexport function getAutoRevealPreference(connectedAccount, voteId) {\n  // Auto reveal preference can be either 'true' or 'false'\n  return (\n    localStorage.getItem(`autoRevealService:${connectedAccount}:${voteId}`) ===\n    'true'\n  )\n}\n\nexport function saveAutoRevealPreference(connectedAccount, voteId, enabled) {\n  localStorage.setItem(\n    `autoRevealService:${connectedAccount}:${voteId}`,\n    enabled\n  )\n}\n"]},"metadata":{},"sourceType":"module"}