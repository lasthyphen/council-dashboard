{"ast":null,"code":"import _objectSpread from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import{useCallback}from'react';import{useHeartbeat}from'./useCourtContracts';import{useCourtClock}from'../providers/CourtClock';import{useActivity}from'../providers/ActivityProvider';import{useRequestQueue}from'../providers/RequestQueue';import allowedTermsBehind from'../actions/allowedTermsBehind';export function useRequestProcessor(){var _useActivity=useActivity(),addActivity=_useActivity.addActivity;var _useRequestQueue=useRequestQueue(),addRequests=_useRequestQueue.addRequests;var _useHeartbeat=useHeartbeat(),heartbeatRequest=_useHeartbeat.heartbeatRequest;var _useCourtClock=useCourtClock(),neededTransitions=_useCourtClock.neededTransitions;var processRequests=useCallback(function(){var requests=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var processedRequests=requests.map(function(_ref){var action=_ref.action,description=_ref.description,_ref$ensureConfirmati=_ref.ensureConfirmation,ensureConfirmation=_ref$ensureConfirmati===void 0?false:_ref$ensureConfirmati,_ref$isTx=_ref.isTx,isTx=_ref$isTx===void 0?true:_ref$isTx,type=_ref.type,request=_objectWithoutProperties(_ref,[\"action\",\"description\",\"ensureConfirmation\",\"isTx\",\"type\"]);var intent=isTx?function(){return addActivity(action(),type,description);}:action;return _objectSpread({type:type,intent:intent,description:description,ensureConfirmation:ensureConfirmation,isTx:isTx},request);});var maxAllowedTermsBehind=processedRequests.filter(function(req){return req.isTx;}).reduce(function(acc,req){return Math.max(acc,allowedTermsBehind[req.type]);},-1);// Some court actions require the court clock to be at most x terms behind\n// Check if a term transition is needed\nif(maxAllowedTermsBehind>=0&&neededTransitions>maxAllowedTermsBehind){processedRequests.unshift(heartbeatRequest(neededTransitions,true));}// Add requests to tx queue\naddRequests(processedRequests);},[addActivity,addRequests,heartbeatRequest,neededTransitions]);return processRequests;}","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/hooks/useRequestProcessor.js"],"names":["useCallback","useHeartbeat","useCourtClock","useActivity","useRequestQueue","allowedTermsBehind","useRequestProcessor","addActivity","addRequests","heartbeatRequest","neededTransitions","processRequests","requests","processedRequests","map","action","description","ensureConfirmation","isTx","type","request","intent","maxAllowedTermsBehind","filter","req","reduce","acc","Math","max","unshift"],"mappings":"2QAAA,OAASA,WAAT,KAA4B,OAA5B,CACA,OAASC,YAAT,KAA6B,qBAA7B,CACA,OAASC,aAAT,KAA8B,yBAA9B,CACA,OAASC,WAAT,KAA4B,+BAA5B,CACA,OAASC,eAAT,KAAgC,2BAAhC,CAEA,MAAOC,CAAAA,kBAAP,KAA+B,+BAA/B,CAEA,MAAO,SAASC,CAAAA,mBAAT,EAA+B,kBACZH,WAAW,EADC,CAC5BI,WAD4B,cAC5BA,WAD4B,sBAEZH,eAAe,EAFH,CAE5BI,WAF4B,kBAE5BA,WAF4B,mBAGPP,YAAY,EAHL,CAG5BQ,gBAH4B,eAG5BA,gBAH4B,oBAINP,aAAa,EAJP,CAI5BQ,iBAJ4B,gBAI5BA,iBAJ4B,CAMpC,GAAMC,CAAAA,eAAe,CAAGX,WAAW,CACjC,UAAmB,IAAlBY,CAAAA,QAAkB,2DAAP,EAAO,CACjB,GAAMC,CAAAA,iBAAiB,CAAGD,QAAQ,CAACE,GAAT,CACxB,cAOM,IANJC,CAAAA,MAMI,MANJA,MAMI,CALJC,WAKI,MALJA,WAKI,4BAJJC,kBAII,CAJJA,kBAII,gCAJiB,KAIjB,sCAHJC,IAGI,CAHJA,IAGI,oBAHG,IAGH,WAFJC,IAEI,MAFJA,IAEI,CADDC,OACC,4FACJ,GAAMC,CAAAA,MAAM,CAAGH,IAAI,CACf,iBAAMX,CAAAA,WAAW,CAACQ,MAAM,EAAP,CAAWI,IAAX,CAAiBH,WAAjB,CAAjB,EADe,CAEfD,MAFJ,CAIA,sBACEI,IAAI,CAAJA,IADF,CAEEE,MAAM,CAANA,MAFF,CAGEL,WAAW,CAAXA,WAHF,CAIEC,kBAAkB,CAAlBA,kBAJF,CAKEC,IAAI,CAAJA,IALF,EAMKE,OANL,EAQD,CArBuB,CAA1B,CAwBA,GAAME,CAAAA,qBAAqB,CAAGT,iBAAiB,CAC5CU,MAD2B,CACpB,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACN,IAAR,EADiB,EAE3BO,MAF2B,CAEpB,SAACC,GAAD,CAAMF,GAAN,QAAcG,CAAAA,IAAI,CAACC,GAAL,CAASF,GAAT,CAAcrB,kBAAkB,CAACmB,GAAG,CAACL,IAAL,CAAhC,CAAd,EAFoB,CAEuC,CAAC,CAFxC,CAA9B,CAIA;AACA;AACA,GACEG,qBAAqB,EAAI,CAAzB,EACAZ,iBAAiB,CAAGY,qBAFtB,CAGE,CACAT,iBAAiB,CAACgB,OAAlB,CAA0BpB,gBAAgB,CAACC,iBAAD,CAAoB,IAApB,CAA1C,EACD,CAED;AACAF,WAAW,CAACK,iBAAD,CAAX,CACD,CAzCgC,CA0CjC,CAACN,WAAD,CAAcC,WAAd,CAA2BC,gBAA3B,CAA6CC,iBAA7C,CA1CiC,CAAnC,CA6CA,MAAOC,CAAAA,eAAP,CACD","sourcesContent":["import { useCallback } from 'react'\nimport { useHeartbeat } from './useCourtContracts'\nimport { useCourtClock } from '../providers/CourtClock'\nimport { useActivity } from '../providers/ActivityProvider'\nimport { useRequestQueue } from '../providers/RequestQueue'\n\nimport allowedTermsBehind from '../actions/allowedTermsBehind'\n\nexport function useRequestProcessor() {\n  const { addActivity } = useActivity()\n  const { addRequests } = useRequestQueue()\n  const { heartbeatRequest } = useHeartbeat()\n  const { neededTransitions } = useCourtClock()\n\n  const processRequests = useCallback(\n    (requests = []) => {\n      const processedRequests = requests.map(\n        ({\n          action,\n          description,\n          ensureConfirmation = false,\n          isTx = true,\n          type,\n          ...request\n        }) => {\n          const intent = isTx\n            ? () => addActivity(action(), type, description)\n            : action\n\n          return {\n            type,\n            intent,\n            description,\n            ensureConfirmation,\n            isTx,\n            ...request,\n          }\n        }\n      )\n\n      const maxAllowedTermsBehind = processedRequests\n        .filter(req => req.isTx)\n        .reduce((acc, req) => Math.max(acc, allowedTermsBehind[req.type]), -1)\n\n      // Some court actions require the court clock to be at most x terms behind\n      // Check if a term transition is needed\n      if (\n        maxAllowedTermsBehind >= 0 &&\n        neededTransitions > maxAllowedTermsBehind\n      ) {\n        processedRequests.unshift(heartbeatRequest(neededTransitions, true))\n      }\n\n      // Add requests to tx queue\n      addRequests(processedRequests)\n    },\n    [addActivity, addRequests, heartbeatRequest, neededTransitions]\n  )\n\n  return processRequests\n}\n"]},"metadata":{},"sourceType":"module"}