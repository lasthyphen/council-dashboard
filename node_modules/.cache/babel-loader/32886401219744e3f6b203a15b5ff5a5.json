{"ast":null,"code":"import _slicedToArray from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _styled3 from\"styled-components\";import _styled2 from\"styled-components\";import _styled from\"styled-components\";import React,{useCallback,useState}from'react';import{Bar,CardLayout,GU,useLayout,useTheme}from'@aragon/ui';import DisputeCard from'./DisputeCard';import DisputeFilters from'./DisputeFilters';import DisputesLoading from'../LoadingCard';import ErrorLoading from'../Errors/ErrorLoading';import NoFilterResults from'./NoFilterResults';import MessageCard from'../MessageCard';import{dayjs}from'../../utils/date-utils';import*as DisputesTypes from'../../types/dispute-status-types';import noDataSvg from\"../../assets/noData.svg\";import noDraftSvg from\"../../assets/noDraft.svg\";var ALL_FILTER=0;var UNSELECTED_FILTER=-1;var INITIAL_DATE_RANGE={start:null,end:null};var DISPUTES_STATUS_TYPES=[DisputesTypes.Phase.All,DisputesTypes.Status.Open,DisputesTypes.Status.Closed];var DISPUTES_STATUS_STRING=DISPUTES_STATUS_TYPES.map(DisputesTypes.convertToString);var DISPUTES_PHASE_TYPES=[DisputesTypes.Phase.All,DisputesTypes.Phase.Evidence,DisputesTypes.Phase.JuryDrafting,DisputesTypes.Phase.VotingPeriod,DisputesTypes.Phase.AppealRuling,DisputesTypes.Phase.ConfirmAppeal,DisputesTypes.Phase.ExecuteRuling,DisputesTypes.Phase.ClaimRewards];var DISPUTES_PHASE_STRING=DISPUTES_PHASE_TYPES.map(DisputesTypes.convertToString);var getFilteredDisputes=function getFilteredDisputes(_ref){var _ref$disputes=_ref.disputes,disputes=_ref$disputes===void 0?[]:_ref$disputes,selectedDateRange=_ref.selectedDateRange,selectedStatus=_ref.selectedStatus,selectedPhase=_ref.selectedPhase;return disputes.filter(function(_ref2){var createdAt=_ref2.createdAt,status=_ref2.status,phase=_ref2.phase;return(selectedPhase===UNSELECTED_FILTER||selectedPhase===ALL_FILTER||phase===DISPUTES_PHASE_TYPES[selectedPhase])&&(!selectedDateRange.start||!selectedDateRange.end||dayjs(createdAt).isBetween(dayjs(selectedDateRange.start).startOf('day'),dayjs(selectedDateRange.end).endOf('day'),'[]'))&&(selectedStatus===UNSELECTED_FILTER||selectedStatus===ALL_FILTER||status===DISPUTES_STATUS_TYPES[selectedStatus]);});};var _StyledDiv=_styled(\"div\").withConfig({displayName:\"DisputeList___StyledDiv\",componentId:\"sc-1989j79-0\"})([\"width:100%;margin-top:\",\"px;padding-bottom:\",\"px;\"],function(p){return p._css;},function(p){return p._css2;});var _StyledBar=_styled(Bar).withConfig({displayName:\"DisputeList___StyledBar\",componentId:\"sc-1989j79-1\"})([\"border-top:0;border-top-left-radius:0;border-top-right-radius:0;\"]);function DisputeList(_ref3){var disputes=_ref3.disputes,loading=_ref3.loading,errorLoading=_ref3.errorLoading,myDisputeSelected=_ref3.myDisputeSelected,onSelectDispute=_ref3.onSelectDispute;var _useState=useState(INITIAL_DATE_RANGE),_useState2=_slicedToArray(_useState,2),selectedDateRange=_useState2[0],setSelectedDateRange=_useState2[1];var _useState3=useState(UNSELECTED_FILTER),_useState4=_slicedToArray(_useState3,2),selectedStatus=_useState4[0],setSelectedStatus=_useState4[1];var _useState5=useState(UNSELECTED_FILTER),_useState6=_slicedToArray(_useState5,2),selectedPhase=_useState6[0],setSelectedPhase=_useState6[1];var _useLayout=useLayout(),layoutName=_useLayout.layoutName;var compactMode=layoutName==='small';var handleSelectedDateRangeChange=function handleSelectedDateRangeChange(range){setSelectedDateRange(range);};var handlePhaseChange=useCallback(function(index){return setSelectedPhase(index);},[]);var handleStatusChange=useCallback(function(index){setSelectedStatus(index);},[setSelectedStatus]);var handleOnClearAllFilters=useCallback(function(){setSelectedDateRange(INITIAL_DATE_RANGE);setSelectedStatus(UNSELECTED_FILTER);setSelectedPhase(UNSELECTED_FILTER);},[]);var filteredDisputes=getFilteredDisputes({disputes:disputes,selectedDateRange:selectedDateRange,selectedStatus:selectedStatus,selectedPhase:selectedPhase});var filtersSelected=selectedDateRange!==INITIAL_DATE_RANGE||selectedStatus!==UNSELECTED_FILTER||selectedPhase!==UNSELECTED_FILTER;return React.createElement(_StyledDiv,{_css:compactMode?0:-2*GU,_css2:3*GU},!compactMode&&React.createElement(_StyledBar,null,React.createElement(DisputeFilters,{phaseTypes:DISPUTES_PHASE_STRING,statusTypes:DISPUTES_STATUS_STRING,dateRangeFilter:selectedDateRange,phaseFilter:selectedPhase,statusFilter:selectedStatus,onDateRangeChange:handleSelectedDateRangeChange,onPhaseChange:handlePhaseChange,onStatusChange:handleStatusChange})),function(){if(filteredDisputes.length===0&&filtersSelected)return React.createElement(NoFilterResults,{onClearFilters:handleOnClearAllFilters});if(errorLoading){return React.createElement(ErrorLoading,{subject:\"dispute\",errors:[errorLoading.message]});}if(loading){return React.createElement(DisputesLoading,null);}if(disputes.length===0){return myDisputeSelected?React.createElement(NoMyDisputes,null):React.createElement(NoDisputes,null);}return React.createElement(CardLayout,{columnWidthMin:30*GU,rowHeight:272},filteredDisputes.map(function(dispute){return React.createElement(DisputeCard,{key:dispute.id,dispute:dispute,onSelectDispute:onSelectDispute});}));}());}var NoDisputes=function NoDisputes(){var title='No Proposals yet!';return React.createElement(MessageCard,{title:title,icon:noDataSvg});};var _StyledSpan=_styled(\"span\").withConfig({displayName:\"DisputeList___StyledSpan\",componentId:\"sc-1989j79-2\"})([\"color:\",\";\"],function(p){return p._css3;});var NoMyDisputes=function NoMyDisputes(){var theme=useTheme();var title='You havenâ€™t been drafted to vote on a proposal yet';var paragraph=React.createElement(\"span\",null,\"The more\",' ',React.createElement(_StyledSpan,{_css3:theme.help},\"DGC you activate\"),\",more chances you have to be drafted to arbitrate on-chain proposals\");return React.createElement(MessageCard,{title:title,paragraph:paragraph,icon:noDraftSvg});};export default DisputeList;","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/Disputes/DisputeList.js"],"names":["React","useCallback","useState","Bar","CardLayout","GU","useLayout","useTheme","DisputeCard","DisputeFilters","DisputesLoading","ErrorLoading","NoFilterResults","MessageCard","dayjs","DisputesTypes","ALL_FILTER","UNSELECTED_FILTER","INITIAL_DATE_RANGE","start","end","DISPUTES_STATUS_TYPES","Phase","All","Status","Open","Closed","DISPUTES_STATUS_STRING","map","convertToString","DISPUTES_PHASE_TYPES","Evidence","JuryDrafting","VotingPeriod","AppealRuling","ConfirmAppeal","ExecuteRuling","ClaimRewards","DISPUTES_PHASE_STRING","getFilteredDisputes","disputes","selectedDateRange","selectedStatus","selectedPhase","filter","createdAt","status","phase","isBetween","startOf","endOf","DisputeList","loading","errorLoading","myDisputeSelected","onSelectDispute","setSelectedDateRange","setSelectedStatus","setSelectedPhase","layoutName","compactMode","handleSelectedDateRangeChange","range","handlePhaseChange","index","handleStatusChange","handleOnClearAllFilters","filteredDisputes","filtersSelected","length","message","dispute","id","NoDisputes","title","noDataSvg","NoMyDisputes","theme","paragraph","help","noDraftSvg"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react'\nimport { Bar, CardLayout, GU, useLayout, useTheme } from '@aragon/ui'\nimport DisputeCard from './DisputeCard'\nimport DisputeFilters from './DisputeFilters'\nimport DisputesLoading from '../LoadingCard'\nimport ErrorLoading from '../Errors/ErrorLoading'\nimport NoFilterResults from './NoFilterResults'\nimport MessageCard from '../MessageCard'\nimport { dayjs } from '../../utils/date-utils'\nimport * as DisputesTypes from '../../types/dispute-status-types'\n\nimport noDataSvg from '../../assets/noData.svg'\nimport noDraftSvg from '../../assets/noDraft.svg'\n\nconst ALL_FILTER = 0\nconst UNSELECTED_FILTER = -1\nconst INITIAL_DATE_RANGE = { start: null, end: null }\nconst DISPUTES_STATUS_TYPES = [\n  DisputesTypes.Phase.All,\n  DisputesTypes.Status.Open,\n  DisputesTypes.Status.Closed,\n]\nconst DISPUTES_STATUS_STRING = DISPUTES_STATUS_TYPES.map(\n  DisputesTypes.convertToString\n)\n\nconst DISPUTES_PHASE_TYPES = [\n  DisputesTypes.Phase.All,\n  DisputesTypes.Phase.Evidence,\n  DisputesTypes.Phase.JuryDrafting,\n  DisputesTypes.Phase.VotingPeriod,\n  DisputesTypes.Phase.AppealRuling,\n  DisputesTypes.Phase.ConfirmAppeal,\n  DisputesTypes.Phase.ExecuteRuling,\n  DisputesTypes.Phase.ClaimRewards,\n]\nconst DISPUTES_PHASE_STRING = DISPUTES_PHASE_TYPES.map(\n  DisputesTypes.convertToString\n)\n\nconst getFilteredDisputes = ({\n  disputes = [],\n  selectedDateRange,\n  selectedStatus,\n  selectedPhase,\n}) => {\n  return disputes.filter(\n    ({ createdAt, status, phase }) =>\n      (selectedPhase === UNSELECTED_FILTER ||\n        selectedPhase === ALL_FILTER ||\n        phase === DISPUTES_PHASE_TYPES[selectedPhase]) &&\n      (!selectedDateRange.start ||\n        !selectedDateRange.end ||\n        dayjs(createdAt).isBetween(\n          dayjs(selectedDateRange.start).startOf('day'),\n          dayjs(selectedDateRange.end).endOf('day'),\n          '[]'\n        )) &&\n      (selectedStatus === UNSELECTED_FILTER ||\n        selectedStatus === ALL_FILTER ||\n        status === DISPUTES_STATUS_TYPES[selectedStatus])\n  )\n}\n\nfunction DisputeList({\n  disputes,\n  loading,\n  errorLoading,\n  myDisputeSelected,\n  onSelectDispute,\n}) {\n  const [selectedDateRange, setSelectedDateRange] = useState(INITIAL_DATE_RANGE)\n  const [selectedStatus, setSelectedStatus] = useState(UNSELECTED_FILTER)\n  const [selectedPhase, setSelectedPhase] = useState(UNSELECTED_FILTER)\n  const { layoutName } = useLayout()\n  const compactMode = layoutName === 'small'\n\n  const handleSelectedDateRangeChange = range => {\n    setSelectedDateRange(range)\n  }\n  const handlePhaseChange = useCallback(index => {\n    return setSelectedPhase(index)\n  }, [])\n\n  const handleStatusChange = useCallback(\n    index => {\n      setSelectedStatus(index)\n    },\n    [setSelectedStatus]\n  )\n\n  const handleOnClearAllFilters = useCallback(() => {\n    setSelectedDateRange(INITIAL_DATE_RANGE)\n    setSelectedStatus(UNSELECTED_FILTER)\n    setSelectedPhase(UNSELECTED_FILTER)\n  }, [])\n\n  const filteredDisputes = getFilteredDisputes({\n    disputes,\n    selectedDateRange,\n    selectedStatus,\n    selectedPhase,\n  })\n\n  const filtersSelected =\n    selectedDateRange !== INITIAL_DATE_RANGE ||\n    selectedStatus !== UNSELECTED_FILTER ||\n    selectedPhase !== UNSELECTED_FILTER\n\n  return (\n    <div\n      css={`\n        width: 100%;\n        margin-top: ${compactMode ? 0 : -2 * GU}px;\n        padding-bottom: ${3 * GU}px;\n      `}\n    >\n      {!compactMode && (\n        <Bar\n          css={`\n            border-top: 0;\n            border-top-left-radius: 0;\n            border-top-right-radius: 0;\n          `}\n        >\n          <DisputeFilters\n            phaseTypes={DISPUTES_PHASE_STRING}\n            statusTypes={DISPUTES_STATUS_STRING}\n            dateRangeFilter={selectedDateRange}\n            phaseFilter={selectedPhase}\n            statusFilter={selectedStatus}\n            onDateRangeChange={handleSelectedDateRangeChange}\n            onPhaseChange={handlePhaseChange}\n            onStatusChange={handleStatusChange}\n          />\n        </Bar>\n      )}\n\n      {(() => {\n        if (filteredDisputes.length === 0 && filtersSelected)\n          return <NoFilterResults onClearFilters={handleOnClearAllFilters} />\n\n        if (errorLoading) {\n          return (\n            <ErrorLoading subject=\"dispute\" errors={[errorLoading.message]} />\n          )\n        }\n\n        if (loading) {\n          return <DisputesLoading />\n        }\n\n        if (disputes.length === 0) {\n          return myDisputeSelected ? <NoMyDisputes /> : <NoDisputes />\n        }\n\n        return (\n          <CardLayout columnWidthMin={30 * GU} rowHeight={272}>\n            {filteredDisputes.map(dispute => {\n              return (\n                <DisputeCard\n                  key={dispute.id}\n                  dispute={dispute}\n                  onSelectDispute={onSelectDispute}\n                />\n              )\n            })}\n          </CardLayout>\n        )\n      })()}\n    </div>\n  )\n}\n\nconst NoDisputes = () => {\n  const title = 'No Proposals yet!'\n  return <MessageCard title={title} icon={noDataSvg} />\n}\n\nconst NoMyDisputes = () => {\n  const theme = useTheme()\n\n  const title = 'You havenâ€™t been drafted to vote on a proposal yet'\n  const paragraph = (\n    <span>\n      The more{' '}\n      <span\n        css={`\n          color: ${theme.help};\n        `}\n      >\n        DGC you activate\n      </span>\n      ,more chances you have to be drafted to arbitrate on-chain proposals\n    </span>\n  )\n\n  return <MessageCard title={title} paragraph={paragraph} icon={noDraftSvg} />\n}\n\nexport default DisputeList\n"]},"metadata":{},"sourceType":"module"}