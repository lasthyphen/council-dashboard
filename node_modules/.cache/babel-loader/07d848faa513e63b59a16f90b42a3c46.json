{"ast":null,"code":"import _toConsumableArray from\"/Users/saleemfareed/oneds/court-dashboard/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React,{useContext}from'react';import{useWallet}from'../../providers/Wallet';import{useAppealsByUserSubscription,useJurorBalancesSubscription,useJurorDraftsRewardsSubscription}from'../../hooks/subscription-hooks';var DashboardContext=React.createContext();function DashboardStateProvider(_ref){var children=_ref.children;var wallet=useWallet();var Provider=DashboardContext.Provider;// Workaround to not subscribe when no connected account\nif(wallet.account)return React.createElement(WithSubscription,{Provider:Provider,connectedAccount:wallet.account},children);return React.createElement(Provider,{value:{anjMovements:[],anjBalances:{},appeals:[],claimedSubscriptionFees:[],jurorDrafts:[],treasury:[]}},children);}function WithSubscription(_ref2){var Provider=_ref2.Provider,connectedAccount=_ref2.connectedAccount,children=_ref2.children;// Juror ANJ balances, 24h ANJ movements and claimed subscription fees\nvar _useJurorBalancesSubs=useJurorBalancesSubscription(connectedAccount),anjBalances=_useJurorBalancesSubs.anjBalances,anjMovements=_useJurorBalancesSubs.anjMovements,claimedSubscriptionFees=_useJurorBalancesSubs.claimedSubscriptionFees,treasury=_useJurorBalancesSubs.treasury,balancesFetching=_useJurorBalancesSubs.fetching,balanceErrors=_useJurorBalancesSubs.errors;// Appeals\nvar _useAppealsByUserSubs=useAppealsByUserSubscription(connectedAccount,false),appeals=_useAppealsByUserSubs.appeals,appealsFetching=_useAppealsByUserSubs.fetching,appealErrors=_useAppealsByUserSubs.errors;// Non settled appeals\n// Juror drafts not rewarded\nvar _useJurorDraftsReward=useJurorDraftsRewardsSubscription(connectedAccount),jurorDrafts=_useJurorDraftsReward.jurorDrafts,jurorDraftsFetching=_useJurorDraftsReward.fetching,jurorDraftsError=_useJurorDraftsReward.error;var fetching=balancesFetching||appealsFetching||jurorDraftsFetching;var errors=[].concat(_toConsumableArray(balanceErrors),_toConsumableArray(appealErrors),_toConsumableArray(jurorDraftsError?[jurorDraftsError]:[]));return React.createElement(Provider,{value:{anjBalances:anjBalances,anjMovements:anjMovements,appeals:appeals,claimedSubscriptionFees:claimedSubscriptionFees,errors:errors,fetching:fetching,jurorDrafts:jurorDrafts,treasury:treasury}},children);}function useDashboardState(){return useContext(DashboardContext);}export{DashboardStateProvider,useDashboardState};","map":{"version":3,"sources":["/Users/saleemfareed/oneds/court-dashboard/src/components/Dashboard/DashboardStateProvider.js"],"names":["React","useContext","useWallet","useAppealsByUserSubscription","useJurorBalancesSubscription","useJurorDraftsRewardsSubscription","DashboardContext","createContext","DashboardStateProvider","children","wallet","Provider","account","anjMovements","anjBalances","appeals","claimedSubscriptionFees","jurorDrafts","treasury","WithSubscription","connectedAccount","balancesFetching","fetching","balanceErrors","errors","appealsFetching","appealErrors","jurorDraftsFetching","jurorDraftsError","error","useDashboardState"],"mappings":"oIAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,SAAT,KAA0B,wBAA1B,CACA,OACEC,4BADF,CAEEC,4BAFF,CAGEC,iCAHF,KAIO,gCAJP,CAMA,GAAMC,CAAAA,gBAAgB,CAAGN,KAAK,CAACO,aAAN,EAAzB,CAEA,QAASC,CAAAA,sBAAT,MAA8C,IAAZC,CAAAA,QAAY,MAAZA,QAAY,CAC5C,GAAMC,CAAAA,MAAM,CAAGR,SAAS,EAAxB,CAEA,GAAMS,CAAAA,QAAQ,CAAGL,gBAAgB,CAACK,QAAlC,CAEA;AACA,GAAID,MAAM,CAACE,OAAX,CACE,MACE,qBAAC,gBAAD,EAAkB,QAAQ,CAAED,QAA5B,CAAsC,gBAAgB,CAAED,MAAM,CAACE,OAA/D,EACGH,QADH,CADF,CAMF,MACE,qBAAC,QAAD,EACE,KAAK,CAAE,CACLI,YAAY,CAAE,EADT,CAELC,WAAW,CAAE,EAFR,CAGLC,OAAO,CAAE,EAHJ,CAILC,uBAAuB,CAAE,EAJpB,CAKLC,WAAW,CAAE,EALR,CAMLC,QAAQ,CAAE,EANL,CADT,EAUGT,QAVH,CADF,CAcD,CAED,QAASU,CAAAA,gBAAT,OAAoE,IAAxCR,CAAAA,QAAwC,OAAxCA,QAAwC,CAA9BS,gBAA8B,OAA9BA,gBAA8B,CAAZX,QAAY,OAAZA,QAAY,CAClE;AADkE,0BAS9DL,4BAA4B,CAACgB,gBAAD,CATkC,CAGhEN,WAHgE,uBAGhEA,WAHgE,CAIhED,YAJgE,uBAIhEA,YAJgE,CAKhEG,uBALgE,uBAKhEA,uBALgE,CAMhEE,QANgE,uBAMhEA,QANgE,CAOtDG,gBAPsD,uBAOhEC,QAPgE,CAQxDC,aARwD,uBAQhEC,MARgE,CAWlE;AAXkE,0BAgB9DrB,4BAA4B,CAACiB,gBAAD,CAAmB,KAAnB,CAhBkC,CAahEL,OAbgE,uBAahEA,OAbgE,CActDU,eAdsD,uBAchEH,QAdgE,CAexDI,YAfwD,uBAehEF,MAfgE,CAgBR;AAE1D;AAlBkE,0BAuB9DnB,iCAAiC,CAACe,gBAAD,CAvB6B,CAoBhEH,WApBgE,uBAoBhEA,WApBgE,CAqBtDU,mBArBsD,uBAqBhEL,QArBgE,CAsBzDM,gBAtByD,uBAsBhEC,KAtBgE,CAyBlE,GAAMP,CAAAA,QAAQ,CAAGD,gBAAgB,EAAII,eAApB,EAAuCE,mBAAxD,CACA,GAAMH,CAAAA,MAAM,8BACPD,aADO,qBAEPG,YAFO,qBAGNE,gBAAgB,CAAG,CAACA,gBAAD,CAAH,CAAwB,EAHlC,EAAZ,CAMA,MACE,qBAAC,QAAD,EACE,KAAK,CAAE,CACLd,WAAW,CAAXA,WADK,CAELD,YAAY,CAAZA,YAFK,CAGLE,OAAO,CAAPA,OAHK,CAILC,uBAAuB,CAAvBA,uBAJK,CAKLQ,MAAM,CAANA,MALK,CAMLF,QAAQ,CAARA,QANK,CAOLL,WAAW,CAAXA,WAPK,CAQLC,QAAQ,CAARA,QARK,CADT,EAYGT,QAZH,CADF,CAgBD,CAED,QAASqB,CAAAA,iBAAT,EAA6B,CAC3B,MAAO7B,CAAAA,UAAU,CAACK,gBAAD,CAAjB,CACD,CAED,OAASE,sBAAT,CAAiCsB,iBAAjC","sourcesContent":["import React, { useContext } from 'react'\nimport { useWallet } from '../../providers/Wallet'\nimport {\n  useAppealsByUserSubscription,\n  useJurorBalancesSubscription,\n  useJurorDraftsRewardsSubscription,\n} from '../../hooks/subscription-hooks'\n\nconst DashboardContext = React.createContext()\n\nfunction DashboardStateProvider({ children }) {\n  const wallet = useWallet()\n\n  const Provider = DashboardContext.Provider\n\n  // Workaround to not subscribe when no connected account\n  if (wallet.account)\n    return (\n      <WithSubscription Provider={Provider} connectedAccount={wallet.account}>\n        {children}\n      </WithSubscription>\n    )\n\n  return (\n    <Provider\n      value={{\n        anjMovements: [],\n        anjBalances: {},\n        appeals: [],\n        claimedSubscriptionFees: [],\n        jurorDrafts: [],\n        treasury: [],\n      }}\n    >\n      {children}\n    </Provider>\n  )\n}\n\nfunction WithSubscription({ Provider, connectedAccount, children }) {\n  // Juror ANJ balances, 24h ANJ movements and claimed subscription fees\n  const {\n    anjBalances,\n    anjMovements,\n    claimedSubscriptionFees,\n    treasury,\n    fetching: balancesFetching,\n    errors: balanceErrors,\n  } = useJurorBalancesSubscription(connectedAccount)\n\n  // Appeals\n  const {\n    appeals,\n    fetching: appealsFetching,\n    errors: appealErrors,\n  } = useAppealsByUserSubscription(connectedAccount, false) // Non settled appeals\n\n  // Juror drafts not rewarded\n  const {\n    jurorDrafts,\n    fetching: jurorDraftsFetching,\n    error: jurorDraftsError,\n  } = useJurorDraftsRewardsSubscription(connectedAccount)\n\n  const fetching = balancesFetching || appealsFetching || jurorDraftsFetching\n  const errors = [\n    ...balanceErrors,\n    ...appealErrors,\n    ...(jurorDraftsError ? [jurorDraftsError] : []),\n  ]\n\n  return (\n    <Provider\n      value={{\n        anjBalances,\n        anjMovements,\n        appeals,\n        claimedSubscriptionFees,\n        errors,\n        fetching,\n        jurorDrafts,\n        treasury,\n      }}\n    >\n      {children}\n    </Provider>\n  )\n}\n\nfunction useDashboardState() {\n  return useContext(DashboardContext)\n}\n\nexport { DashboardStateProvider, useDashboardState }\n"]},"metadata":{},"sourceType":"module"}