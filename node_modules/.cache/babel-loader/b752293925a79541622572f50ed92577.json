{"ast":null,"code":"import { Repo } from '@aragon/connect-core';\nexport async function parseRepo(result, organization) {\n  var _a, _b, _c, _d, _e, _f, _g;\n\n  const repo = (_b = (_a = result === null || result === void 0 ? void 0 : result.data) === null || _a === void 0 ? void 0 : _a.app) === null || _b === void 0 ? void 0 : _b.repo;\n\n  if (!repo) {\n    throw new Error('Unable to parse repo.');\n  }\n\n  const data = {\n    address: repo === null || repo === void 0 ? void 0 : repo.address,\n    artifact: (_c = repo === null || repo === void 0 ? void 0 : repo.lastVersion) === null || _c === void 0 ? void 0 : _c.artifact,\n    contentUri: (_d = repo === null || repo === void 0 ? void 0 : repo.lastVersion) === null || _d === void 0 ? void 0 : _d.contentUri,\n    manifest: (_e = repo === null || repo === void 0 ? void 0 : repo.lastVersion) === null || _e === void 0 ? void 0 : _e.manifest,\n    name: repo === null || repo === void 0 ? void 0 : repo.name,\n    registry: (_f = repo === null || repo === void 0 ? void 0 : repo.registry) === null || _f === void 0 ? void 0 : _f.name,\n    registryAddress: (_g = repo === null || repo === void 0 ? void 0 : repo.registry) === null || _g === void 0 ? void 0 : _g.address\n  };\n  return Repo.create(data, organization);\n}","map":null,"metadata":{},"sourceType":"module"}