{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EthereumChain = void 0;\nvar EthereumChain;\n\n(function (EthereumChain) {\n  // mainnets\n  EthereumChain[EthereumChain[\"ETHEREUM_MAINNET\"] = 1] = \"ETHEREUM_MAINNET\";\n  EthereumChain[EthereumChain[\"OPTIMISM_MAINNET\"] = 10] = \"OPTIMISM_MAINNET\";\n  EthereumChain[EthereumChain[\"POLYGON_MAINNET\"] = 137] = \"POLYGON_MAINNET\";\n  EthereumChain[EthereumChain[\"ETHEREUM_CLASSIC_MAINNET\"] = 61] = \"ETHEREUM_CLASSIC_MAINNET\";\n  EthereumChain[EthereumChain[\"BSC_MAINNET\"] = 56] = \"BSC_MAINNET\";\n  EthereumChain[EthereumChain[\"FANTOM_MAINNET\"] = 250] = \"FANTOM_MAINNET\";\n  EthereumChain[EthereumChain[\"ARBITRUM_MAINNET\"] = 42161] = \"ARBITRUM_MAINNET\";\n  EthereumChain[EthereumChain[\"XDAI_MAINNET\"] = 100] = \"XDAI_MAINNET\";\n  EthereumChain[EthereumChain[\"AVALANCHE_MAINNET\"] = 43114] = \"AVALANCHE_MAINNET\";\n  EthereumChain[EthereumChain[\"DIJETS\"] = 43112] = \"AVALANCHE_MAINNET\"; // testnets\n\n  EthereumChain[EthereumChain[\"ROPSTEN\"] = 3] = \"ROPSTEN\";\n  EthereumChain[EthereumChain[\"RINKEBY\"] = 4] = \"RINKEBY\";\n  EthereumChain[EthereumChain[\"GOERLI\"] = 5] = \"GOERLI\";\n  EthereumChain[EthereumChain[\"KOVAN\"] = 42] = \"KOVAN\";\n  EthereumChain[EthereumChain[\"OPTIMISM_KOVAN\"] = 69] = \"OPTIMISM_KOVAN\";\n  EthereumChain[EthereumChain[\"POLYGON_TESTNET\"] = 80001] = \"POLYGON_TESTNET\";\n  EthereumChain[EthereumChain[\"BSC_TESTNET\"] = 97] = \"BSC_TESTNET\";\n  EthereumChain[EthereumChain[\"FANTOM_TESTNET\"] = 4002] = \"FANTOM_TESTNET\";\n  EthereumChain[EthereumChain[\"ARBITRUM_TESTNET\"] = 421611] = \"ARBITRUM_TESTNET\";\n  EthereumChain[EthereumChain[\"AVALANCHE_FUJI\"] = 43113] = \"AVALANCHE_FUJI\";\n})(EthereumChain = exports.EthereumChain || (exports.EthereumChain = {}));\n\n(function (EthereumChain) {\n  function rpcUrl(thiz) {\n    switch (thiz) {\n      case EthereumChain.ETHEREUM_MAINNET:\n        return \"https://mainnet-infura.wallet.coinbase.com\";\n\n      case EthereumChain.ROPSTEN:\n        return \"https://ropsten-infura.wallet.coinbase.com\";\n\n      case EthereumChain.RINKEBY:\n        return \"https://rinkeby-infura.wallet.coinbase.com\";\n\n      case EthereumChain.KOVAN:\n        return \"https://kovan-infura.wallet.coinbase.com\";\n\n      case EthereumChain.GOERLI:\n        return \"https://goerli-node.wallet.coinbase.com\";\n\n      case EthereumChain.OPTIMISM_KOVAN:\n        return \"https://optimism-node.wallet.coinbase.com\";\n\n      case EthereumChain.OPTIMISM_MAINNET:\n        return \"https://optimism-mainnet.wallet.coinbase.com\";\n\n      case EthereumChain.POLYGON_MAINNET:\n        return \"https://polygon-mainnet-infura.wallet.coinbase.com\";\n\n      case EthereumChain.POLYGON_TESTNET:\n        return \"https://polygon-mumbai-infura.wallet.coinbase.com\";\n\n      case EthereumChain.BSC_MAINNET:\n        return \"https://bsc-dataseed.binance.org\";\n\n      case EthereumChain.BSC_TESTNET:\n        return \"https://data-seed-prebsc-1-s1.binance.org:8545\";\n\n      case EthereumChain.FANTOM_MAINNET:\n        return \"https://rpcapi.fantom.network\";\n\n      case EthereumChain.FANTOM_TESTNET:\n        return \"https://rpc.testnet.fantom.network\";\n\n      case EthereumChain.ARBITRUM_MAINNET:\n        return \"https://l2-mainnet.wallet.coinbase.com?targetName=arbitrum\";\n\n      case EthereumChain.ARBITRUM_TESTNET:\n        return \"https://rinkeby.arbitrum.io/rpc\";\n\n      case EthereumChain.XDAI_MAINNET:\n        return \"https://rpc.xdaichain.com\";\n\n      case EthereumChain.AVALANCHE_MAINNET:\n        return \"https://api.avax.network/ext/bc/C/rpc\";\n\n      case EthereumChain.DIJETS:\n        return \"https://dijets.uksouth.cloudapp.azure.com:443/ext/bc/C/rpc\";\n\n      case EthereumChain.AVALANCHE_FUJI:\n        return \"https://api.avax-test.network/ext/bc/C/rpc\";\n\n      default:\n        return undefined;\n    }\n  }\n\n  EthereumChain.rpcUrl = rpcUrl;\n\n  function fromChainId(chainId) {\n    switch (Number(chainId)) {\n      // mainnets\n      case EthereumChain.ETHEREUM_MAINNET.valueOf():\n        return EthereumChain.ETHEREUM_MAINNET;\n\n      case EthereumChain.OPTIMISM_MAINNET.valueOf():\n        return EthereumChain.OPTIMISM_MAINNET;\n\n      case EthereumChain.POLYGON_MAINNET.valueOf():\n        return EthereumChain.POLYGON_MAINNET;\n\n      case EthereumChain.ETHEREUM_CLASSIC_MAINNET.valueOf():\n        return EthereumChain.ETHEREUM_CLASSIC_MAINNET;\n\n      case EthereumChain.BSC_MAINNET.valueOf():\n        return EthereumChain.BSC_MAINNET;\n\n      case EthereumChain.FANTOM_MAINNET.valueOf():\n        return EthereumChain.FANTOM_MAINNET;\n\n      case EthereumChain.ARBITRUM_MAINNET.valueOf():\n        return EthereumChain.ARBITRUM_MAINNET;\n\n      case EthereumChain.AVALANCHE_MAINNET.valueOf():\n        return EthereumChain.AVALANCHE_MAINNET;\n\n      case EthereumChain.DIJETS.valueOf():\n        return EthereumChain.DIJETS;\n\n      case EthereumChain.XDAI_MAINNET.valueOf():\n        return EthereumChain.XDAI_MAINNET;\n      // testnets\n\n      case EthereumChain.ROPSTEN.valueOf():\n        return EthereumChain.ROPSTEN;\n\n      case EthereumChain.RINKEBY.valueOf():\n        return EthereumChain.RINKEBY;\n\n      case EthereumChain.GOERLI.valueOf():\n        return EthereumChain.GOERLI;\n\n      case EthereumChain.KOVAN.valueOf():\n        return EthereumChain.KOVAN;\n\n      case EthereumChain.OPTIMISM_KOVAN.valueOf():\n        return EthereumChain.OPTIMISM_KOVAN;\n\n      case EthereumChain.POLYGON_TESTNET.valueOf():\n        return EthereumChain.POLYGON_TESTNET;\n\n      case EthereumChain.BSC_TESTNET.valueOf():\n        return EthereumChain.BSC_TESTNET;\n\n      case EthereumChain.FANTOM_TESTNET.valueOf():\n        return EthereumChain.FANTOM_TESTNET;\n\n      case EthereumChain.ARBITRUM_TESTNET.valueOf():\n        return EthereumChain.ARBITRUM_TESTNET;\n\n      case EthereumChain.AVALANCHE_FUJI.valueOf():\n        return EthereumChain.AVALANCHE_FUJI;\n\n      default:\n        return undefined;\n    }\n  }\n\n  EthereumChain.fromChainId = fromChainId;\n})(EthereumChain = exports.EthereumChain || (exports.EthereumChain = {}));","map":null,"metadata":{},"sourceType":"script"}