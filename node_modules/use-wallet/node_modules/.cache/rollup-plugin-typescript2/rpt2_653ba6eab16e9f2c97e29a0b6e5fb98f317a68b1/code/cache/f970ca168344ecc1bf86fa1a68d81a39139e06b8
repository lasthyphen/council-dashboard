{"code":"import initFortmatic from './connectors/ConnectorFortmatic';\r\nimport initFrame from './connectors/ConnectorFrame';\r\nimport initInjected from './connectors/ConnectorInjected';\r\nimport initPortis from './connectors/ConnectorPortis';\r\nimport initProvided from './connectors/ConnectorProvided';\r\nimport initTorus from './connectors/ConnectorTorus';\r\nimport initWalletConnect from './connectors/ConnectorWalletConnect';\r\nimport initWalletLink from './connectors/ConnectorWalletLink';\r\nimport initLedger from './connectors/ConnectorLedger';\r\nexport function getConnectors(initsOrConfigs = {}) {\r\n    const connectors = {\r\n        fortmatic: [initFortmatic, null],\r\n        frame: [initFrame, null],\r\n        injected: [initInjected, null],\r\n        portis: [initPortis, null],\r\n        provided: [initProvided, null],\r\n        torus: [initTorus, null],\r\n        walletconnect: [initWalletConnect, null],\r\n        walletlink: [initWalletLink, null],\r\n        ledger: [initLedger, null],\r\n    };\r\n    for (const [id, initOrConfig] of Object.entries(initsOrConfigs)) {\r\n        // If initOrConfig is a function, it is an initializer.\r\n        if (typeof initOrConfig === 'function') {\r\n            connectors[id] = [initOrConfig, null];\r\n            continue;\r\n        }\r\n        // Otherwise it is a config\r\n        if (connectors[id]) {\r\n            connectors[id][1] = initOrConfig;\r\n        }\r\n    }\r\n    return connectors;\r\n}\r\n//# sourceMappingURL=connectors.js.map","references":["/Users/saleemfareed/use-wallet/src/types.ts","/Users/saleemfareed/use-wallet/src/connectors/ConnectorFortmatic.ts","/Users/saleemfareed/use-wallet/src/connectors/ConnectorFrame.ts","/Users/saleemfareed/use-wallet/src/connectors/ConnectorInjected.ts","/Users/saleemfareed/use-wallet/src/connectors/ConnectorPortis.ts","/Users/saleemfareed/use-wallet/src/connectors/ConnectorProvided.ts","/Users/saleemfareed/use-wallet/src/connectors/ConnectorTorus.ts","/Users/saleemfareed/use-wallet/src/connectors/ConnectorWalletConnect.ts","/Users/saleemfareed/use-wallet/src/connectors/ConnectorWalletLink.ts","/Users/saleemfareed/use-wallet/src/connectors/ConnectorLedger.ts"],"map":"{\"version\":3,\"file\":\"connectors.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/connectors.ts\"],\"names\":[],\"mappings\":\"AACA,OAAO,aAAa,MAAM,iCAAiC,CAAA;AAC3D,OAAO,SAAS,MAAM,6BAA6B,CAAA;AACnD,OAAO,YAAY,MAAM,gCAAgC,CAAA;AACzD,OAAO,UAAU,MAAM,8BAA8B,CAAA;AACrD,OAAO,YAAY,MAAM,gCAAgC,CAAA;AACzD,OAAO,SAAS,MAAM,6BAA6B,CAAA;AACnD,OAAO,iBAAiB,MAAM,qCAAqC,CAAA;AACnE,OAAO,cAAc,MAAM,kCAAkC,CAAA;AAC7D,OAAO,UAAU,MAAM,8BAA8B,CAAA;AAErD,MAAM,UAAU,aAAa,CAC3B,iBAAqE,EAAE;IAEvE,MAAM,UAAU,GAEZ;QACF,SAAS,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC;QAChC,KAAK,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC;QACxB,QAAQ,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC;QAC9B,MAAM,EAAE,CAAC,UAAU,EAAE,IAAI,CAAC;QAC1B,QAAQ,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC;QAC9B,KAAK,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC;QACxB,aAAa,EAAE,CAAC,iBAAiB,EAAE,IAAI,CAAC;QACxC,UAAU,EAAE,CAAC,cAAc,EAAE,IAAI,CAAC;QAClC,MAAM,EAAE,CAAC,UAAU,EAAE,IAAI,CAAC;KAC3B,CAAA;IAED,KAAK,MAAM,CAAC,EAAE,EAAE,YAAY,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE;QAC/D,uDAAuD;QACvD,IAAI,OAAO,YAAY,KAAK,UAAU,EAAE;YACtC,UAAU,CAAC,EAAE,CAAC,GAAG,CAAC,YAA6B,EAAE,IAAI,CAAC,CAAA;YACtD,SAAQ;SACT;QAED,2BAA2B;QAC3B,IAAI,UAAU,CAAC,EAAE,CAAC,EAAE;YAClB,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,YAA+B,CAAA;SACpD;KACF;IAED,OAAO,UAAU,CAAA;AACnB,CAAC\"}"}
