{"code":"import JSBI from 'jsbi';\r\nimport { useState, useEffect } from 'react';\r\nimport { pollEvery, getAccountBalance } from '../utils';\r\nconst NO_BALANCE = '-1';\r\nexport function useWalletBalance({ account, ethereum, pollBalanceInterval, }) {\r\n    const [balance, setBalance] = useState(NO_BALANCE);\r\n    useEffect(() => {\r\n        if (!account || !ethereum) {\r\n            return;\r\n        }\r\n        let cancel = false;\r\n        // Poll wallet balance\r\n        const pollBalance = pollEvery((account, ethereum, onUpdate) => {\r\n            let lastBalance = NO_BALANCE;\r\n            return {\r\n                async request() {\r\n                    return getAccountBalance(ethereum, account)\r\n                        .then((value) => {\r\n                        return value ? JSBI.BigInt(value).toString() : NO_BALANCE;\r\n                    })\r\n                        .catch(() => NO_BALANCE);\r\n                },\r\n                onResult(balance) {\r\n                    if (!cancel && balance !== lastBalance) {\r\n                        lastBalance = balance;\r\n                        onUpdate(balance);\r\n                    }\r\n                },\r\n            };\r\n        }, pollBalanceInterval);\r\n        // start polling balance every x time\r\n        const stopPollingBalance = pollBalance(account, ethereum, setBalance);\r\n        return () => {\r\n            cancel = true;\r\n            stopPollingBalance();\r\n            setBalance(NO_BALANCE);\r\n        };\r\n    }, [account, ethereum, pollBalanceInterval]);\r\n    return balance;\r\n}\r\n//# sourceMappingURL=walletBalance.js.map","references":["/Users/saleemfareed/use-wallet/node_modules/jsbi/jsbi.d.ts","/Users/saleemfareed/use-wallet/node_modules/@types/react/index.d.ts","/Users/saleemfareed/use-wallet/src/types.ts","/Users/saleemfareed/use-wallet/src/utils.ts"],"map":"{\"version\":3,\"file\":\"walletBalance.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/hooks/walletBalance.tsx\"],\"names\":[],\"mappings\":\"AAAA,OAAO,IAAI,MAAM,MAAM,CAAA;AACvB,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,OAAO,CAAA;AAE3C,OAAO,EAAE,SAAS,EAAE,iBAAiB,EAAE,MAAM,UAAU,CAAA;AAEvD,MAAM,UAAU,GAAG,IAAI,CAAA;AAEvB,MAAM,UAAU,gBAAgB,CAAC,EAC/B,OAAO,EACP,QAAQ,EACR,mBAAmB,GAKpB;IACC,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,QAAQ,CAAU,UAAU,CAAC,CAAA;IAE3D,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,CAAC,OAAO,IAAI,CAAC,QAAQ,EAAE;YACzB,OAAM;SACP;QAED,IAAI,MAAM,GAAG,KAAK,CAAA;QAElB,sBAAsB;QACtB,MAAM,WAAW,GAAG,SAAS,CAC3B,CACE,OAAgB,EAChB,QAA0B,EAC1B,QAAoC,EACpC,EAAE;YACF,IAAI,WAAW,GAAG,UAAU,CAAA;YAC5B,OAAO;gBACL,KAAK,CAAC,OAAO;oBACX,OAAO,iBAAiB,CAAC,QAAQ,EAAE,OAAO,CAAC;yBACxC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;wBACd,OAAO,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,UAAU,CAAA;oBAC3D,CAAC,CAAC;yBACD,KAAK,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,CAAA;gBAC5B,CAAC;gBACD,QAAQ,CAAC,OAAgB;oBACvB,IAAI,CAAC,MAAM,IAAI,OAAO,KAAK,WAAW,EAAE;wBACtC,WAAW,GAAG,OAAO,CAAA;wBACrB,QAAQ,CAAC,OAAO,CAAC,CAAA;qBAClB;gBACH,CAAC;aACF,CAAA;QACH,CAAC,EACD,mBAAmB,CACpB,CAAA;QAED,qCAAqC;QACrC,MAAM,kBAAkB,GAAG,WAAW,CAAC,OAAO,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAA;QAErE,OAAO,GAAG,EAAE;YACV,MAAM,GAAG,IAAI,CAAA;YACb,kBAAkB,EAAE,CAAA;YACpB,UAAU,CAAC,UAAU,CAAC,CAAA;QACxB,CAAC,CAAA;IACH,CAAC,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,mBAAmB,CAAC,CAAC,CAAA;IAE5C,OAAO,OAAO,CAAA;AAChB,CAAC\"}"}
