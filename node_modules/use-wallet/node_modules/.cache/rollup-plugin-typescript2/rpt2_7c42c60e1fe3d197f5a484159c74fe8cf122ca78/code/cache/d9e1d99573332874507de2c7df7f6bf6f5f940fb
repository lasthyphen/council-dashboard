{"code":"import { ChainUnknownError } from './errors';\r\nconst ETH = {\r\n    name: 'Ether',\r\n    symbol: 'ETH',\r\n    decimals: 18,\r\n};\r\nconst MATIC = {\r\n    name: 'Matic Token',\r\n    symbol: 'MATIC',\r\n    decimals: 18,\r\n};\r\nconst AVAX = {\r\n    name: 'Avax',\r\n    symbol: 'AVAX',\r\n    decimals: 9,\r\n};\r\nconst DJTX = {\r\n    name: 'Dijets',\r\n    symbol: 'DJTX',\r\n    decimals: 9,\r\n};\r\nconst ONE = {\r\n    name: 'ONE Token',\r\n    symbol: 'ONE',\r\n    decimals: 18,\r\n};\r\nconst XDAI = {\r\n    name: 'xDAI',\r\n    symbol: 'xDAI',\r\n    decimals: 18,\r\n};\r\nconst BNB = {\r\n    name: 'Binance Token',\r\n    symbol: 'BNB',\r\n    decimals: 18,\r\n};\r\nconst TT = {\r\n    name: 'Thunder Token',\r\n    symbol: 'TT',\r\n    decimals: 18,\r\n};\r\nconst CELO = {\r\n    name: 'Celo',\r\n    symbol: 'CELO',\r\n    decimals: 18,\r\n};\r\nconst METIS = {\r\n    name: 'METIS',\r\n    symbol: 'METIS',\r\n    decimals: 18,\r\n};\r\nconst FTM = {\r\n    name: 'FTM',\r\n    symbol: 'FTM',\r\n    decimals: 18,\r\n};\r\nconst DEV = {\r\n    name: 'DEV',\r\n    symbol: 'DEV',\r\n    decimals: 18,\r\n};\r\nconst MOVR = {\r\n    name: 'Moonriver',\r\n    symbol: 'MOVR',\r\n    decimals: 18,\r\n};\r\nconst GLMR = {\r\n    name: 'Glimmer',\r\n    symbol: 'GLMR',\r\n    decimals: 18,\r\n};\r\nconst HECO = {\r\n    name: 'HECO',\r\n    symbol: 'HT',\r\n    decimals: 18,\r\n};\r\nconst CHAIN_INFORMATION = new Map([\r\n    [\r\n        1,\r\n        {\r\n            id: 1,\r\n            nativeCurrency: ETH,\r\n            type: 'main',\r\n            fullName: 'Ethereum Mainnet',\r\n            shortName: 'Ethereum',\r\n            explorerUrl: `https://etherscan.io`,\r\n            testnet: false,\r\n        },\r\n    ],\r\n    [\r\n        3,\r\n        {\r\n            id: 3,\r\n            nativeCurrency: ETH,\r\n            type: 'ropsten',\r\n            fullName: 'Ropsten Testnet',\r\n            shortName: 'Ropsten',\r\n            explorerUrl: `https://ropsten.etherscan.io`,\r\n            testnet: true,\r\n        },\r\n    ],\r\n    [\r\n        4,\r\n        {\r\n            id: 4,\r\n            nativeCurrency: ETH,\r\n            type: 'rinkeby',\r\n            fullName: 'Rinkeby Testnet',\r\n            shortName: 'Rinkeby',\r\n            explorerUrl: `https://rinkeby.etherscan.io`,\r\n            testnet: true,\r\n        },\r\n    ],\r\n    [\r\n        5,\r\n        {\r\n            id: 5,\r\n            nativeCurrency: ETH,\r\n            type: 'goerli',\r\n            fullName: 'Goerli Testnet',\r\n            shortName: 'Goerli',\r\n            explorerUrl: `https://goerli.etherscan.io`,\r\n            testnet: true,\r\n        },\r\n    ],\r\n    [\r\n        42,\r\n        {\r\n            id: 42,\r\n            nativeCurrency: ETH,\r\n            type: 'kovan',\r\n            fullName: 'Kovan Testnet',\r\n            shortName: 'Kovan',\r\n            explorerUrl: `https://kovan.etherscan.io`,\r\n            testnet: true,\r\n        },\r\n    ],\r\n    [\r\n        43112,\r\n        {\r\n            id: 43112,\r\n            nativeCurrency: DJTX,\r\n            type: 'dijets',\r\n            shortName: 'Dijets',\r\n            explorerUrl: `http://20.9.33.115:4000/`,\r\n            fullName: 'Dijets',\r\n            testnet: false,\r\n        },\r\n    ],\r\n    [\r\n        43113,\r\n        {\r\n            id: 43113,\r\n            nativeCurrency: AVAX,\r\n            type: 'fuji',\r\n            fullName: 'Avalanche Fuji',\r\n            shortName: 'Fuji',\r\n            explorerUrl: 'https://testnet.snowtrace.io/',\r\n            testnet: true,\r\n        },\r\n    ],\r\n    [\r\n        43114,\r\n        {\r\n            id: 43114,\r\n            nativeCurrency: AVAX,\r\n            type: 'avalanche',\r\n            fullName: 'Avalanche Mainnet',\r\n            shortName: 'Avalanche',\r\n            explorerUrl: 'https://snowtrace.io/',\r\n            testnet: false,\r\n        },\r\n    ],\r\n    [\r\n        100,\r\n        {\r\n            id: 100,\r\n            nativeCurrency: XDAI,\r\n            type: 'xdai',\r\n            fullName: 'xDAI',\r\n            shortName: 'xDAI',\r\n            explorerUrl: 'https://blockscout.com/xdai/mainnet/',\r\n            testnet: false,\r\n        },\r\n    ],\r\n    [\r\n        137,\r\n        {\r\n            id: 137,\r\n            nativeCurrency: MATIC,\r\n            type: 'matic',\r\n            fullName: 'Polygon Mainnet',\r\n            shortName: 'Polygon',\r\n            explorerUrl: `https://polygonscan.com`,\r\n            testnet: false,\r\n        },\r\n    ],\r\n    [\r\n        80001,\r\n        {\r\n            id: 80001,\r\n            nativeCurrency: MATIC,\r\n            type: 'mumbai',\r\n            fullName: 'Mumbai Testnet',\r\n            shortName: 'Mumbai',\r\n            explorerUrl: `https://mumbai.polygonscan.com`,\r\n            testnet: true,\r\n        },\r\n    ],\r\n    [\r\n        250,\r\n        {\r\n            id: 250,\r\n            nativeCurrency: FTM,\r\n            type: 'fantom',\r\n            fullName: 'Fantom Opera Mainnet',\r\n            shortName: 'FTM',\r\n            explorerUrl: `https://ftmscan.com/`,\r\n            testnet: false,\r\n        },\r\n    ],\r\n    [\r\n        1666600000,\r\n        {\r\n            id: 1666600000,\r\n            nativeCurrency: ONE,\r\n            type: 'harmony',\r\n            fullName: 'Harmony ONE',\r\n            shortName: 'Harmony',\r\n            explorerUrl: `https://explorer.harmony.one/`,\r\n            testnet: false,\r\n        },\r\n    ],\r\n    [\r\n        1666700000,\r\n        {\r\n            id: 1666700000,\r\n            nativeCurrency: ONE,\r\n            type: 'harmonyTest',\r\n            fullName: 'Harmony ONE Testnet',\r\n            shortName: 'Harmony Testnet',\r\n            explorerUrl: `https://explorer.testnet.harmony.one/`,\r\n            testnet: true,\r\n        },\r\n    ],\r\n    [\r\n        56,\r\n        {\r\n            id: 56,\r\n            nativeCurrency: BNB,\r\n            type: 'bsc',\r\n            fullName: 'Binance Smart Chain',\r\n            shortName: 'BSC',\r\n            explorerUrl: `https://bscscan.com/`,\r\n            testnet: false,\r\n        },\r\n    ],\r\n    [\r\n        97,\r\n        {\r\n            id: 97,\r\n            nativeCurrency: BNB,\r\n            type: 'bscTest',\r\n            fullName: 'Binance Smart Chain Testnet',\r\n            shortName: 'BSC Testnet',\r\n            explorerUrl: `https://testnet.bscscan.com/`,\r\n            testnet: true,\r\n        },\r\n    ],\r\n    [\r\n        108,\r\n        {\r\n            id: 108,\r\n            nativeCurrency: TT,\r\n            type: 'thundercore',\r\n            fullName: 'ThunderCore Mainnet',\r\n            shortName: 'ThunderCore',\r\n            explorerUrl: `https://scan.thundercore.com/`,\r\n            testnet: false,\r\n        },\r\n    ],\r\n    [\r\n        18,\r\n        {\r\n            id: 18,\r\n            nativeCurrency: TT,\r\n            type: 'thundercoreTest',\r\n            fullName: 'ThunderCore Testnet',\r\n            shortName: 'ThunderCore Testnet',\r\n            explorerUrl: `https://scan-testnet.thundercore.com/`,\r\n            testnet: true,\r\n        },\r\n    ],\r\n    [\r\n        421611,\r\n        {\r\n            id: 421611,\r\n            nativeCurrency: ETH,\r\n            type: 'arbitrumTest',\r\n            fullName: 'Arbitrum Testnet',\r\n            shortName: 'Arbitrum Testnet',\r\n            explorerUrl: 'https://testnet.arbiscan.io/',\r\n            testnet: true,\r\n        },\r\n    ],\r\n    [\r\n        42161,\r\n        {\r\n            id: 42161,\r\n            nativeCurrency: ETH,\r\n            type: 'arbitrum',\r\n            fullName: 'Arbitrum Mainnet',\r\n            shortName: 'Arbitrum',\r\n            explorerUrl: 'https://arbiscan.io/',\r\n            testnet: false,\r\n        },\r\n    ],\r\n    [\r\n        42220,\r\n        {\r\n            id: 42220,\r\n            nativeCurrency: CELO,\r\n            type: 'celo',\r\n            fullName: 'Celo (Mainnet)',\r\n            shortName: 'Celo',\r\n            explorerUrl: 'https://explorer.celo.org/',\r\n            testnet: false,\r\n        },\r\n    ],\r\n    [\r\n        44787,\r\n        {\r\n            id: 44787,\r\n            nativeCurrency: CELO,\r\n            type: 'celoTest',\r\n            fullName: 'Celo (Alfajores Testnet)',\r\n            shortName: 'Alfajores',\r\n            explorerUrl: 'https://alfajores-blockscout.celo-testnet.org/',\r\n            testnet: true,\r\n        },\r\n    ],\r\n    [\r\n        588,\r\n        {\r\n            id: 588,\r\n            nativeCurrency: METIS,\r\n            type: 'stardust',\r\n            fullName: 'Metis Stardust Testnet',\r\n            shortName: 'Stardust',\r\n            explorerUrl: 'https://stardust-explorer.metis.io/',\r\n            testnet: true,\r\n        },\r\n    ],\r\n    [\r\n        1088,\r\n        {\r\n            id: 1088,\r\n            nativeCurrency: METIS,\r\n            type: 'andromeda',\r\n            fullName: 'Metis Andromeda',\r\n            shortName: 'Andromeda',\r\n            explorerUrl: 'https://andromeda-explorer.metis.io/',\r\n            testnet: false,\r\n        },\r\n    ],\r\n    [\r\n        1313161555,\r\n        {\r\n            id: 1313161555,\r\n            nativeCurrency: ETH,\r\n            type: 'aurora',\r\n            fullName: 'Aurora Testnet',\r\n            shortName: 'AuroraTest',\r\n            explorerUrl: 'https://explorer.testnet.aurora.dev/',\r\n            testnet: true,\r\n        },\r\n    ],\r\n    [\r\n        1313161554,\r\n        {\r\n            id: 1313161554,\r\n            nativeCurrency: ETH,\r\n            type: 'aurora',\r\n            fullName: 'Aurora Mainnet',\r\n            shortName: 'Aurora',\r\n            explorerUrl: 'https://explorer.mainnet.aurora.dev/',\r\n            testnet: false,\r\n        },\r\n    ],\r\n    [\r\n        1287,\r\n        {\r\n            id: 1287,\r\n            nativeCurrency: DEV,\r\n            type: 'moonbase',\r\n            fullName: 'moonbase',\r\n            shortName: 'Moonbase Alphanet',\r\n            explorerUrl: 'https://moonbase.moonscan.io/',\r\n            testnet: true,\r\n        },\r\n    ],\r\n    [\r\n        1285,\r\n        {\r\n            id: 1285,\r\n            nativeCurrency: MOVR,\r\n            type: 'moonriver',\r\n            fullName: 'Moonriver',\r\n            shortName: 'Moonriver',\r\n            explorerUrl: 'https://moonriver.moonscan.io/',\r\n            testnet: false,\r\n        },\r\n    ],\r\n    [\r\n        1284,\r\n        {\r\n            id: 1284,\r\n            nativeCurrency: GLMR,\r\n            type: 'moonbeam',\r\n            fullName: 'Moonbeam',\r\n            shortName: 'Moonbeam',\r\n            explorerUrl: 'https://moonbeam.moonscan.io/',\r\n            testnet: false,\r\n        },\r\n    ],\r\n    [\r\n        1337,\r\n        {\r\n            id: 1337,\r\n            type: 'local',\r\n            testnet: true,\r\n        },\r\n    ],\r\n    [\r\n        5777,\r\n        {\r\n            id: 5777,\r\n            type: 'ganache',\r\n            testnet: true,\r\n        },\r\n    ],\r\n    [\r\n        128,\r\n        {\r\n            id: 128,\r\n            nativeCurrency: HECO,\r\n            type: 'main',\r\n            fullName: 'HECO Mainnet',\r\n            shortName: 'HECO',\r\n            explorerUrl: `https://hecoscan.xyz/`,\r\n            testnet: false,\r\n        },\r\n    ],\r\n]);\r\n/**\r\n * This method checks whether a particular chain id is known.\r\n *\r\n * @param {number} chainId chain id to check\r\n * @returns {boolean} true if chain is known\r\n */\r\nexport function isKnownChain(chainId) {\r\n    return CHAIN_INFORMATION.has(chainId);\r\n}\r\n/**\r\n *\r\n * @param {number} chainId chain id to retrieve information for\r\n * @throws {ChainUnknownError} if chain is unknown\r\n * @returns {boolean} information for specified chain\r\n */\r\nexport function getChainInformation(chainId) {\r\n    const chainInfo = CHAIN_INFORMATION.get(chainId);\r\n    if (!chainInfo)\r\n        throw new ChainUnknownError(`Unknown chain id: ${chainId}`);\r\n    return chainInfo;\r\n}\r\n/**\r\n * This is a getter method to returns the chain ids of all known chains.\r\n *\r\n * @returns {number[]} array of chain Ids\r\n */\r\nexport function getKnownChainsIds() {\r\n    return Array.from(CHAIN_INFORMATION.keys());\r\n}\r\n/**\r\n * This is a getter method to return all information available for each known chain.\r\n *\r\n * @returns {ChainInformation | ChainType[]} An array containing information for\r\n * each known chain\r\n */\r\nexport function getKnownChainInformation() {\r\n    return Array.from(CHAIN_INFORMATION.values());\r\n}\r\nexport function getDefaultChainId() {\r\n    return 1;\r\n}\r\n//# sourceMappingURL=chains.js.map","references":["/Users/saleemfareed/use-wallet/src/errors.ts","/Users/saleemfareed/use-wallet/src/types.ts"],"map":"{\"version\":3,\"file\":\"chains.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/chains.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/saleemfareed/use-wallet/chains.d.ts","writeByteOrderMark":false,"text":"import { ChainInformation, ChainType } from './types';\r\n/**\r\n * This method checks whether a particular chain id is known.\r\n *\r\n * @param {number} chainId chain id to check\r\n * @returns {boolean} true if chain is known\r\n */\r\nexport declare function isKnownChain(chainId: number): boolean;\r\n/**\r\n *\r\n * @param {number} chainId chain id to retrieve information for\r\n * @throws {ChainUnknownError} if chain is unknown\r\n * @returns {boolean} information for specified chain\r\n */\r\nexport declare function getChainInformation(chainId: number): ChainInformation | ChainType;\r\n/**\r\n * This is a getter method to returns the chain ids of all known chains.\r\n *\r\n * @returns {number[]} array of chain Ids\r\n */\r\nexport declare function getKnownChainsIds(): number[];\r\n/**\r\n * This is a getter method to return all information available for each known chain.\r\n *\r\n * @returns {ChainInformation | ChainType[]} An array containing information for\r\n * each known chain\r\n */\r\nexport declare function getKnownChainInformation(): ChainInformation | ChainType[];\r\nexport declare function getDefaultChainId(): number;\r\n"}}
