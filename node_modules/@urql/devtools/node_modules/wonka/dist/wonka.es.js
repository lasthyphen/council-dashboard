function h(a, b) {
  b.tag = a;
  return b;
}

function l(a, b, c) {
  for (var d = Array(c), e = 0; e < c; ) {
    d[e] = a[b], e = e + 1 | 0, b = b + 1 | 0;
  }
  return d;
}

function m(a, b) {
  for (;;) {
    var c = b;
    var d = 0 === (b = a.length) ? 1 : b;
    if (0 === (b = d - c.length | 0)) {
      return a.apply(null, c);
    }
    if (0 > b) {
      b = l(c, d, 0 | -b), a = a.apply(null, l(c, 0, d));
    } else {
      return function(a, c) {
        return function(d) {
          return m(a, c.concat([ d ]));
        };
      }(a, c);
    }
  }
}

function r(a, b) {
  var c = a.length;
  return 1 === c ? a(b) : function q(a, b, c) {
    switch (c) {
     case 1:
      return a(b);

     case 2:
      return function(c) {
        return a(b, c);
      };

     case 3:
      return function(c, e) {
        return a(b, c, e);
      };

     case 4:
      return function(c, e, f) {
        return a(b, c, e, f);
      };

     case 5:
      return function(c, e, f, g) {
        return a(b, c, e, f, g);
      };

     case 6:
      return function(c, e, f, g, k) {
        return a(b, c, e, f, g, k);
      };

     case 7:
      return function(c, e, f, g, k, n) {
        return a(b, c, e, f, g, k, n);
      };

     default:
      return m(a, [ b ]);
    }
  }(a, b, c);
}

function u(a, b, c, d) {
  var e = a.length;
  return 3 === e ? a(b, c, d) : function t(a, b, c, d, e) {
    switch (e) {
     case 1:
      return m(a(b), [ c, d ]);

     case 2:
      return m(a(b, c), [ d ]);

     case 3:
      return a(b, c, d);

     case 4:
      return function(e) {
        return a(b, c, d, e);
      };

     case 5:
      return function(e, g) {
        return a(b, c, d, e, g);
      };

     case 6:
      return function(e, g, k) {
        return a(b, c, d, e, g, k);
      };

     case 7:
      return function(e, g, k, n) {
        return a(b, c, d, e, g, k, n);
      };

     default:
      return m(a, [ b, c, d ]);
    }
  }(a, b, c, d, e);
}

var v = [];

function w(a) {
  if (void 0 === a) {
    return (a = [ v, 0 ]).tag = 256, a;
  }
  null !== a && a[0] === v && ((a = [ v, a[1] + 1 | 0 ]).tag = 256);
  return a;
}

function x(a) {
  if (null !== a && a[0] === v) {
    if (0 !== (a = a[1])) {
      return [ v, a - 1 | 0 ];
    }
  } else {
    return a;
  }
}

function y() {
  return 0;
}

function z(a, b) {
  let c = y;
  return r(a, function(a) {
    "number" != typeof a && (a.tag || (c = a[0]));
    return b(a, c);
  });
}

function A(a, b) {
  let c = !1, d = !1, e = !1;
  return a(h(0, [ function(f) {
    if (f) {
      c = !0;
    } else if (d) {
      e = !0;
    } else {
      for (d = e = !0; e && !c; ) {
        void 0 !== (f = b()) ? (e = !1, a(h(1, [ x(f) ]))) : (c = !0, a(0));
      }
      d = !1;
    }
    return 0;
  } ]));
}

var B = "function" == typeof Symbol ? Symbol.observable || (Symbol.observable = Symbol("observable")) : "@@observable";

function C() {
  return 0;
}

function D(a) {
  return function(b) {
    return function(c) {
      function d() {
        return e.shift();
      }
      var e = [];
      return z(b, function(b, g) {
        if ("number" == typeof b) {
          return A(c, d);
        }
        b.tag && (e.length >= a && 0 < a && e.shift(), e.push(b[0]));
        return g(0);
      });
    };
  };
}

function E(a, b) {
  return function(c) {
    function d(a) {
      return c(h(1, [ a ]));
    }
    c(h(0, [ function(c) {
      return c ? r(b, d) : 0;
    } ]));
    return r(a, d);
  };
}

function F(a, b, c) {
  a.addEventListener(b, c);
}

function G(a, b, c) {
  a.removeEventListener(b, c);
}

function H(a) {
  return function(b) {
    let c = y, d = !1;
    r(b, function(e) {
      if ("number" == typeof e) {
        return d = !0, 0;
      }
      if (e.tag) {
        if (d) {
          return 0;
        }
        a(e[0]);
        return c(0);
      }
      c = e = e[0];
      return e(0);
    });
    return [ function() {
      if (d) {
        return 0;
      }
      d = !0;
      return c(1);
    } ];
  };
}

function I() {
  return 0;
}

function J(a) {
  return function(b) {
    var c = a.length;
    let d = 0;
    return A(b, function() {
      if (d < c) {
        var e = a[d];
        d = d + 1 | 0;
        return w(e);
      }
    });
  };
}

function K(a) {
  return a(0);
}

function L(a) {
  return a(0);
}

function M(a) {
  return function(b) {
    return function(c) {
      return r(b, function(d) {
        "number" != typeof d && d.tag && a(d[0]);
        return c(d);
      });
    };
  };
}

function N() {
  return 0;
}

function O() {
  return 0;
}

function P(a) {
  return a(1);
}

function Q(a) {
  return a(1);
}

function R(a) {
  return a(0);
}

function S(a) {
  return function(b) {
    return function(c) {
      let e = y, f = [], g = !1;
      r(b, function(b) {
        if ("number" == typeof b) {
          if (g) {
            return 0;
          }
          g = !0;
          return 0 === f.length ? c(0) : 0;
        }
        if (b.tag) {
          if (g) {
            return 0;
          }
          !function d(a) {
            function d(c) {
              return c !== e;
            }
            let e = y;
            return r(a, function(a) {
              if ("number" == typeof a) {
                return f = f.filter(d), g && 0 === f.length ? c(0) : 0;
              }
              if (a.tag) {
                return 0 !== f.length ? (c(h(1, [ a[0] ])), e(0)) : 0;
              }
              e = a = a[0];
              f = f.concat(a);
              return a(0);
            });
          }(a(b[0]));
          return e(0);
        }
        e = b = b[0];
        return b(0);
      });
      return c(h(0, [ function(a) {
        a ? (f.forEach(P), g || (g = !0, e(1), f.forEach(Q), f = [])) : g || f.forEach(R);
        return 0;
      } ]));
    };
  };
}

function T(a) {
  return a;
}

function U(a) {
  return a;
}

function V(a) {
  return S(U)(a);
}

function W(a) {
  return function(b) {
    return function(c) {
      function d(b) {
        if ("number" == typeof b) {
          return k = !1, g = y, void 0 !== (b = e.shift()) ? r(a(x(b)), d) : p ? c(0) : 0;
        }
        if (b.tag) {
          if (n) {
            return 0;
          }
          c(h(1, [ b[0] ]));
          return g(0);
        }
        k = !0;
        g = b = b[0];
        return b(0);
      }
      let e = [], f = y, g = y, k = !1, n = !1, p = !1;
      r(b, function(b) {
        if ("number" == typeof b) {
          if (p) {
            return 0;
          }
          p = !0;
          return k || 0 !== e.length ? 0 : c(0);
        }
        if (b.tag) {
          if (p) {
            return 0;
          }
          b = b[0];
          k ? e.push(b) : r(a(b), d);
          return f(0);
        }
        f = b = b[0];
        return b(0);
      });
      return c(h(0, [ function(a) {
        return a ? (g(1), p || (n = p = !0, f(1), g = y), 0) : p ? 0 : g(0);
      } ]));
    };
  };
}

function X(a) {
  return a;
}

function Y(a) {
  return a;
}

function Z(a) {
  return function(b) {
    return function(c) {
      function d(a) {
        if ("number" == typeof a) {
          return g = !1, f = y, n ? c(0) : 0;
        }
        if (a.tag) {
          if (k) {
            return 0;
          }
          c(h(1, [ a[0] ]));
          return f(0);
        }
        g = !0;
        f = a = a[0];
        return a(0);
      }
      let e = y, f = y, g = !1, k = !1, n = !1;
      r(b, function(b) {
        if ("number" == typeof b) {
          if (n) {
            return 0;
          }
          n = !0;
          return g ? 0 : c(0);
        }
        if (b.tag) {
          if (n) {
            return 0;
          }
          g && (f(1), f = y);
          r(a(b[0]), d);
          return e(0);
        }
        e = b = b[0];
        return b(0);
      });
      return c(h(0, [ function(a) {
        return a ? (f(1), n || (k = n = !0, e(1), f = y), 0) : f(0);
      } ]));
    };
  };
}

function aa(a) {
  return a;
}

var Types = 0;

var buffer$2 = function(a) {
  return function(b) {
    return function(c) {
      function d(a) {
        if ("number" == typeof a) {
          if (k) {
            return 0;
          }
          k = !0;
          f(1);
          c(h(1, [ e ]));
          return c(0);
        }
        if (a.tag) {
          if (k) {
            return 0;
          }
          c(h(1, [ e ]));
          e = [];
          return g(0);
        }
        return (g = a[0])(0);
      }
      let e = [], f = y, g = y, k = !1;
      r(b, function(b) {
        if ("number" == typeof b) {
          if (k) {
            return 0;
          }
          k = !0;
          g(1);
          c(h(1, [ e ]));
          return c(0);
        }
        if (b.tag) {
          if (k) {
            return 0;
          }
          e.push(b[0]);
          return f(0);
        }
        f = b[0];
        return r(a, d);
      });
      return c(h(0, [ function(a) {
        return k ? 0 : a ? (k = !0, f(1), g(1)) : f(0);
      } ]));
    };
  };
};

var combine$2 = function(a) {
  return function(b) {
    return function(c) {
      let d = y, e = y, f = void 0, g = void 0, k = !1, n = 0, p = !1;
      r(a, function(a) {
        var b = g;
        if ("number" == typeof a) {
          if (1 > n) {
            return n = n + 1 | 0, 0;
          }
          if (p) {
            return 0;
          }
          p = !0;
          return c(0);
        }
        if (a.tag) {
          a = a[0];
          if (void 0 !== b) {
            if (p) {
              return 0;
            }
            f = w(a);
            k = !1;
            return c(h(1, [ [ a, x(b) ] ]));
          }
          f = w(a);
          k = !1;
          return 0;
        }
        d = a[0];
        return 0;
      });
      r(b, function(a) {
        var b = f;
        if ("number" == typeof a) {
          if (1 > n) {
            return n = n + 1 | 0, 0;
          }
          if (p) {
            return 0;
          }
          p = !0;
          return c(0);
        }
        if (a.tag) {
          a = a[0];
          if (void 0 !== b) {
            if (p) {
              return 0;
            }
            g = w(a);
            k = !1;
            return c(h(1, [ [ x(b), a ] ]));
          }
          g = w(a);
          k = !1;
          return 0;
        }
        e = a[0];
        return 0;
      });
      return c(h(0, [ function(a) {
        if (p) {
          return 0;
        }
        if (a) {
          return p = !0, d(1), e(1);
        }
        if (k) {
          return 0;
        }
        k = !0;
        d(a);
        return e(a);
      } ]));
    };
  };
};

var concat$2 = function(a) {
  return W(Y)(J(a));
};

var concatAll$2 = function(a) {
  return W(X)(a);
};

var concatMap$2 = W;

var debounce$2 = function(a) {
  return function(b) {
    return function(c) {
      function d() {
        var a = f;
        void 0 !== a && (f = void 0, clearTimeout(x(a)));
        return 0;
      }
      let e = !1, f = void 0;
      return r(b, function(b) {
        if ("number" == typeof b) {
          return e = !0, void 0 !== f ? 0 : c(0);
        }
        if (b.tag) {
          return d(), f = w(setTimeout(function g() {
            f = void 0;
            c(b);
            return e ? c(0) : 0;
          }, a(b[0]))), 0;
        }
        var n = b[0];
        return c(h(0, [ function(a) {
          return a ? (d(), n(1)) : n(a);
        } ]));
      });
    };
  };
};

var delay$2 = function(a) {
  return function(b) {
    return function(c) {
      let d = y, e = 0, f = !1;
      r(b, function(b) {
        if ("number" != typeof b && !b.tag) {
          return d = b[0], 0;
        }
        f || (e = e + 1 | 0, setTimeout(function k() {
          f && 0 === e ? c(0) : e = e - 1 | 0;
          return c(b);
        }, a));
        return 0;
      });
      return c(h(0, [ function(a) {
        return a ? (f = !0, 0 === e ? c(0) : 0) : f ? 0 : d(a);
      } ]));
    };
  };
};

var empty$2 = function(a) {
  a(h(0, [ y ]));
  return a(0);
};

var filter$2 = function(a) {
  return function(b) {
    return function(c) {
      return z(b, function(b, e) {
        return "number" == typeof b || !b.tag || a(b[0]) ? c(b) : e(0);
      });
    };
  };
};

var flatten$2 = V;

var forEach$2 = function(a) {
  return function(b) {
    H(a)(b);
    return 0;
  };
};

var fromArray$2 = J;

var fromCallbag$2 = function(a) {
  return function(b) {
    return a(0, function(a, d) {
      switch (a) {
       case 0:
        return b(h(0, [ function c(a) {
          return a ? d(2) : d(1);
        } ]));

       case 1:
        return b(h(1, [ d ]));

       case 2:
        return b(0);
      }
    });
  };
};

var fromDomEvent$2 = function(a, b) {
  return function(c) {
    return E(function(c) {
      return u(F, a, b, c);
    }, function(c) {
      return u(G, a, b, c);
    })(c);
  };
};

var fromList$2 = function(a) {
  return function(b) {
    let c = a;
    return A(b, function() {
      var a = c;
      if (a) {
        return c = a[1], w(a[0]);
      }
    });
  };
};

var fromListener$2 = E;

var fromObservable$2 = function(a) {
  var b = void 0 !== a[B] ? a[B]() : a;
  return function(a) {
    var c = b.subscribe({
      next: function(b) {
        return a(h(1, [ b ]));
      },
      complete: function() {
        return a(0);
      },
      error: C
    });
    return a(h(0, [ function(a) {
      return a ? c.unsubscribe() : 0;
    } ]));
  };
};

var fromPromise$2 = function(a) {
  return function(b) {
    let c = !1;
    a.then(function(a) {
      c || (b(h(1, [ a ])), b(0));
      return Promise.resolve(0);
    });
    return b(h(0, [ function(a) {
      a && (c = !0);
      return 0;
    } ]));
  };
};

var fromValue$2 = function(a) {
  return function(b) {
    let c = !1;
    return b(h(0, [ function(d) {
      if (d || c) {
        return 0;
      }
      c = !0;
      b(h(1, [ a ]));
      return b(0);
    } ]));
  };
};

var interval$2 = function(a) {
  return function(b) {
    let c = 0;
    var d = setInterval(function() {
      var a = c;
      c = c + 1 | 0;
      return b(h(1, [ a ]));
    }, a);
    return b(h(0, [ function(a) {
      a && clearInterval(d);
      return 0;
    } ]));
  };
};

var make$2 = function(a) {
  return function(b) {
    let c = I;
    b(h(0, [ function(a) {
      return a ? c() : 0;
    } ]));
    c = a([ function(a) {
      return b(h(1, [ a ]));
    }, function() {
      return b(0);
    } ]);
    return 0;
  };
};

var makeSubject$2 = function() {
  let a = [], b = !1;
  return [ function(b) {
    function c(a) {
      return a !== b;
    }
    a = a.concat(b);
    return b(h(0, [ function(b) {
      1 === b && (a = a.filter(c));
      return 0;
    } ]));
  }, function(c) {
    b || a.forEach(function d(a) {
      return a(h(1, [ c ]));
    });
    return 0;
  }, function() {
    b || (b = !0, a.forEach(K));
    return 0;
  } ];
};

var map$2 = function(a) {
  return function(b) {
    return function(c) {
      return r(b, function(b) {
        b = "number" == typeof b ? 0 : b.tag ? h(1, [ a(b[0]) ]) : h(0, [ b[0] ]);
        return c(b);
      });
    };
  };
};

var merge$2 = function(a) {
  return S(T)(J(a));
};

var mergeAll$2 = V;

var mergeMap$2 = S;

var never$2 = function(a) {
  return a(h(0, [ y ]));
};

var onEnd$2 = function(a) {
  return function(b) {
    return function(c) {
      let d = !1;
      return r(b, function(b) {
        if ("number" == typeof b) {
          if (d) {
            return 0;
          }
          d = !0;
          c(b);
          return a();
        }
        if (b.tag) {
          return c(b);
        }
        var e = b[0];
        return c(h(0, [ function(b) {
          b && !d && (d = !0, a());
          return e(b);
        } ]));
      });
    };
  };
};

var onPush$2 = M;

var onStart$2 = function(a) {
  return function(b) {
    return function(c) {
      return r(b, function(b) {
        if ("number" == typeof b || b.tag) {
          return c(b);
        }
        c(b);
        return a();
      });
    };
  };
};

var pipe = function(a) {
  for (var b = arguments, c = b.length, d = a, e = 1; e < c; e++) {
    d = b[e](d);
  }
  return d;
};

var publish$2 = function(a) {
  let b = y, c = !1;
  r(a, function(a) {
    if ("number" == typeof a) {
      return c = !0, 0;
    }
    if (a.tag) {
      return c ? 0 : b(0);
    }
    b = a = a[0];
    return a(0);
  });
  return [ function() {
    if (c) {
      return 0;
    }
    c = !0;
    return b(1);
  } ];
};

var sample$2 = function(a) {
  return function(b) {
    return function(c) {
      let d = !1, e = void 0, f = N, g = O;
      r(b, function(a) {
        if ("number" == typeof a) {
          return d = !0, g(1), c(0);
        }
        a.tag ? e = w(a[0]) : f = a[0];
        return 0;
      });
      r(a, function(a) {
        var b = e;
        if ("number" == typeof a) {
          return d = !0, f(1), c(0);
        }
        if (a.tag) {
          if (void 0 === b || d) {
            return 0;
          }
          e = void 0;
          return c(h(1, [ x(b) ]));
        }
        g = a[0];
        return 0;
      });
      return c(h(0, [ function(a) {
        if (a) {
          return d = !0, f(1), g(1);
        }
        f(0);
        return g(0);
      } ]));
    };
  };
};

var scan$2 = function(a, b) {
  return function(c) {
    return function(d) {
      let e = b;
      return r(c, function(b) {
        "number" == typeof b ? b = 0 : b.tag ? b = h(1, [ e = a(e, b[0]) ]) : b = h(0, [ b[0] ]);
        return d(b);
      });
    };
  };
};

var share$2 = function(a) {
  function b(a) {
    "number" == typeof a ? (c.forEach(L), c = []) : a.tag ? (e = !1, c.forEach(function b(b) {
      return b(a);
    })) : d = a[0];
    return 0;
  }
  let c = [], d = y, e = !1;
  return function(f) {
    function g(a) {
      return a !== f;
    }
    1 === (c = c.concat(f)).length && r(a, b);
    return f(h(0, [ function(a) {
      if (a) {
        return 0 === (c = c.filter(g)).length ? d(1) : 0;
      }
      if (e) {
        return 0;
      }
      e = !0;
      return d(a);
    } ]));
  };
};

var skip$2 = function(a) {
  return function(b) {
    return function(c) {
      let d = a;
      return z(b, function(a, b) {
        return "number" != typeof a && a.tag && 0 < d ? (d = d - 1 | 0, b(0)) : c(a);
      });
    };
  };
};

var skipUntil$2 = function(a) {
  return function(b) {
    return function(c) {
      let d = !0, e = !1, f = !1, g = y, k = y;
      r(b, function(b) {
        if ("number" == typeof b) {
          return d && k(1), e = !0, c(0);
        }
        if (b.tag) {
          if (d && !e) {
            return g(0);
          }
          if (e) {
            return 0;
          }
          f = !1;
          return c(b);
        }
        var n = b[0];
        g = n;
        return r(a, function(a) {
          if ("number" == typeof a) {
            return 0;
          }
          if (a.tag) {
            return d = !1, k(1);
          }
          k = a = a[0];
          a(0);
          return n(0);
        });
      });
      return c(h(0, [ function(a) {
        if (a) {
          return d && k(1), e = !0, g(1);
        }
        if (f || e) {
          return 0;
        }
        f = !0;
        return g(0);
      } ]));
    };
  };
};

var skipWhile$2 = function(a) {
  return function(b) {
    return function(c) {
      let d = !0;
      return z(b, function(b, f) {
        if ("number" != typeof b && b.tag && d) {
          if (a(b[0])) {
            return f(0);
          }
          d = !1;
        }
        return c(b);
      });
    };
  };
};

var subscribe$2 = H;

var switchAll$2 = function(a) {
  return Z(aa)(a);
};

var switchMap$2 = Z;

var take$2 = function(a) {
  return function(b) {
    return function(c) {
      let d = 0, e = y;
      r(b, function(b) {
        if ("number" == typeof b) {
          return d < a ? (d = a, c(0)) : 0;
        }
        if (b.tag) {
          return d < a && (d = d + 1 | 0, c(b), d === a) ? (c(0), e(1)) : 0;
        }
        e = b[0];
        return 0;
      });
      return c(h(0, [ function(b) {
        return d < a ? b ? (d = a, e(1)) : e(0) : 0;
      } ]));
    };
  };
};

var takeLast$2 = D;

var takeUntil$2 = function(a) {
  return function(b) {
    return function(c) {
      function d(a) {
        if ("number" == typeof a) {
          return 0;
        }
        if (a.tag) {
          return e = !0, f(1), c(0);
        }
        g = a = a[0];
        return a(0);
      }
      let e = !1, f = y, g = y;
      r(b, function(b) {
        if ("number" == typeof b) {
          if (e) {
            return 0;
          }
          e = !0;
          g(1);
          return c(0);
        }
        if (b.tag) {
          return e ? 0 : c(b);
        }
        f = b[0];
        return r(a, d);
      });
      return c(h(0, [ function(a) {
        return e ? 0 : a ? (e = !0, f(1), g(1)) : f(0);
      } ]));
    };
  };
};

var takeWhile$2 = function(a) {
  return function(b) {
    return function(c) {
      let d = !1, e = y;
      r(b, function(b) {
        if ("number" == typeof b) {
          if (d) {
            return 0;
          }
          d = !0;
          return c(0);
        }
        if (b.tag) {
          if (d) {
            return 0;
          }
          if (a(b[0])) {
            return c(b);
          }
          d = !0;
          c(0);
          return e(1);
        }
        e = b[0];
        return c(b);
      });
      return c(h(0, [ function(a) {
        return d ? 0 : a ? (d = !0, e(1)) : e(0);
      } ]));
    };
  };
};

var tap$2 = M;

var throttle$2 = function(a) {
  return function(b) {
    return function(c) {
      function d() {
        void 0 !== g && clearTimeout(x(g));
        return 0;
      }
      function e() {
        g = void 0;
        f = !1;
        return 0;
      }
      let f = !1, g = void 0;
      return r(b, function(b) {
        if ("number" == typeof b) {
          return d(), c(0);
        }
        if (b.tag) {
          if (f) {
            return 0;
          }
          f = !0;
          d();
          g = w(setTimeout(e, a(b[0])));
          return c(b);
        }
        var k = b[0];
        return c(h(0, [ function(a) {
          return a ? (d(), k(1)) : k(a);
        } ]));
      });
    };
  };
};

var toArray$2 = function(a) {
  let b = [], c = y, d = !1;
  r(a, function(a) {
    if ("number" == typeof a) {
      return d = !0, 0;
    }
    if (a.tag) {
      return b.push(a[0]), c(0);
    }
    c = a = a[0];
    return a(0);
  });
  d || c(1);
  return b;
};

var toCallbag$2 = function(a) {
  return function(b, c) {
    return 0 === b ? r(a, function d(a) {
      if ("number" == typeof a) {
        return c(2, 0);
      }
      if (a.tag) {
        return c(1, a[0]);
      }
      var b = a[0];
      return c(0, function(a) {
        switch (a) {
         case 0:
          return 0;

         case 1:
          return b(0);

         case 2:
          return b(1);
        }
      });
    }) : 0;
  };
};

var toObservable$2 = function(a) {
  var b = {
    subscribe: function(b) {
      let c = y, e = !1;
      r(a, function(a) {
        if ("number" == typeof a) {
          return e = !0, b.complete();
        }
        if (a.tag) {
          if (e) {
            return 0;
          }
          b.next(a[0]);
          return c(0);
        }
        c = a = a[0];
        return a(0);
      });
      return {
        unsubscribe: function() {
          if (e) {
            return 0;
          }
          e = !0;
          return c(1);
        }
      };
    }
  };
  b[B] = function() {
    return b;
  };
  return b;
};

var toPromise$2 = function(a) {
  return new Promise(function(b) {
    return r(D(1)(a), function(a) {
      return "number" == typeof a ? 0 : a.tag ? b(a[0]) : a[0](0);
    });
  });
};

export { Types, buffer$2 as buffer, combine$2 as combine, concat$2 as concat, concatAll$2 as concatAll, concatMap$2 as concatMap, debounce$2 as debounce, delay$2 as delay, empty$2 as empty, filter$2 as filter, flatten$2 as flatten, forEach$2 as forEach, fromArray$2 as fromArray, fromCallbag$2 as fromCallbag, fromDomEvent$2 as fromDomEvent, fromList$2 as fromList, fromListener$2 as fromListener, fromObservable$2 as fromObservable, fromPromise$2 as fromPromise, fromValue$2 as fromValue, interval$2 as interval, make$2 as make, makeSubject$2 as makeSubject, map$2 as map, merge$2 as merge, mergeAll$2 as mergeAll, mergeMap$2 as mergeMap, never$2 as never, onEnd$2 as onEnd, onPush$2 as onPush, onStart$2 as onStart, pipe, publish$2 as publish, sample$2 as sample, scan$2 as scan, share$2 as share, skip$2 as skip, skipUntil$2 as skipUntil, skipWhile$2 as skipWhile, subscribe$2 as subscribe, switchAll$2 as switchAll, switchMap$2 as switchMap, take$2 as take, takeLast$2 as takeLast, takeUntil$2 as takeUntil, takeWhile$2 as takeWhile, tap$2 as tap, throttle$2 as throttle, toArray$2 as toArray, toCallbag$2 as toCallbag, toObservable$2 as toObservable, toPromise$2 as toPromise };
