{"version":3,"file":"wonka.js","sources":["../node_modules/bs-platform/lib/es6/block.js","../node_modules/bs-platform/lib/es6/caml_array.js","../node_modules/bs-platform/lib/es6/curry.js","../node_modules/bs-platform/lib/es6/caml_option.js","../src/wonka_helpers.js","../src/web/wonka_observable.js","../src/operators/wonka_operator_takeLast.js","../src/web/wonka_source_fromListener.js","../src/web/wonka_source_fromDomEvent.js","../src/web/wonkaJs.js","../src/web/wonka_sink_toPromise.js","../src/sinks/wonka_sink_subscribe.js","../src/sources/wonka_source_fromArray.js","../src/sources/wonka_source_makeSubject.js","../src/operators/wonka_operator_share.js","../src/operators/wonka_operator_onPush.js","../src/operators/wonka_operator_sample.js","../src/operators/wonka_operator_mergeMap.js","../src/operators/wonka_operator_concatMap.js","../include/rebel_js/MutableQueue_js.js","../src/operators/wonka_operator_switchMap.js","../src/wonka_operators.js","../src/wonka.js","../src/wonka_sources.js","../src/sources/wonka_source_fromList.js","../src/sources/wonka_source_fromValue.js","../src/sources/wonka_source_make.js","../src/sources/wonka_source_primitives.js","../src/operators/wonka_operator_buffer.js","../src/operators/wonka_operator_combine.js","../src/operators/wonka_operator_filter.js","../src/operators/wonka_operator_map.js","../src/operators/wonka_operator_onEnd.js","../src/operators/wonka_operator_onStart.js","../src/operators/wonka_operator_scan.js","../src/operators/wonka_operator_skip.js","../src/operators/wonka_operator_skipUntil.js","../src/operators/wonka_operator_skipWhile.js","../src/operators/wonka_operator_take.js","../src/operators/wonka_operator_takeUntil.js","../src/operators/wonka_operator_takeWhile.js","../src/sinks/wonka_sink_publish.js","../src/wonka_sinks.js","../src/sinks/wonka_sink_toArray.js","../src/web/wonka_operator_debounce.js","../src/web/wonka_operator_delay.js","../src/web/wonka_operator_throttle.js","../src/web/wonka_source_interval.js","../src/web/wonka_source_fromPromise.js","../src/web/wonka_callbag.js","../src/pipe.js"],"sourcesContent":["\n\n\nfunction __(tag, block) {\n  block.tag = tag;\n  return block;\n}\n\nfunction record(meta, xs) {\n  return Object.defineProperty(xs, Symbol.for(\"BsRecord\"), {\n              value: meta\n            });\n}\n\nfunction variant(meta, tag, xs) {\n  xs.tag = tag;\n  return Object.defineProperty(xs, Symbol.for(\"BsVariant\"), {\n              value: meta\n            });\n}\n\nfunction simpleVariant(meta, xs) {\n  return Object.defineProperty(xs, Symbol.for(\"BsVariant\"), {\n              value: meta\n            });\n}\n\nfunction localModule(meta, xs) {\n  return Object.defineProperty(xs, Symbol.for(\"BsLocalModule\"), {\n              value: meta\n            });\n}\n\nfunction polyVar(meta, xs) {\n  return Object.defineProperty(xs, Symbol.for(\"BsPolyVar\"), {\n              value: meta\n            });\n}\n\nexport {\n  __ ,\n  record ,\n  variant ,\n  simpleVariant ,\n  localModule ,\n  polyVar ,\n  \n}\n/* No side effect */\n","\n\nimport * as Caml_builtin_exceptions from \"./caml_builtin_exceptions.js\";\n\nfunction caml_array_sub(x, offset, len) {\n  var result = new Array(len);\n  var j = 0;\n  var i = offset;\n  while(j < len) {\n    result[j] = x[i];\n    j = j + 1 | 0;\n    i = i + 1 | 0;\n  };\n  return result;\n}\n\nfunction len(_acc, _l) {\n  while(true) {\n    var l = _l;\n    var acc = _acc;\n    if (l) {\n      _l = l[1];\n      _acc = l[0].length + acc | 0;\n      continue ;\n    } else {\n      return acc;\n    }\n  };\n}\n\nfunction fill(arr, _i, _l) {\n  while(true) {\n    var l = _l;\n    var i = _i;\n    if (l) {\n      var x = l[0];\n      var l$1 = x.length;\n      var k = i;\n      var j = 0;\n      while(j < l$1) {\n        arr[k] = x[j];\n        k = k + 1 | 0;\n        j = j + 1 | 0;\n      };\n      _l = l[1];\n      _i = k;\n      continue ;\n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction caml_array_concat(l) {\n  var v = len(0, l);\n  var result = new Array(v);\n  fill(result, 0, l);\n  return result;\n}\n\nfunction caml_array_set(xs, index, newval) {\n  if (index < 0 || index >= xs.length) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"index out of bounds\"\n        ];\n  }\n  xs[index] = newval;\n  return /* () */0;\n}\n\nfunction caml_array_get(xs, index) {\n  if (index < 0 || index >= xs.length) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"index out of bounds\"\n        ];\n  }\n  return xs[index];\n}\n\nfunction caml_make_vect(len, init) {\n  var b = new Array(len);\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    b[i] = init;\n  }\n  return b;\n}\n\nfunction caml_make_float_vect(len) {\n  var b = new Array(len);\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    b[i] = 0;\n  }\n  return b;\n}\n\nfunction caml_array_blit(a1, i1, a2, i2, len) {\n  if (i2 <= i1) {\n    for(var j = 0 ,j_finish = len - 1 | 0; j <= j_finish; ++j){\n      a2[j + i2 | 0] = a1[j + i1 | 0];\n    }\n    return /* () */0;\n  } else {\n    for(var j$1 = len - 1 | 0; j$1 >= 0; --j$1){\n      a2[j$1 + i2 | 0] = a1[j$1 + i1 | 0];\n    }\n    return /* () */0;\n  }\n}\n\nfunction caml_array_dup(prim) {\n  return prim.slice(0);\n}\n\nexport {\n  caml_array_dup ,\n  caml_array_sub ,\n  caml_array_concat ,\n  caml_make_vect ,\n  caml_make_float_vect ,\n  caml_array_blit ,\n  caml_array_get ,\n  caml_array_set ,\n  \n}\n/* No side effect */\n","\n\nimport * as Caml_array from \"./caml_array.js\";\n\nfunction app(_f, _args) {\n  while(true) {\n    var args = _args;\n    var f = _f;\n    var init_arity = f.length;\n    var arity = init_arity === 0 ? 1 : init_arity;\n    var len = args.length;\n    var d = arity - len | 0;\n    if (d === 0) {\n      return f.apply(null, args);\n    } else if (d < 0) {\n      _args = Caml_array.caml_array_sub(args, arity, -d | 0);\n      _f = f.apply(null, Caml_array.caml_array_sub(args, 0, arity));\n      continue ;\n    } else {\n      return (function(f,args){\n      return function (x) {\n        return app(f, args.concat(/* array */[x]));\n      }\n      }(f,args));\n    }\n  };\n}\n\nfunction curry_1(o, a0, arity) {\n  switch (arity) {\n    case 1 : \n        return o(a0);\n    case 2 : \n        return (function (param) {\n            return o(a0, param);\n          });\n    case 3 : \n        return (function (param, param$1) {\n            return o(a0, param, param$1);\n          });\n    case 4 : \n        return (function (param, param$1, param$2) {\n            return o(a0, param, param$1, param$2);\n          });\n    case 5 : \n        return (function (param, param$1, param$2, param$3) {\n            return o(a0, param, param$1, param$2, param$3);\n          });\n    case 6 : \n        return (function (param, param$1, param$2, param$3, param$4) {\n            return o(a0, param, param$1, param$2, param$3, param$4);\n          });\n    case 7 : \n        return (function (param, param$1, param$2, param$3, param$4, param$5) {\n            return o(a0, param, param$1, param$2, param$3, param$4, param$5);\n          });\n    default:\n      return app(o, /* array */[a0]);\n  }\n}\n\nfunction _1(o, a0) {\n  var arity = o.length;\n  if (arity === 1) {\n    return o(a0);\n  } else {\n    return curry_1(o, a0, arity);\n  }\n}\n\nfunction __1(o) {\n  var arity = o.length;\n  if (arity === 1) {\n    return o;\n  } else {\n    return (function (a0) {\n        return _1(o, a0);\n      });\n  }\n}\n\nfunction curry_2(o, a0, a1, arity) {\n  switch (arity) {\n    case 1 : \n        return app(o(a0), /* array */[a1]);\n    case 2 : \n        return o(a0, a1);\n    case 3 : \n        return (function (param) {\n            return o(a0, a1, param);\n          });\n    case 4 : \n        return (function (param, param$1) {\n            return o(a0, a1, param, param$1);\n          });\n    case 5 : \n        return (function (param, param$1, param$2) {\n            return o(a0, a1, param, param$1, param$2);\n          });\n    case 6 : \n        return (function (param, param$1, param$2, param$3) {\n            return o(a0, a1, param, param$1, param$2, param$3);\n          });\n    case 7 : \n        return (function (param, param$1, param$2, param$3, param$4) {\n            return o(a0, a1, param, param$1, param$2, param$3, param$4);\n          });\n    default:\n      return app(o, /* array */[\n                  a0,\n                  a1\n                ]);\n  }\n}\n\nfunction _2(o, a0, a1) {\n  var arity = o.length;\n  if (arity === 2) {\n    return o(a0, a1);\n  } else {\n    return curry_2(o, a0, a1, arity);\n  }\n}\n\nfunction __2(o) {\n  var arity = o.length;\n  if (arity === 2) {\n    return o;\n  } else {\n    return (function (a0, a1) {\n        return _2(o, a0, a1);\n      });\n  }\n}\n\nfunction curry_3(o, a0, a1, a2, arity) {\n  switch (arity) {\n    case 1 : \n        return app(o(a0), /* array */[\n                    a1,\n                    a2\n                  ]);\n    case 2 : \n        return app(o(a0, a1), /* array */[a2]);\n    case 3 : \n        return o(a0, a1, a2);\n    case 4 : \n        return (function (param) {\n            return o(a0, a1, a2, param);\n          });\n    case 5 : \n        return (function (param, param$1) {\n            return o(a0, a1, a2, param, param$1);\n          });\n    case 6 : \n        return (function (param, param$1, param$2) {\n            return o(a0, a1, a2, param, param$1, param$2);\n          });\n    case 7 : \n        return (function (param, param$1, param$2, param$3) {\n            return o(a0, a1, a2, param, param$1, param$2, param$3);\n          });\n    default:\n      return app(o, /* array */[\n                  a0,\n                  a1,\n                  a2\n                ]);\n  }\n}\n\nfunction _3(o, a0, a1, a2) {\n  var arity = o.length;\n  if (arity === 3) {\n    return o(a0, a1, a2);\n  } else {\n    return curry_3(o, a0, a1, a2, arity);\n  }\n}\n\nfunction __3(o) {\n  var arity = o.length;\n  if (arity === 3) {\n    return o;\n  } else {\n    return (function (a0, a1, a2) {\n        return _3(o, a0, a1, a2);\n      });\n  }\n}\n\nfunction curry_4(o, a0, a1, a2, a3, arity) {\n  switch (arity) {\n    case 1 : \n        return app(o(a0), /* array */[\n                    a1,\n                    a2,\n                    a3\n                  ]);\n    case 2 : \n        return app(o(a0, a1), /* array */[\n                    a2,\n                    a3\n                  ]);\n    case 3 : \n        return app(o(a0, a1, a2), /* array */[a3]);\n    case 4 : \n        return o(a0, a1, a2, a3);\n    case 5 : \n        return (function (param) {\n            return o(a0, a1, a2, a3, param);\n          });\n    case 6 : \n        return (function (param, param$1) {\n            return o(a0, a1, a2, a3, param, param$1);\n          });\n    case 7 : \n        return (function (param, param$1, param$2) {\n            return o(a0, a1, a2, a3, param, param$1, param$2);\n          });\n    default:\n      return app(o, /* array */[\n                  a0,\n                  a1,\n                  a2,\n                  a3\n                ]);\n  }\n}\n\nfunction _4(o, a0, a1, a2, a3) {\n  var arity = o.length;\n  if (arity === 4) {\n    return o(a0, a1, a2, a3);\n  } else {\n    return curry_4(o, a0, a1, a2, a3, arity);\n  }\n}\n\nfunction __4(o) {\n  var arity = o.length;\n  if (arity === 4) {\n    return o;\n  } else {\n    return (function (a0, a1, a2, a3) {\n        return _4(o, a0, a1, a2, a3);\n      });\n  }\n}\n\nfunction curry_5(o, a0, a1, a2, a3, a4, arity) {\n  switch (arity) {\n    case 1 : \n        return app(o(a0), /* array */[\n                    a1,\n                    a2,\n                    a3,\n                    a4\n                  ]);\n    case 2 : \n        return app(o(a0, a1), /* array */[\n                    a2,\n                    a3,\n                    a4\n                  ]);\n    case 3 : \n        return app(o(a0, a1, a2), /* array */[\n                    a3,\n                    a4\n                  ]);\n    case 4 : \n        return app(o(a0, a1, a2, a3), /* array */[a4]);\n    case 5 : \n        return o(a0, a1, a2, a3, a4);\n    case 6 : \n        return (function (param) {\n            return o(a0, a1, a2, a3, a4, param);\n          });\n    case 7 : \n        return (function (param, param$1) {\n            return o(a0, a1, a2, a3, a4, param, param$1);\n          });\n    default:\n      return app(o, /* array */[\n                  a0,\n                  a1,\n                  a2,\n                  a3,\n                  a4\n                ]);\n  }\n}\n\nfunction _5(o, a0, a1, a2, a3, a4) {\n  var arity = o.length;\n  if (arity === 5) {\n    return o(a0, a1, a2, a3, a4);\n  } else {\n    return curry_5(o, a0, a1, a2, a3, a4, arity);\n  }\n}\n\nfunction __5(o) {\n  var arity = o.length;\n  if (arity === 5) {\n    return o;\n  } else {\n    return (function (a0, a1, a2, a3, a4) {\n        return _5(o, a0, a1, a2, a3, a4);\n      });\n  }\n}\n\nfunction curry_6(o, a0, a1, a2, a3, a4, a5, arity) {\n  switch (arity) {\n    case 1 : \n        return app(o(a0), /* array */[\n                    a1,\n                    a2,\n                    a3,\n                    a4,\n                    a5\n                  ]);\n    case 2 : \n        return app(o(a0, a1), /* array */[\n                    a2,\n                    a3,\n                    a4,\n                    a5\n                  ]);\n    case 3 : \n        return app(o(a0, a1, a2), /* array */[\n                    a3,\n                    a4,\n                    a5\n                  ]);\n    case 4 : \n        return app(o(a0, a1, a2, a3), /* array */[\n                    a4,\n                    a5\n                  ]);\n    case 5 : \n        return app(o(a0, a1, a2, a3, a4), /* array */[a5]);\n    case 6 : \n        return o(a0, a1, a2, a3, a4, a5);\n    case 7 : \n        return (function (param) {\n            return o(a0, a1, a2, a3, a4, a5, param);\n          });\n    default:\n      return app(o, /* array */[\n                  a0,\n                  a1,\n                  a2,\n                  a3,\n                  a4,\n                  a5\n                ]);\n  }\n}\n\nfunction _6(o, a0, a1, a2, a3, a4, a5) {\n  var arity = o.length;\n  if (arity === 6) {\n    return o(a0, a1, a2, a3, a4, a5);\n  } else {\n    return curry_6(o, a0, a1, a2, a3, a4, a5, arity);\n  }\n}\n\nfunction __6(o) {\n  var arity = o.length;\n  if (arity === 6) {\n    return o;\n  } else {\n    return (function (a0, a1, a2, a3, a4, a5) {\n        return _6(o, a0, a1, a2, a3, a4, a5);\n      });\n  }\n}\n\nfunction curry_7(o, a0, a1, a2, a3, a4, a5, a6, arity) {\n  switch (arity) {\n    case 1 : \n        return app(o(a0), /* array */[\n                    a1,\n                    a2,\n                    a3,\n                    a4,\n                    a5,\n                    a6\n                  ]);\n    case 2 : \n        return app(o(a0, a1), /* array */[\n                    a2,\n                    a3,\n                    a4,\n                    a5,\n                    a6\n                  ]);\n    case 3 : \n        return app(o(a0, a1, a2), /* array */[\n                    a3,\n                    a4,\n                    a5,\n                    a6\n                  ]);\n    case 4 : \n        return app(o(a0, a1, a2, a3), /* array */[\n                    a4,\n                    a5,\n                    a6\n                  ]);\n    case 5 : \n        return app(o(a0, a1, a2, a3, a4), /* array */[\n                    a5,\n                    a6\n                  ]);\n    case 6 : \n        return app(o(a0, a1, a2, a3, a4, a5), /* array */[a6]);\n    case 7 : \n        return o(a0, a1, a2, a3, a4, a5, a6);\n    default:\n      return app(o, /* array */[\n                  a0,\n                  a1,\n                  a2,\n                  a3,\n                  a4,\n                  a5,\n                  a6\n                ]);\n  }\n}\n\nfunction _7(o, a0, a1, a2, a3, a4, a5, a6) {\n  var arity = o.length;\n  if (arity === 7) {\n    return o(a0, a1, a2, a3, a4, a5, a6);\n  } else {\n    return curry_7(o, a0, a1, a2, a3, a4, a5, a6, arity);\n  }\n}\n\nfunction __7(o) {\n  var arity = o.length;\n  if (arity === 7) {\n    return o;\n  } else {\n    return (function (a0, a1, a2, a3, a4, a5, a6) {\n        return _7(o, a0, a1, a2, a3, a4, a5, a6);\n      });\n  }\n}\n\nfunction curry_8(o, a0, a1, a2, a3, a4, a5, a6, a7, arity) {\n  switch (arity) {\n    case 1 : \n        return app(o(a0), /* array */[\n                    a1,\n                    a2,\n                    a3,\n                    a4,\n                    a5,\n                    a6,\n                    a7\n                  ]);\n    case 2 : \n        return app(o(a0, a1), /* array */[\n                    a2,\n                    a3,\n                    a4,\n                    a5,\n                    a6,\n                    a7\n                  ]);\n    case 3 : \n        return app(o(a0, a1, a2), /* array */[\n                    a3,\n                    a4,\n                    a5,\n                    a6,\n                    a7\n                  ]);\n    case 4 : \n        return app(o(a0, a1, a2, a3), /* array */[\n                    a4,\n                    a5,\n                    a6,\n                    a7\n                  ]);\n    case 5 : \n        return app(o(a0, a1, a2, a3, a4), /* array */[\n                    a5,\n                    a6,\n                    a7\n                  ]);\n    case 6 : \n        return app(o(a0, a1, a2, a3, a4, a5), /* array */[\n                    a6,\n                    a7\n                  ]);\n    case 7 : \n        return app(o(a0, a1, a2, a3, a4, a5, a6), /* array */[a7]);\n    default:\n      return app(o, /* array */[\n                  a0,\n                  a1,\n                  a2,\n                  a3,\n                  a4,\n                  a5,\n                  a6,\n                  a7\n                ]);\n  }\n}\n\nfunction _8(o, a0, a1, a2, a3, a4, a5, a6, a7) {\n  var arity = o.length;\n  if (arity === 8) {\n    return o(a0, a1, a2, a3, a4, a5, a6, a7);\n  } else {\n    return curry_8(o, a0, a1, a2, a3, a4, a5, a6, a7, arity);\n  }\n}\n\nfunction __8(o) {\n  var arity = o.length;\n  if (arity === 8) {\n    return o;\n  } else {\n    return (function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return _8(o, a0, a1, a2, a3, a4, a5, a6, a7);\n      });\n  }\n}\n\nexport {\n  app ,\n  curry_1 ,\n  _1 ,\n  __1 ,\n  curry_2 ,\n  _2 ,\n  __2 ,\n  curry_3 ,\n  _3 ,\n  __3 ,\n  curry_4 ,\n  _4 ,\n  __4 ,\n  curry_5 ,\n  _5 ,\n  __5 ,\n  curry_6 ,\n  _6 ,\n  __6 ,\n  curry_7 ,\n  _7 ,\n  __7 ,\n  curry_8 ,\n  _8 ,\n  __8 ,\n  \n}\n/* No side effect */\n","\n\n\nvar undefinedHeader = /* array */[];\n\nfunction some(x) {\n  if (x === undefined) {\n    var block = /* tuple */[\n      undefinedHeader,\n      0\n    ];\n    block.tag = 256;\n    return block;\n  } else if (x !== null && x[0] === undefinedHeader) {\n    var nid = x[1] + 1 | 0;\n    var block$1 = /* tuple */[\n      undefinedHeader,\n      nid\n    ];\n    block$1.tag = 256;\n    return block$1;\n  } else {\n    return x;\n  }\n}\n\nfunction nullable_to_opt(x) {\n  if (x === null || x === undefined) {\n    return undefined;\n  } else {\n    return some(x);\n  }\n}\n\nfunction undefined_to_opt(x) {\n  if (x === undefined) {\n    return undefined;\n  } else {\n    return some(x);\n  }\n}\n\nfunction null_to_opt(x) {\n  if (x === null) {\n    return undefined;\n  } else {\n    return some(x);\n  }\n}\n\nfunction valFromOption(x) {\n  if (x !== null && x[0] === undefinedHeader) {\n    var depth = x[1];\n    if (depth === 0) {\n      return undefined;\n    } else {\n      return /* tuple */[\n              undefinedHeader,\n              depth - 1 | 0\n            ];\n    }\n  } else {\n    return x;\n  }\n}\n\nfunction option_get(x) {\n  if (x === undefined) {\n    return undefined;\n  } else {\n    return valFromOption(x);\n  }\n}\n\nfunction option_get_unwrap(x) {\n  if (x === undefined) {\n    return undefined;\n  } else {\n    return valFromOption(x)[1];\n  }\n}\n\nexport {\n  nullable_to_opt ,\n  undefined_to_opt ,\n  null_to_opt ,\n  valFromOption ,\n  some ,\n  option_get ,\n  option_get_unwrap ,\n  \n}\n/* No side effect */\n","\n\nimport * as Block from \"bs-platform/lib/es6/block.js\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as Caml_option from \"bs-platform/lib/es6/caml_option.js\";\n\nfunction talkbackPlaceholder(param) {\n  return /* () */0;\n}\n\nfunction captureTalkback(source, sinkWithTalkback) {\n  var talkback = /* record */[/* contents */talkbackPlaceholder];\n  return Curry._1(source, (function (signal) {\n                if (typeof signal !== \"number\") {\n                  if (!signal.tag) {\n                    talkback[0] = signal[0];\n                  }\n                  \n                }\n                return sinkWithTalkback(signal, talkback[0]);\n              }));\n}\n\nfunction makeTrampoline(sink, f) {\n  var state = /* record */[\n    /* ended */false,\n    /* looping */false,\n    /* pull */false\n  ];\n  return sink(/* Start */Block.__(0, [(function (signal) {\n                    var match = state[/* looping */1];\n                    if (signal) {\n                      state[/* ended */0] = true;\n                      return /* () */0;\n                    } else if (match) {\n                      state[/* pull */2] = true;\n                      return /* () */0;\n                    } else {\n                      state[/* pull */2] = true;\n                      state[/* looping */1] = true;\n                      while(state[/* pull */2] && !state[/* ended */0]) {\n                        var match$1 = f();\n                        if (match$1 !== undefined) {\n                          state[/* pull */2] = false;\n                          sink(/* Push */Block.__(1, [Caml_option.valFromOption(match$1)]));\n                        } else {\n                          state[/* ended */0] = true;\n                          sink(/* End */0);\n                        }\n                      };\n                      state[/* looping */1] = false;\n                      return /* () */0;\n                    }\n                  })]));\n}\n\nexport {\n  talkbackPlaceholder ,\n  captureTalkback ,\n  makeTrampoline ,\n  \n}\n/* No side effect */\n","\n\nimport * as Block from \"bs-platform/lib/es6/block.js\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as Wonka_helpers from \"../wonka_helpers.js\";\n\nvar observableSymbol = (\n  typeof Symbol === 'function'\n    ? Symbol.observable || (Symbol.observable = Symbol('observable'))\n    : '@@observable'\n);\n\nfunction fromObservable(input) {\n  var match = input[observableSymbol];\n  var observable = match !== undefined ? input[observableSymbol]() : input;\n  return (function (sink) {\n      var observer = {\n        next: (function (value) {\n            return sink(/* Push */Block.__(1, [value]));\n          }),\n        complete: (function () {\n            return sink(/* End */0);\n          }),\n        error: (function (param) {\n            return /* () */0;\n          })\n      };\n      var subscription = observable.subscribe(observer);\n      return sink(/* Start */Block.__(0, [(function (signal) {\n                        if (signal) {\n                          return subscription.unsubscribe();\n                        } else {\n                          return /* () */0;\n                        }\n                      })]));\n    });\n}\n\nfunction toObservable(source) {\n  var observable = {\n    subscribe: (function (observer) {\n        var state = /* record */[\n          /* talkback */Wonka_helpers.talkbackPlaceholder,\n          /* ended */false\n        ];\n        Curry._1(source, (function (signal) {\n                if (typeof signal === \"number\") {\n                  state[/* ended */1] = true;\n                  return observer.complete();\n                } else if (signal.tag) {\n                  if (state[/* ended */1]) {\n                    return /* () */0;\n                  } else {\n                    observer.next(signal[0]);\n                    return state[/* talkback */0](/* Pull */0);\n                  }\n                } else {\n                  var x = signal[0];\n                  state[/* talkback */0] = x;\n                  return x(/* Pull */0);\n                }\n              }));\n        return {\n                unsubscribe: (function () {\n                    if (state[/* ended */1]) {\n                      return 0;\n                    } else {\n                      state[/* ended */1] = true;\n                      return state[/* talkback */0](/* Close */1);\n                    }\n                  })\n              };\n      })\n  };\n  observable[observableSymbol] = (function (param) {\n      return observable;\n    });\n  return observable;\n}\n\nexport {\n  fromObservable ,\n  toObservable ,\n  \n}\n/* observableSymbol Not a pure module */\n","\n\nimport * as Wonka_helpers from \"../wonka_helpers.js\";\n\nfunction takeLast(max) {\n  return (function (source) {\n      return (function (sink) {\n          var queue = new Array();\n          return Wonka_helpers.captureTalkback(source, (function (signal, talkback) {\n                        if (typeof signal === \"number\") {\n                          return Wonka_helpers.makeTrampoline(sink, (function () {\n                                        return queue.shift();\n                                      }));\n                        } else if (signal.tag) {\n                          var size = queue.length;\n                          if (size >= max && max > 0) {\n                            queue.shift();\n                          }\n                          queue.push(signal[0]);\n                          return talkback(/* Pull */0);\n                        } else {\n                          return talkback(/* Pull */0);\n                        }\n                      }));\n        });\n    });\n}\n\nexport {\n  takeLast ,\n  \n}\n/* No side effect */\n","\n\nimport * as Block from \"bs-platform/lib/es6/block.js\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\n\nfunction fromListener(addListener, removeListener) {\n  return (function (sink) {\n      var handler = function ($$event) {\n        return sink(/* Push */Block.__(1, [$$event]));\n      };\n      sink(/* Start */Block.__(0, [(function (signal) {\n                  if (signal) {\n                    return Curry._1(removeListener, handler);\n                  } else {\n                    return /* () */0;\n                  }\n                })]));\n      return Curry._1(addListener, handler);\n    });\n}\n\nexport {\n  fromListener ,\n  \n}\n/* No side effect */\n","\n\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as Wonka_source_fromListener from \"./wonka_source_fromListener.js\";\n\nfunction fromDomEvent(element, $$event) {\n  return (function (sink) {\n      var addEventListener = (\n    function (element, event, handler) {\n      element.addEventListener(event, handler);\n    }\n  );\n      var removeEventListener = (\n    function (element, event, handler) {\n      element.removeEventListener(event, handler);\n    }\n  );\n      return Wonka_source_fromListener.fromListener((function (handler) {\n                      return Curry._3(addEventListener, element, $$event, handler);\n                    }), (function (handler) {\n                      return Curry._3(removeEventListener, element, $$event, handler);\n                    }))(sink);\n    });\n}\n\nexport {\n  fromDomEvent ,\n  \n}\n/* No side effect */\n","\n\nimport * as Wonka_callbag from \"./wonka_callbag.js\";\nimport * as Wonka_observable from \"./wonka_observable.js\";\nimport * as Wonka_operator_delay from \"./wonka_operator_delay.js\";\nimport * as Wonka_sink_toPromise from \"./wonka_sink_toPromise.js\";\nimport * as Wonka_source_interval from \"./wonka_source_interval.js\";\nimport * as Wonka_operator_debounce from \"./wonka_operator_debounce.js\";\nimport * as Wonka_operator_throttle from \"./wonka_operator_throttle.js\";\nimport * as Wonka_source_fromPromise from \"./wonka_source_fromPromise.js\";\nimport * as Wonka_source_fromDomEvent from \"./wonka_source_fromDomEvent.js\";\nimport * as Wonka_source_fromListener from \"./wonka_source_fromListener.js\";\n\nvar debounce = Wonka_operator_debounce.debounce;\n\nvar delay = Wonka_operator_delay.delay;\n\nvar throttle = Wonka_operator_throttle.throttle;\n\nvar toPromise = Wonka_sink_toPromise.toPromise;\n\nvar interval = Wonka_source_interval.interval;\n\nvar fromDomEvent = Wonka_source_fromDomEvent.fromDomEvent;\n\nvar fromListener = Wonka_source_fromListener.fromListener;\n\nvar fromPromise = Wonka_source_fromPromise.fromPromise;\n\nvar fromObservable = Wonka_observable.fromObservable;\n\nvar toObservable = Wonka_observable.toObservable;\n\nvar fromCallbag = Wonka_callbag.fromCallbag;\n\nvar toCallbag = Wonka_callbag.toCallbag;\n\nexport {\n  debounce ,\n  delay ,\n  throttle ,\n  toPromise ,\n  interval ,\n  fromDomEvent ,\n  fromListener ,\n  fromPromise ,\n  fromObservable ,\n  toObservable ,\n  fromCallbag ,\n  toCallbag ,\n  \n}\n/* Wonka_observable Not a pure module */\n","\n\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as Wonka_operator_takeLast from \"../operators/wonka_operator_takeLast.js\";\n\nfunction toPromise(source) {\n  return new Promise((function (resolve, param) {\n                return Curry._1(Wonka_operator_takeLast.takeLast(1)(source), (function (signal) {\n                              if (typeof signal === \"number\") {\n                                return /* () */0;\n                              } else if (signal.tag) {\n                                return resolve(signal[0]);\n                              } else {\n                                return signal[0](/* Pull */0);\n                              }\n                            }));\n              }));\n}\n\nexport {\n  toPromise ,\n  \n}\n/* No side effect */\n","\n\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as Wonka_helpers from \"../wonka_helpers.js\";\n\nfunction subscribe(f) {\n  return (function (source) {\n      var state = /* record */[\n        /* talkback */Wonka_helpers.talkbackPlaceholder,\n        /* ended */false\n      ];\n      Curry._1(source, (function (signal) {\n              if (typeof signal === \"number\") {\n                state[/* ended */1] = true;\n                return /* () */0;\n              } else if (signal.tag) {\n                if (state[/* ended */1]) {\n                  return /* () */0;\n                } else {\n                  f(signal[0]);\n                  return state[/* talkback */0](/* Pull */0);\n                }\n              } else {\n                var x = signal[0];\n                state[/* talkback */0] = x;\n                return x(/* Pull */0);\n              }\n            }));\n      return /* record */[/* unsubscribe */(function (param) {\n                  if (state[/* ended */1]) {\n                    return 0;\n                  } else {\n                    state[/* ended */1] = true;\n                    return state[/* talkback */0](/* Close */1);\n                  }\n                })];\n    });\n}\n\nfunction forEach(f) {\n  return (function (source) {\n      subscribe(f)(source);\n      return /* () */0;\n    });\n}\n\nexport {\n  subscribe ,\n  forEach ,\n  \n}\n/* No side effect */\n","\n\nimport * as Caml_option from \"bs-platform/lib/es6/caml_option.js\";\nimport * as Wonka_helpers from \"../wonka_helpers.js\";\n\nfunction fromArray(arr) {\n  return (function (sink) {\n      var size = arr.length;\n      var index = /* record */[/* contents */0];\n      return Wonka_helpers.makeTrampoline(sink, (function () {\n                    if (index[0] < size) {\n                      var x = arr[index[0]];\n                      index[0] = index[0] + 1 | 0;\n                      return Caml_option.some(x);\n                    }\n                    \n                  }));\n    });\n}\n\nexport {\n  fromArray ,\n  \n}\n/* No side effect */\n","\n\nimport * as Block from \"bs-platform/lib/es6/block.js\";\n\nfunction makeSubject(param) {\n  var state = /* record */[\n    /* sinks */new Array(),\n    /* ended */false\n  ];\n  var source = function (sink) {\n    state[/* sinks */0] = state[/* sinks */0].concat(sink);\n    return sink(/* Start */Block.__(0, [(function (signal) {\n                      if (signal === /* Close */1) {\n                        state[/* sinks */0] = state[/* sinks */0].filter((function (x) {\n                                return x !== sink;\n                              }));\n                        return /* () */0;\n                      } else {\n                        return 0;\n                      }\n                    })]));\n  };\n  var next = function (value) {\n    if (state[/* ended */1]) {\n      return 0;\n    } else {\n      state[/* sinks */0].forEach((function (sink) {\n              return sink(/* Push */Block.__(1, [value]));\n            }));\n      return /* () */0;\n    }\n  };\n  var complete = function (param) {\n    if (state[/* ended */1]) {\n      return 0;\n    } else {\n      state[/* ended */1] = true;\n      state[/* sinks */0].forEach((function (sink) {\n              return sink(/* End */0);\n            }));\n      return /* () */0;\n    }\n  };\n  return /* record */[\n          /* source */source,\n          /* next */next,\n          /* complete */complete\n        ];\n}\n\nexport {\n  makeSubject ,\n  \n}\n/* No side effect */\n","\n\nimport * as Block from \"bs-platform/lib/es6/block.js\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as Wonka_helpers from \"../wonka_helpers.js\";\n\nfunction share(source) {\n  var state = /* record */[\n    /* sinks */new Array(),\n    /* talkback */Wonka_helpers.talkbackPlaceholder,\n    /* gotSignal */false\n  ];\n  return (function (sink) {\n      state[/* sinks */0] = state[/* sinks */0].concat(sink);\n      if (state[/* sinks */0].length === 1) {\n        Curry._1(source, (function (signal) {\n                if (typeof signal === \"number\") {\n                  state[/* sinks */0].forEach((function (sink) {\n                          return sink(/* End */0);\n                        }));\n                  state[/* sinks */0] = new Array();\n                  return /* () */0;\n                } else if (signal.tag) {\n                  state[/* gotSignal */2] = false;\n                  state[/* sinks */0].forEach((function (sink) {\n                          return sink(signal);\n                        }));\n                  return /* () */0;\n                } else {\n                  state[/* talkback */1] = signal[0];\n                  return /* () */0;\n                }\n              }));\n      }\n      return sink(/* Start */Block.__(0, [(function (signal) {\n                        if (signal) {\n                          state[/* sinks */0] = state[/* sinks */0].filter((function (x) {\n                                  return x !== sink;\n                                }));\n                          if (state[/* sinks */0].length === 0) {\n                            return state[/* talkback */1](/* Close */1);\n                          } else {\n                            return 0;\n                          }\n                        } else if (state[/* gotSignal */2]) {\n                          return /* () */0;\n                        } else {\n                          state[/* gotSignal */2] = true;\n                          return state[/* talkback */1](signal);\n                        }\n                      })]));\n    });\n}\n\nexport {\n  share ,\n  \n}\n/* No side effect */\n","\n\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\n\nfunction onPush(f) {\n  return (function (source) {\n      return (function (sink) {\n          return Curry._1(source, (function (signal) {\n                        if (typeof signal !== \"number\") {\n                          if (signal.tag) {\n                            f(signal[0]);\n                          }\n                          \n                        }\n                        return sink(signal);\n                      }));\n        });\n    });\n}\n\nvar tap = onPush;\n\nexport {\n  onPush ,\n  tap ,\n  \n}\n/* No side effect */\n","\n\nimport * as Block from \"bs-platform/lib/es6/block.js\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as Caml_option from \"bs-platform/lib/es6/caml_option.js\";\n\nfunction sample(notifier) {\n  return (function (source) {\n      return (function (sink) {\n          var state = /* record */[\n            /* ended */false,\n            /* value */undefined,\n            /* sourceTalkback */(function (param) {\n                return /* () */0;\n              }),\n            /* notifierTalkback */(function (param) {\n                return /* () */0;\n              })\n          ];\n          Curry._1(source, (function (signal) {\n                  if (typeof signal === \"number\") {\n                    state[/* ended */0] = true;\n                    state[/* notifierTalkback */3](/* Close */1);\n                    return sink(/* End */0);\n                  } else if (signal.tag) {\n                    state[/* value */1] = Caml_option.some(signal[0]);\n                    return /* () */0;\n                  } else {\n                    state[/* sourceTalkback */2] = signal[0];\n                    return /* () */0;\n                  }\n                }));\n          Curry._1(notifier, (function (signal) {\n                  var match = state[/* value */1];\n                  if (typeof signal === \"number\") {\n                    state[/* ended */0] = true;\n                    state[/* sourceTalkback */2](/* Close */1);\n                    return sink(/* End */0);\n                  } else if (signal.tag) {\n                    if (match !== undefined && !state[/* ended */0]) {\n                      state[/* value */1] = undefined;\n                      return sink(/* Push */Block.__(1, [Caml_option.valFromOption(match)]));\n                    } else {\n                      return /* () */0;\n                    }\n                  } else {\n                    state[/* notifierTalkback */3] = signal[0];\n                    return /* () */0;\n                  }\n                }));\n          return sink(/* Start */Block.__(0, [(function (signal) {\n                            if (signal) {\n                              state[/* ended */0] = true;\n                              state[/* sourceTalkback */2](/* Close */1);\n                              return state[/* notifierTalkback */3](/* Close */1);\n                            } else {\n                              state[/* sourceTalkback */2](/* Pull */0);\n                              return state[/* notifierTalkback */3](/* Pull */0);\n                            }\n                          })]));\n        });\n    });\n}\n\nexport {\n  sample ,\n  \n}\n/* No side effect */\n","\n\nimport * as Block from \"bs-platform/lib/es6/block.js\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as Wonka_helpers from \"../wonka_helpers.js\";\nimport * as Wonka_source_fromArray from \"../sources/wonka_source_fromArray.js\";\n\nfunction mergeMap(f) {\n  return (function (source) {\n      return (function (sink) {\n          var state = /* record */[\n            /* outerTalkback */Wonka_helpers.talkbackPlaceholder,\n            /* innerTalkbacks */new Array(),\n            /* ended */false\n          ];\n          var applyInnerSource = function (innerSource) {\n            var talkback = /* record */[/* contents */Wonka_helpers.talkbackPlaceholder];\n            return Curry._1(innerSource, (function (signal) {\n                          if (typeof signal === \"number\") {\n                            state[/* innerTalkbacks */1] = state[/* innerTalkbacks */1].filter((function (x) {\n                                    return x !== talkback[0];\n                                  }));\n                            if (state[/* ended */2] && state[/* innerTalkbacks */1].length === 0) {\n                              return sink(/* End */0);\n                            } else {\n                              return 0;\n                            }\n                          } else if (signal.tag) {\n                            if (state[/* innerTalkbacks */1].length !== 0) {\n                              sink(/* Push */Block.__(1, [signal[0]]));\n                              return talkback[0](/* Pull */0);\n                            } else {\n                              return /* () */0;\n                            }\n                          } else {\n                            var tb = signal[0];\n                            talkback[0] = tb;\n                            state[/* innerTalkbacks */1] = state[/* innerTalkbacks */1].concat(tb);\n                            return tb(/* Pull */0);\n                          }\n                        }));\n          };\n          Curry._1(source, (function (signal) {\n                  if (typeof signal === \"number\") {\n                    if (state[/* ended */2]) {\n                      return /* () */0;\n                    } else {\n                      state[/* ended */2] = true;\n                      if (state[/* innerTalkbacks */1].length === 0) {\n                        return sink(/* End */0);\n                      } else {\n                        return 0;\n                      }\n                    }\n                  } else if (signal.tag) {\n                    if (state[/* ended */2]) {\n                      return /* () */0;\n                    } else {\n                      applyInnerSource(f(signal[0]));\n                      return state[/* outerTalkback */0](/* Pull */0);\n                    }\n                  } else {\n                    var tb = signal[0];\n                    state[/* outerTalkback */0] = tb;\n                    return tb(/* Pull */0);\n                  }\n                }));\n          return sink(/* Start */Block.__(0, [(function (signal) {\n                            if (signal) {\n                              state[/* innerTalkbacks */1].forEach((function (talkback) {\n                                      return talkback(/* Close */1);\n                                    }));\n                              if (state[/* ended */2]) {\n                                return 0;\n                              } else {\n                                state[/* ended */2] = true;\n                                state[/* outerTalkback */0](/* Close */1);\n                                state[/* innerTalkbacks */1].forEach((function (talkback) {\n                                        return talkback(/* Close */1);\n                                      }));\n                                state[/* innerTalkbacks */1] = new Array();\n                                return /* () */0;\n                              }\n                            } else if (state[/* ended */2]) {\n                              return /* () */0;\n                            } else {\n                              state[/* innerTalkbacks */1].forEach((function (talkback) {\n                                      return talkback(/* Pull */0);\n                                    }));\n                              return /* () */0;\n                            }\n                          })]));\n        });\n    });\n}\n\nfunction merge(sources) {\n  return mergeMap((function (x) {\n                  return x;\n                }))(Wonka_source_fromArray.fromArray(sources));\n}\n\nfunction mergeAll(source) {\n  return mergeMap((function (x) {\n                  return x;\n                }))(source);\n}\n\nvar flatten = mergeAll;\n\nexport {\n  mergeMap ,\n  merge ,\n  mergeAll ,\n  flatten ,\n  \n}\n/* No side effect */\n","\n\nimport * as Block from \"bs-platform/lib/es6/block.js\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as Caml_option from \"bs-platform/lib/es6/caml_option.js\";\nimport * as Wonka_helpers from \"../wonka_helpers.js\";\nimport * as MutableQueue_js from \"../../include/rebel_js/MutableQueue_js.js\";\nimport * as Wonka_source_fromArray from \"../sources/wonka_source_fromArray.js\";\n\nfunction concatMap(f) {\n  return (function (source) {\n      return (function (sink) {\n          var state = /* record */[\n            /* inputQueue */new Array(),\n            /* outerTalkback */Wonka_helpers.talkbackPlaceholder,\n            /* innerTalkback */Wonka_helpers.talkbackPlaceholder,\n            /* innerActive */false,\n            /* closed */false,\n            /* ended */false\n          ];\n          var applyInnerSource = function (innerSource) {\n            return Curry._1(innerSource, (function (signal) {\n                          if (typeof signal === \"number\") {\n                            state[/* innerActive */3] = false;\n                            state[/* innerTalkback */2] = Wonka_helpers.talkbackPlaceholder;\n                            var match = state[/* inputQueue */0].shift();\n                            if (match !== undefined) {\n                              return applyInnerSource(f(Caml_option.valFromOption(match)));\n                            } else if (state[/* ended */5]) {\n                              return sink(/* End */0);\n                            } else {\n                              return /* () */0;\n                            }\n                          } else if (signal.tag) {\n                            if (state[/* closed */4]) {\n                              return /* () */0;\n                            } else {\n                              sink(/* Push */Block.__(1, [signal[0]]));\n                              return state[/* innerTalkback */2](/* Pull */0);\n                            }\n                          } else {\n                            var tb = signal[0];\n                            state[/* innerActive */3] = true;\n                            state[/* innerTalkback */2] = tb;\n                            return tb(/* Pull */0);\n                          }\n                        }));\n          };\n          Curry._1(source, (function (signal) {\n                  if (typeof signal === \"number\") {\n                    if (state[/* ended */5]) {\n                      return /* () */0;\n                    } else {\n                      state[/* ended */5] = true;\n                      if (!state[/* innerActive */3] && MutableQueue_js.isEmpty(state[/* inputQueue */0])) {\n                        return sink(/* End */0);\n                      } else {\n                        return 0;\n                      }\n                    }\n                  } else if (signal.tag) {\n                    if (state[/* ended */5]) {\n                      return /* () */0;\n                    } else {\n                      var x = signal[0];\n                      if (state[/* innerActive */3]) {\n                        state[/* inputQueue */0].push(x);\n                      } else {\n                        applyInnerSource(f(x));\n                      }\n                      return state[/* outerTalkback */1](/* Pull */0);\n                    }\n                  } else {\n                    var tb = signal[0];\n                    state[/* outerTalkback */1] = tb;\n                    return tb(/* Pull */0);\n                  }\n                }));\n          return sink(/* Start */Block.__(0, [(function (signal) {\n                            if (signal) {\n                              state[/* innerTalkback */2](/* Close */1);\n                              if (state[/* ended */5]) {\n                                return 0;\n                              } else {\n                                state[/* ended */5] = true;\n                                state[/* closed */4] = true;\n                                state[/* outerTalkback */1](/* Close */1);\n                                state[/* innerTalkback */2] = Wonka_helpers.talkbackPlaceholder;\n                                return /* () */0;\n                              }\n                            } else if (state[/* ended */5]) {\n                              return 0;\n                            } else {\n                              return state[/* innerTalkback */2](/* Pull */0);\n                            }\n                          })]));\n        });\n    });\n}\n\nfunction concatAll(source) {\n  return concatMap((function (x) {\n                  return x;\n                }))(source);\n}\n\nfunction concat(sources) {\n  return concatMap((function (x) {\n                  return x;\n                }))(Wonka_source_fromArray.fromArray(sources));\n}\n\nexport {\n  concatMap ,\n  concat ,\n  concatAll ,\n  \n}\n/* No side effect */\n","\n\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\n\nfunction isEmpty(q) {\n  return q.length === 0;\n}\n\nfunction reduceU(q, accu, f) {\n  return q.reduce((function (acc, x) {\n                return f(acc, x);\n              }), accu);\n}\n\nfunction reduce(q, accu, f) {\n  return q.reduce(Curry.__2(f), accu);\n}\n\nfunction transfer(q1, q2) {\n  Array.prototype.push.apply(q1, q2);\n  q1.length = 0;\n  return /* () */0;\n}\n\nexport {\n  isEmpty ,\n  reduceU ,\n  reduce ,\n  transfer ,\n  \n}\n/* No side effect */\n","\n\nimport * as Block from \"bs-platform/lib/es6/block.js\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as Wonka_helpers from \"../wonka_helpers.js\";\n\nfunction switchMap(f) {\n  return (function (source) {\n      return (function (sink) {\n          var state = /* record */[\n            /* outerTalkback */Wonka_helpers.talkbackPlaceholder,\n            /* innerTalkback */Wonka_helpers.talkbackPlaceholder,\n            /* innerActive */false,\n            /* closed */false,\n            /* ended */false\n          ];\n          var applyInnerSource = function (innerSource) {\n            return Curry._1(innerSource, (function (signal) {\n                          if (typeof signal === \"number\") {\n                            state[/* innerActive */2] = false;\n                            state[/* innerTalkback */1] = Wonka_helpers.talkbackPlaceholder;\n                            if (state[/* ended */4]) {\n                              return sink(/* End */0);\n                            } else {\n                              return 0;\n                            }\n                          } else if (signal.tag) {\n                            if (state[/* closed */3]) {\n                              return /* () */0;\n                            } else {\n                              sink(/* Push */Block.__(1, [signal[0]]));\n                              return state[/* innerTalkback */1](/* Pull */0);\n                            }\n                          } else {\n                            var tb = signal[0];\n                            state[/* innerActive */2] = true;\n                            state[/* innerTalkback */1] = tb;\n                            return tb(/* Pull */0);\n                          }\n                        }));\n          };\n          Curry._1(source, (function (signal) {\n                  if (typeof signal === \"number\") {\n                    if (state[/* ended */4]) {\n                      return /* () */0;\n                    } else {\n                      state[/* ended */4] = true;\n                      if (state[/* innerActive */2]) {\n                        return 0;\n                      } else {\n                        return sink(/* End */0);\n                      }\n                    }\n                  } else if (signal.tag) {\n                    if (state[/* ended */4]) {\n                      return /* () */0;\n                    } else {\n                      if (state[/* innerActive */2]) {\n                        state[/* innerTalkback */1](/* Close */1);\n                        state[/* innerTalkback */1] = Wonka_helpers.talkbackPlaceholder;\n                      }\n                      applyInnerSource(f(signal[0]));\n                      return state[/* outerTalkback */0](/* Pull */0);\n                    }\n                  } else {\n                    var tb = signal[0];\n                    state[/* outerTalkback */0] = tb;\n                    return tb(/* Pull */0);\n                  }\n                }));\n          return sink(/* Start */Block.__(0, [(function (signal) {\n                            if (signal) {\n                              state[/* innerTalkback */1](/* Close */1);\n                              if (state[/* ended */4]) {\n                                return 0;\n                              } else {\n                                state[/* ended */4] = true;\n                                state[/* closed */3] = true;\n                                state[/* outerTalkback */0](/* Close */1);\n                                state[/* innerTalkback */1] = Wonka_helpers.talkbackPlaceholder;\n                                return /* () */0;\n                              }\n                            } else {\n                              return state[/* innerTalkback */1](/* Pull */0);\n                            }\n                          })]));\n        });\n    });\n}\n\nfunction switchAll(source) {\n  return switchMap((function (x) {\n                  return x;\n                }))(source);\n}\n\nexport {\n  switchMap ,\n  switchAll ,\n  \n}\n/* No side effect */\n","\n\nimport * as Wonka_operator_map from \"./operators/wonka_operator_map.js\";\nimport * as Wonka_operator_scan from \"./operators/wonka_operator_scan.js\";\nimport * as Wonka_operator_skip from \"./operators/wonka_operator_skip.js\";\nimport * as Wonka_operator_take from \"./operators/wonka_operator_take.js\";\nimport * as Wonka_operator_onEnd from \"./operators/wonka_operator_onEnd.js\";\nimport * as Wonka_operator_share from \"./operators/wonka_operator_share.js\";\nimport * as Wonka_operator_buffer from \"./operators/wonka_operator_buffer.js\";\nimport * as Wonka_operator_filter from \"./operators/wonka_operator_filter.js\";\nimport * as Wonka_operator_onPush from \"./operators/wonka_operator_onPush.js\";\nimport * as Wonka_operator_sample from \"./operators/wonka_operator_sample.js\";\nimport * as Wonka_operator_combine from \"./operators/wonka_operator_combine.js\";\nimport * as Wonka_operator_onStart from \"./operators/wonka_operator_onStart.js\";\nimport * as Wonka_operator_mergeMap from \"./operators/wonka_operator_mergeMap.js\";\nimport * as Wonka_operator_takeLast from \"./operators/wonka_operator_takeLast.js\";\nimport * as Wonka_operator_concatMap from \"./operators/wonka_operator_concatMap.js\";\nimport * as Wonka_operator_skipUntil from \"./operators/wonka_operator_skipUntil.js\";\nimport * as Wonka_operator_skipWhile from \"./operators/wonka_operator_skipWhile.js\";\nimport * as Wonka_operator_switchMap from \"./operators/wonka_operator_switchMap.js\";\nimport * as Wonka_operator_takeUntil from \"./operators/wonka_operator_takeUntil.js\";\nimport * as Wonka_operator_takeWhile from \"./operators/wonka_operator_takeWhile.js\";\n\nvar buffer = Wonka_operator_buffer.buffer;\n\nvar combine = Wonka_operator_combine.combine;\n\nvar concatMap = Wonka_operator_concatMap.concatMap;\n\nvar concat = Wonka_operator_concatMap.concat;\n\nvar concatAll = Wonka_operator_concatMap.concatAll;\n\nvar filter = Wonka_operator_filter.filter;\n\nvar map = Wonka_operator_map.map;\n\nvar mergeMap = Wonka_operator_mergeMap.mergeMap;\n\nvar merge = Wonka_operator_mergeMap.merge;\n\nvar mergeAll = Wonka_operator_mergeMap.mergeAll;\n\nvar flatten = Wonka_operator_mergeMap.flatten;\n\nvar onEnd = Wonka_operator_onEnd.onEnd;\n\nvar onPush = Wonka_operator_onPush.onPush;\n\nvar tap = Wonka_operator_onPush.tap;\n\nvar onStart = Wonka_operator_onStart.onStart;\n\nvar sample = Wonka_operator_sample.sample;\n\nvar scan = Wonka_operator_scan.scan;\n\nvar share = Wonka_operator_share.share;\n\nvar skip = Wonka_operator_skip.skip;\n\nvar skipUntil = Wonka_operator_skipUntil.skipUntil;\n\nvar skipWhile = Wonka_operator_skipWhile.skipWhile;\n\nvar switchMap = Wonka_operator_switchMap.switchMap;\n\nvar switchAll = Wonka_operator_switchMap.switchAll;\n\nvar take = Wonka_operator_take.take;\n\nvar takeLast = Wonka_operator_takeLast.takeLast;\n\nvar takeUntil = Wonka_operator_takeUntil.takeUntil;\n\nvar takeWhile = Wonka_operator_takeWhile.takeWhile;\n\nexport {\n  buffer ,\n  combine ,\n  concatMap ,\n  concat ,\n  concatAll ,\n  filter ,\n  map ,\n  mergeMap ,\n  merge ,\n  mergeAll ,\n  flatten ,\n  onEnd ,\n  onPush ,\n  tap ,\n  onStart ,\n  sample ,\n  scan ,\n  share ,\n  skip ,\n  skipUntil ,\n  skipWhile ,\n  switchMap ,\n  switchAll ,\n  take ,\n  takeLast ,\n  takeUntil ,\n  takeWhile ,\n  \n}\n/* No side effect */\n","\n\nimport * as WonkaJs from \"./web/wonkaJs.js\";\nimport * as Wonka_sinks from \"./wonka_sinks.js\";\nimport * as Wonka_sources from \"./wonka_sources.js\";\nimport * as Wonka_operators from \"./wonka_operators.js\";\n\nvar Types = 0;\n\nvar fromArray = Wonka_sources.fromArray;\n\nvar fromList = Wonka_sources.fromList;\n\nvar fromValue = Wonka_sources.fromValue;\n\nvar make = Wonka_sources.make;\n\nvar makeSubject = Wonka_sources.makeSubject;\n\nvar empty = Wonka_sources.empty;\n\nvar never = Wonka_sources.never;\n\nvar buffer = Wonka_operators.buffer;\n\nvar combine = Wonka_operators.combine;\n\nvar concatMap = Wonka_operators.concatMap;\n\nvar concat = Wonka_operators.concat;\n\nvar concatAll = Wonka_operators.concatAll;\n\nvar filter = Wonka_operators.filter;\n\nvar map = Wonka_operators.map;\n\nvar mergeMap = Wonka_operators.mergeMap;\n\nvar merge = Wonka_operators.merge;\n\nvar mergeAll = Wonka_operators.mergeAll;\n\nvar flatten = Wonka_operators.flatten;\n\nvar onEnd = Wonka_operators.onEnd;\n\nvar onPush = Wonka_operators.onPush;\n\nvar tap = Wonka_operators.tap;\n\nvar onStart = Wonka_operators.onStart;\n\nvar sample = Wonka_operators.sample;\n\nvar scan = Wonka_operators.scan;\n\nvar share = Wonka_operators.share;\n\nvar skip = Wonka_operators.skip;\n\nvar skipUntil = Wonka_operators.skipUntil;\n\nvar skipWhile = Wonka_operators.skipWhile;\n\nvar switchMap = Wonka_operators.switchMap;\n\nvar switchAll = Wonka_operators.switchAll;\n\nvar take = Wonka_operators.take;\n\nvar takeLast = Wonka_operators.takeLast;\n\nvar takeUntil = Wonka_operators.takeUntil;\n\nvar takeWhile = Wonka_operators.takeWhile;\n\nvar publish = Wonka_sinks.publish;\n\nvar subscribe = Wonka_sinks.subscribe;\n\nvar forEach = Wonka_sinks.forEach;\n\nvar toArray = Wonka_sinks.toArray;\n\nvar debounce = WonkaJs.debounce;\n\nvar delay = WonkaJs.delay;\n\nvar throttle = WonkaJs.throttle;\n\nvar toPromise = WonkaJs.toPromise;\n\nvar interval = WonkaJs.interval;\n\nvar fromDomEvent = WonkaJs.fromDomEvent;\n\nvar fromListener = WonkaJs.fromListener;\n\nvar fromPromise = WonkaJs.fromPromise;\n\nvar fromObservable = WonkaJs.fromObservable;\n\nvar toObservable = WonkaJs.toObservable;\n\nvar fromCallbag = WonkaJs.fromCallbag;\n\nvar toCallbag = WonkaJs.toCallbag;\n\nexport {\n  Types ,\n  fromArray ,\n  fromList ,\n  fromValue ,\n  make ,\n  makeSubject ,\n  empty ,\n  never ,\n  buffer ,\n  combine ,\n  concatMap ,\n  concat ,\n  concatAll ,\n  filter ,\n  map ,\n  mergeMap ,\n  merge ,\n  mergeAll ,\n  flatten ,\n  onEnd ,\n  onPush ,\n  tap ,\n  onStart ,\n  sample ,\n  scan ,\n  share ,\n  skip ,\n  skipUntil ,\n  skipWhile ,\n  switchMap ,\n  switchAll ,\n  take ,\n  takeLast ,\n  takeUntil ,\n  takeWhile ,\n  publish ,\n  subscribe ,\n  forEach ,\n  toArray ,\n  debounce ,\n  delay ,\n  throttle ,\n  toPromise ,\n  interval ,\n  fromDomEvent ,\n  fromListener ,\n  fromPromise ,\n  fromObservable ,\n  toObservable ,\n  fromCallbag ,\n  toCallbag ,\n  \n}\n/* WonkaJs Not a pure module */\n","\n\nimport * as Wonka_source_make from \"./sources/wonka_source_make.js\";\nimport * as Wonka_source_fromList from \"./sources/wonka_source_fromList.js\";\nimport * as Wonka_source_fromArray from \"./sources/wonka_source_fromArray.js\";\nimport * as Wonka_source_fromValue from \"./sources/wonka_source_fromValue.js\";\nimport * as Wonka_source_primitives from \"./sources/wonka_source_primitives.js\";\nimport * as Wonka_source_makeSubject from \"./sources/wonka_source_makeSubject.js\";\n\nvar fromArray = Wonka_source_fromArray.fromArray;\n\nvar fromList = Wonka_source_fromList.fromList;\n\nvar fromValue = Wonka_source_fromValue.fromValue;\n\nvar make = Wonka_source_make.make;\n\nvar makeSubject = Wonka_source_makeSubject.makeSubject;\n\nvar empty = Wonka_source_primitives.empty;\n\nvar never = Wonka_source_primitives.never;\n\nexport {\n  fromArray ,\n  fromList ,\n  fromValue ,\n  make ,\n  makeSubject ,\n  empty ,\n  never ,\n  \n}\n/* No side effect */\n","\n\nimport * as Caml_option from \"bs-platform/lib/es6/caml_option.js\";\nimport * as Wonka_helpers from \"../wonka_helpers.js\";\n\nfunction fromList(ls) {\n  return (function (sink) {\n      var value = /* record */[/* contents */ls];\n      return Wonka_helpers.makeTrampoline(sink, (function () {\n                    var match = value[0];\n                    if (match) {\n                      value[0] = match[1];\n                      return Caml_option.some(match[0]);\n                    }\n                    \n                  }));\n    });\n}\n\nexport {\n  fromList ,\n  \n}\n/* No side effect */\n","\n\nimport * as Block from \"bs-platform/lib/es6/block.js\";\n\nfunction fromValue(x) {\n  return (function (sink) {\n      var ended = /* record */[/* contents */false];\n      return sink(/* Start */Block.__(0, [(function (signal) {\n                        if (signal || ended[0]) {\n                          return /* () */0;\n                        } else {\n                          ended[0] = true;\n                          sink(/* Push */Block.__(1, [x]));\n                          return sink(/* End */0);\n                        }\n                      })]));\n    });\n}\n\nexport {\n  fromValue ,\n  \n}\n/* No side effect */\n","\n\nimport * as Block from \"bs-platform/lib/es6/block.js\";\n\nfunction make(f) {\n  return (function (sink) {\n      var teardown = /* record */[/* contents */(function () {\n            return /* () */0;\n          })];\n      sink(/* Start */Block.__(0, [(function (signal) {\n                  if (signal) {\n                    return teardown[0]();\n                  } else {\n                    return /* () */0;\n                  }\n                })]));\n      teardown[0] = f(/* record */[\n            /* next */(function (value) {\n                return sink(/* Push */Block.__(1, [value]));\n              }),\n            /* complete */(function (param) {\n                return sink(/* End */0);\n              })\n          ]);\n      return /* () */0;\n    });\n}\n\nexport {\n  make ,\n  \n}\n/* No side effect */\n","\n\nimport * as Block from \"bs-platform/lib/es6/block.js\";\nimport * as Wonka_helpers from \"../wonka_helpers.js\";\n\nfunction empty(sink) {\n  sink(/* Start */Block.__(0, [Wonka_helpers.talkbackPlaceholder]));\n  return sink(/* End */0);\n}\n\nfunction never(sink) {\n  return sink(/* Start */Block.__(0, [Wonka_helpers.talkbackPlaceholder]));\n}\n\nexport {\n  empty ,\n  never ,\n  \n}\n/* No side effect */\n","\n\nimport * as Block from \"bs-platform/lib/es6/block.js\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as Wonka_helpers from \"../wonka_helpers.js\";\n\nfunction buffer(notifier) {\n  return (function (source) {\n      return (function (sink) {\n          var state = /* record */[\n            /* buffer */new Array(),\n            /* sourceTalkback */Wonka_helpers.talkbackPlaceholder,\n            /* notifierTalkback */Wonka_helpers.talkbackPlaceholder,\n            /* ended */false\n          ];\n          Curry._1(source, (function (signal) {\n                  if (typeof signal === \"number\") {\n                    if (state[/* ended */3]) {\n                      return /* () */0;\n                    } else {\n                      state[/* ended */3] = true;\n                      state[/* notifierTalkback */2](/* Close */1);\n                      sink(/* Push */Block.__(1, [state[/* buffer */0]]));\n                      return sink(/* End */0);\n                    }\n                  } else if (signal.tag) {\n                    if (state[/* ended */3]) {\n                      return /* () */0;\n                    } else {\n                      state[/* buffer */0].push(signal[0]);\n                      return state[/* sourceTalkback */1](/* Pull */0);\n                    }\n                  } else {\n                    state[/* sourceTalkback */1] = signal[0];\n                    return Curry._1(notifier, (function (signal) {\n                                  if (typeof signal === \"number\") {\n                                    if (state[/* ended */3]) {\n                                      return /* () */0;\n                                    } else {\n                                      state[/* ended */3] = true;\n                                      state[/* sourceTalkback */1](/* Close */1);\n                                      sink(/* Push */Block.__(1, [state[/* buffer */0]]));\n                                      return sink(/* End */0);\n                                    }\n                                  } else if (signal.tag) {\n                                    if (state[/* ended */3]) {\n                                      return /* () */0;\n                                    } else {\n                                      sink(/* Push */Block.__(1, [state[/* buffer */0]]));\n                                      state[/* buffer */0] = new Array();\n                                      return state[/* notifierTalkback */2](/* Pull */0);\n                                    }\n                                  } else {\n                                    state[/* notifierTalkback */2] = signal[0];\n                                    return state[/* notifierTalkback */2](/* Pull */0);\n                                  }\n                                }));\n                  }\n                }));\n          return sink(/* Start */Block.__(0, [(function (signal) {\n                            if (state[/* ended */3]) {\n                              return 0;\n                            } else if (signal) {\n                              state[/* ended */3] = true;\n                              state[/* sourceTalkback */1](/* Close */1);\n                              return state[/* notifierTalkback */2](/* Close */1);\n                            } else {\n                              return state[/* sourceTalkback */1](/* Pull */0);\n                            }\n                          })]));\n        });\n    });\n}\n\nexport {\n  buffer ,\n  \n}\n/* No side effect */\n","\n\nimport * as Block from \"bs-platform/lib/es6/block.js\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as Caml_option from \"bs-platform/lib/es6/caml_option.js\";\nimport * as Wonka_helpers from \"../wonka_helpers.js\";\n\nfunction combine(sourceA) {\n  return (function (sourceB) {\n      return (function (sink) {\n          var state = /* record */[\n            /* talkbackA */Wonka_helpers.talkbackPlaceholder,\n            /* talkbackB */Wonka_helpers.talkbackPlaceholder,\n            /* lastValA */undefined,\n            /* lastValB */undefined,\n            /* gotSignal */false,\n            /* endCounter */0,\n            /* ended */false\n          ];\n          Curry._1(sourceA, (function (signal) {\n                  var match = state[/* lastValB */3];\n                  if (typeof signal === \"number\") {\n                    if (state[/* endCounter */5] < 1) {\n                      state[/* endCounter */5] = state[/* endCounter */5] + 1 | 0;\n                      return /* () */0;\n                    } else if (state[/* ended */6]) {\n                      return /* () */0;\n                    } else {\n                      state[/* ended */6] = true;\n                      return sink(/* End */0);\n                    }\n                  } else if (signal.tag) {\n                    var a = signal[0];\n                    if (match !== undefined) {\n                      if (state[/* ended */6]) {\n                        return /* () */0;\n                      } else {\n                        state[/* lastValA */2] = Caml_option.some(a);\n                        state[/* gotSignal */4] = false;\n                        return sink(/* Push */Block.__(1, [/* tuple */[\n                                        a,\n                                        Caml_option.valFromOption(match)\n                                      ]]));\n                      }\n                    } else {\n                      state[/* lastValA */2] = Caml_option.some(a);\n                      state[/* gotSignal */4] = false;\n                      return /* () */0;\n                    }\n                  } else {\n                    state[/* talkbackA */0] = signal[0];\n                    return /* () */0;\n                  }\n                }));\n          Curry._1(sourceB, (function (signal) {\n                  var match = state[/* lastValA */2];\n                  if (typeof signal === \"number\") {\n                    if (state[/* endCounter */5] < 1) {\n                      state[/* endCounter */5] = state[/* endCounter */5] + 1 | 0;\n                      return /* () */0;\n                    } else if (state[/* ended */6]) {\n                      return /* () */0;\n                    } else {\n                      state[/* ended */6] = true;\n                      return sink(/* End */0);\n                    }\n                  } else if (signal.tag) {\n                    var b = signal[0];\n                    if (match !== undefined) {\n                      if (state[/* ended */6]) {\n                        return /* () */0;\n                      } else {\n                        state[/* lastValB */3] = Caml_option.some(b);\n                        state[/* gotSignal */4] = false;\n                        return sink(/* Push */Block.__(1, [/* tuple */[\n                                        Caml_option.valFromOption(match),\n                                        b\n                                      ]]));\n                      }\n                    } else {\n                      state[/* lastValB */3] = Caml_option.some(b);\n                      state[/* gotSignal */4] = false;\n                      return /* () */0;\n                    }\n                  } else {\n                    state[/* talkbackB */1] = signal[0];\n                    return /* () */0;\n                  }\n                }));\n          return sink(/* Start */Block.__(0, [(function (signal) {\n                            if (state[/* ended */6]) {\n                              return 0;\n                            } else if (signal) {\n                              state[/* ended */6] = true;\n                              state[/* talkbackA */0](/* Close */1);\n                              return state[/* talkbackB */1](/* Close */1);\n                            } else if (state[/* gotSignal */4]) {\n                              return /* () */0;\n                            } else {\n                              state[/* gotSignal */4] = true;\n                              state[/* talkbackA */0](signal);\n                              return state[/* talkbackB */1](signal);\n                            }\n                          })]));\n        });\n    });\n}\n\nexport {\n  combine ,\n  \n}\n/* No side effect */\n","\n\nimport * as Wonka_helpers from \"../wonka_helpers.js\";\n\nfunction filter(f) {\n  return (function (source) {\n      return (function (sink) {\n          return Wonka_helpers.captureTalkback(source, (function (signal, talkback) {\n                        if (typeof signal === \"number\" || !(signal.tag && !f(signal[0]))) {\n                          return sink(signal);\n                        } else {\n                          return talkback(/* Pull */0);\n                        }\n                      }));\n        });\n    });\n}\n\nexport {\n  filter ,\n  \n}\n/* No side effect */\n","\n\nimport * as Block from \"bs-platform/lib/es6/block.js\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\n\nfunction map(f) {\n  return (function (source) {\n      return (function (sink) {\n          return Curry._1(source, (function (signal) {\n                        var tmp;\n                        tmp = typeof signal === \"number\" ? /* End */0 : (\n                            signal.tag ? /* Push */Block.__(1, [f(signal[0])]) : /* Start */Block.__(0, [signal[0]])\n                          );\n                        return sink(tmp);\n                      }));\n        });\n    });\n}\n\nexport {\n  map ,\n  \n}\n/* No side effect */\n","\n\nimport * as Block from \"bs-platform/lib/es6/block.js\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\n\nfunction onEnd(f) {\n  return (function (source) {\n      return (function (sink) {\n          var ended = /* record */[/* contents */false];\n          return Curry._1(source, (function (signal) {\n                        if (typeof signal === \"number\") {\n                          if (ended[0]) {\n                            return 0;\n                          } else {\n                            ended[0] = true;\n                            sink(signal);\n                            return f();\n                          }\n                        } else if (signal.tag) {\n                          return sink(signal);\n                        } else {\n                          var talkback = signal[0];\n                          return sink(/* Start */Block.__(0, [(function (signal) {\n                                            if (signal) {\n                                              if (ended[0]) {\n                                                \n                                              } else {\n                                                ended[0] = true;\n                                                f();\n                                              }\n                                            }\n                                            return talkback(signal);\n                                          })]));\n                        }\n                      }));\n        });\n    });\n}\n\nexport {\n  onEnd ,\n  \n}\n/* No side effect */\n","\n\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\n\nfunction onStart(f) {\n  return (function (source) {\n      return (function (sink) {\n          return Curry._1(source, (function (signal) {\n                        if (typeof signal === \"number\" || signal.tag) {\n                          return sink(signal);\n                        } else {\n                          sink(signal);\n                          return f();\n                        }\n                      }));\n        });\n    });\n}\n\nexport {\n  onStart ,\n  \n}\n/* No side effect */\n","\n\nimport * as Block from \"bs-platform/lib/es6/block.js\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\n\nfunction scan(f, seed) {\n  return (function (source) {\n      return (function (sink) {\n          var acc = /* record */[/* contents */seed];\n          return Curry._1(source, (function (signal) {\n                        var tmp;\n                        if (typeof signal === \"number\") {\n                          tmp = /* End */0;\n                        } else if (signal.tag) {\n                          acc[0] = f(acc[0], signal[0]);\n                          tmp = /* Push */Block.__(1, [acc[0]]);\n                        } else {\n                          tmp = /* Start */Block.__(0, [signal[0]]);\n                        }\n                        return sink(tmp);\n                      }));\n        });\n    });\n}\n\nexport {\n  scan ,\n  \n}\n/* No side effect */\n","\n\nimport * as Wonka_helpers from \"../wonka_helpers.js\";\n\nfunction skip(wait) {\n  return (function (source) {\n      return (function (sink) {\n          var rest = /* record */[/* contents */wait];\n          return Wonka_helpers.captureTalkback(source, (function (signal, talkback) {\n                        if (typeof signal === \"number\" || !(signal.tag && rest[0] > 0)) {\n                          return sink(signal);\n                        } else {\n                          rest[0] = rest[0] - 1 | 0;\n                          return talkback(/* Pull */0);\n                        }\n                      }));\n        });\n    });\n}\n\nexport {\n  skip ,\n  \n}\n/* No side effect */\n","\n\nimport * as Block from \"bs-platform/lib/es6/block.js\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as Wonka_helpers from \"../wonka_helpers.js\";\n\nfunction skipUntil(notifier) {\n  return (function (source) {\n      return (function (sink) {\n          var state = /* record */[\n            /* skip */true,\n            /* ended */false,\n            /* gotSignal */false,\n            /* sourceTalkback */Wonka_helpers.talkbackPlaceholder,\n            /* notifierTalkback */Wonka_helpers.talkbackPlaceholder\n          ];\n          Curry._1(source, (function (signal) {\n                  if (typeof signal === \"number\") {\n                    if (state[/* skip */0]) {\n                      state[/* notifierTalkback */4](/* Close */1);\n                    }\n                    state[/* ended */1] = true;\n                    return sink(/* End */0);\n                  } else if (signal.tag) {\n                    if (state[/* skip */0] && !state[/* ended */1]) {\n                      return state[/* sourceTalkback */3](/* Pull */0);\n                    } else if (state[/* ended */1]) {\n                      return /* () */0;\n                    } else {\n                      state[/* gotSignal */2] = false;\n                      return sink(signal);\n                    }\n                  } else {\n                    var tb = signal[0];\n                    state[/* sourceTalkback */3] = tb;\n                    return Curry._1(notifier, (function (signal) {\n                                  if (typeof signal === \"number\") {\n                                    return /* () */0;\n                                  } else if (signal.tag) {\n                                    state[/* skip */0] = false;\n                                    return state[/* notifierTalkback */4](/* Close */1);\n                                  } else {\n                                    var innerTb = signal[0];\n                                    state[/* notifierTalkback */4] = innerTb;\n                                    innerTb(/* Pull */0);\n                                    return tb(/* Pull */0);\n                                  }\n                                }));\n                  }\n                }));\n          return sink(/* Start */Block.__(0, [(function (signal) {\n                            if (signal) {\n                              if (state[/* skip */0]) {\n                                state[/* notifierTalkback */4](/* Close */1);\n                              }\n                              state[/* ended */1] = true;\n                              return state[/* sourceTalkback */3](/* Close */1);\n                            } else if (!state[/* gotSignal */2] && !state[/* ended */1]) {\n                              state[/* gotSignal */2] = true;\n                              return state[/* sourceTalkback */3](/* Pull */0);\n                            } else {\n                              return /* () */0;\n                            }\n                          })]));\n        });\n    });\n}\n\nexport {\n  skipUntil ,\n  \n}\n/* No side effect */\n","\n\nimport * as Wonka_helpers from \"../wonka_helpers.js\";\n\nfunction skipWhile(f) {\n  return (function (source) {\n      return (function (sink) {\n          var skip = /* record */[/* contents */true];\n          return Wonka_helpers.captureTalkback(source, (function (signal, talkback) {\n                        if (typeof signal === \"number\" || !(signal.tag && skip[0])) {\n                          return sink(signal);\n                        } else if (f(signal[0])) {\n                          return talkback(/* Pull */0);\n                        } else {\n                          skip[0] = false;\n                          return sink(signal);\n                        }\n                      }));\n        });\n    });\n}\n\nexport {\n  skipWhile ,\n  \n}\n/* No side effect */\n","\n\nimport * as Block from \"bs-platform/lib/es6/block.js\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as Wonka_helpers from \"../wonka_helpers.js\";\n\nfunction take(max) {\n  return (function (source) {\n      return (function (sink) {\n          var state = /* record */[\n            /* taken */0,\n            /* talkback */Wonka_helpers.talkbackPlaceholder\n          ];\n          Curry._1(source, (function (signal) {\n                  if (typeof signal === \"number\") {\n                    if (state[/* taken */0] < max) {\n                      state[/* taken */0] = max;\n                      return sink(/* End */0);\n                    } else {\n                      return /* () */0;\n                    }\n                  } else if (signal.tag) {\n                    if (state[/* taken */0] < max) {\n                      state[/* taken */0] = state[/* taken */0] + 1 | 0;\n                      sink(signal);\n                      if (state[/* taken */0] === max) {\n                        sink(/* End */0);\n                        return state[/* talkback */1](/* Close */1);\n                      } else {\n                        return 0;\n                      }\n                    } else {\n                      return /* () */0;\n                    }\n                  } else {\n                    state[/* talkback */1] = signal[0];\n                    return /* () */0;\n                  }\n                }));\n          return sink(/* Start */Block.__(0, [(function (signal) {\n                            if (state[/* taken */0] < max) {\n                              if (signal) {\n                                state[/* taken */0] = max;\n                                return state[/* talkback */1](/* Close */1);\n                              } else {\n                                return state[/* talkback */1](/* Pull */0);\n                              }\n                            } else {\n                              return 0;\n                            }\n                          })]));\n        });\n    });\n}\n\nexport {\n  take ,\n  \n}\n/* No side effect */\n","\n\nimport * as Block from \"bs-platform/lib/es6/block.js\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as Wonka_helpers from \"../wonka_helpers.js\";\n\nfunction takeUntil(notifier) {\n  return (function (source) {\n      return (function (sink) {\n          var state = /* record */[\n            /* ended */false,\n            /* sourceTalkback */Wonka_helpers.talkbackPlaceholder,\n            /* notifierTalkback */Wonka_helpers.talkbackPlaceholder\n          ];\n          Curry._1(source, (function (signal) {\n                  if (typeof signal === \"number\") {\n                    if (state[/* ended */0]) {\n                      return /* () */0;\n                    } else {\n                      state[/* ended */0] = true;\n                      state[/* notifierTalkback */2](/* Close */1);\n                      return sink(/* End */0);\n                    }\n                  } else if (signal.tag) {\n                    if (state[/* ended */0]) {\n                      return /* () */0;\n                    } else {\n                      return sink(signal);\n                    }\n                  } else {\n                    state[/* sourceTalkback */1] = signal[0];\n                    return Curry._1(notifier, (function (signal) {\n                                  if (typeof signal === \"number\") {\n                                    return /* () */0;\n                                  } else if (signal.tag) {\n                                    state[/* ended */0] = true;\n                                    state[/* sourceTalkback */1](/* Close */1);\n                                    return sink(/* End */0);\n                                  } else {\n                                    var innerTb = signal[0];\n                                    state[/* notifierTalkback */2] = innerTb;\n                                    return innerTb(/* Pull */0);\n                                  }\n                                }));\n                  }\n                }));\n          return sink(/* Start */Block.__(0, [(function (signal) {\n                            if (state[/* ended */0]) {\n                              return 0;\n                            } else if (signal) {\n                              state[/* ended */0] = true;\n                              state[/* sourceTalkback */1](/* Close */1);\n                              return state[/* notifierTalkback */2](/* Close */1);\n                            } else {\n                              return state[/* sourceTalkback */1](/* Pull */0);\n                            }\n                          })]));\n        });\n    });\n}\n\nexport {\n  takeUntil ,\n  \n}\n/* No side effect */\n","\n\nimport * as Block from \"bs-platform/lib/es6/block.js\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as Wonka_helpers from \"../wonka_helpers.js\";\n\nfunction takeWhile(f) {\n  return (function (source) {\n      return (function (sink) {\n          var ended = /* record */[/* contents */false];\n          var talkback = /* record */[/* contents */Wonka_helpers.talkbackPlaceholder];\n          Curry._1(source, (function (signal) {\n                  if (typeof signal === \"number\") {\n                    if (ended[0]) {\n                      return /* () */0;\n                    } else {\n                      ended[0] = true;\n                      return sink(/* End */0);\n                    }\n                  } else if (signal.tag) {\n                    if (ended[0]) {\n                      return /* () */0;\n                    } else if (f(signal[0])) {\n                      return sink(signal);\n                    } else {\n                      ended[0] = true;\n                      sink(/* End */0);\n                      return talkback[0](/* Close */1);\n                    }\n                  } else {\n                    talkback[0] = signal[0];\n                    return sink(signal);\n                  }\n                }));\n          return sink(/* Start */Block.__(0, [(function (signal) {\n                            if (ended[0]) {\n                              return 0;\n                            } else if (signal) {\n                              ended[0] = true;\n                              return talkback[0](/* Close */1);\n                            } else {\n                              return talkback[0](/* Pull */0);\n                            }\n                          })]));\n        });\n    });\n}\n\nexport {\n  takeWhile ,\n  \n}\n/* No side effect */\n","\n\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as Wonka_helpers from \"../wonka_helpers.js\";\n\nfunction publish(source) {\n  var state = /* record */[\n    /* talkback */Wonka_helpers.talkbackPlaceholder,\n    /* ended */false\n  ];\n  Curry._1(source, (function (signal) {\n          if (typeof signal === \"number\") {\n            state[/* ended */1] = true;\n            return /* () */0;\n          } else if (signal.tag) {\n            if (state[/* ended */1]) {\n              return 0;\n            } else {\n              return state[/* talkback */0](/* Pull */0);\n            }\n          } else {\n            var x = signal[0];\n            state[/* talkback */0] = x;\n            return x(/* Pull */0);\n          }\n        }));\n  return /* record */[/* unsubscribe */(function (param) {\n              if (state[/* ended */1]) {\n                return 0;\n              } else {\n                state[/* ended */1] = true;\n                return state[/* talkback */0](/* Close */1);\n              }\n            })];\n}\n\nexport {\n  publish ,\n  \n}\n/* No side effect */\n","\n\nimport * as Wonka_sink_publish from \"./sinks/wonka_sink_publish.js\";\nimport * as Wonka_sink_toArray from \"./sinks/wonka_sink_toArray.js\";\nimport * as Wonka_sink_subscribe from \"./sinks/wonka_sink_subscribe.js\";\n\nvar publish = Wonka_sink_publish.publish;\n\nvar subscribe = Wonka_sink_subscribe.subscribe;\n\nvar forEach = Wonka_sink_subscribe.forEach;\n\nvar toArray = Wonka_sink_toArray.toArray;\n\nexport {\n  publish ,\n  subscribe ,\n  forEach ,\n  toArray ,\n  \n}\n/* No side effect */\n","\n\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as Wonka_helpers from \"../wonka_helpers.js\";\n\nfunction toArray(source) {\n  var state = /* record */[\n    /* values */new Array(),\n    /* talkback */Wonka_helpers.talkbackPlaceholder,\n    /* value */undefined,\n    /* ended */false\n  ];\n  Curry._1(source, (function (signal) {\n          if (typeof signal === \"number\") {\n            state[/* ended */3] = true;\n            return /* () */0;\n          } else if (signal.tag) {\n            state[/* values */0].push(signal[0]);\n            return state[/* talkback */1](/* Pull */0);\n          } else {\n            var x = signal[0];\n            state[/* talkback */1] = x;\n            return x(/* Pull */0);\n          }\n        }));\n  if (!state[/* ended */3]) {\n    state[/* talkback */1](/* Close */1);\n  }\n  return state[/* values */0];\n}\n\nexport {\n  toArray ,\n  \n}\n/* No side effect */\n","\n\nimport * as Block from \"bs-platform/lib/es6/block.js\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as Caml_option from \"bs-platform/lib/es6/caml_option.js\";\n\nfunction debounce(f) {\n  return (function (source) {\n      return (function (sink) {\n          var gotEndSignal = /* record */[/* contents */false];\n          var id = /* record */[/* contents */undefined];\n          var $$clearTimeout$1 = function (param) {\n            var match = id[0];\n            if (match !== undefined) {\n              id[0] = undefined;\n              clearTimeout(Caml_option.valFromOption(match));\n              return /* () */0;\n            } else {\n              return /* () */0;\n            }\n          };\n          return Curry._1(source, (function (signal) {\n                        if (typeof signal === \"number\") {\n                          gotEndSignal[0] = true;\n                          var match = id[0];\n                          if (match !== undefined) {\n                            return /* () */0;\n                          } else {\n                            return sink(/* End */0);\n                          }\n                        } else if (signal.tag) {\n                          $$clearTimeout$1(/* () */0);\n                          id[0] = Caml_option.some(setTimeout((function (param) {\n                                      id[0] = undefined;\n                                      sink(signal);\n                                      if (gotEndSignal[0]) {\n                                        return sink(/* End */0);\n                                      } else {\n                                        return 0;\n                                      }\n                                    }), f(signal[0])));\n                          return /* () */0;\n                        } else {\n                          var tb = signal[0];\n                          return sink(/* Start */Block.__(0, [(function (signal) {\n                                            if (signal) {\n                                              $$clearTimeout$1(/* () */0);\n                                              return tb(/* Close */1);\n                                            } else {\n                                              return tb(signal);\n                                            }\n                                          })]));\n                        }\n                      }));\n        });\n    });\n}\n\nexport {\n  debounce ,\n  \n}\n/* No side effect */\n","\n\nimport * as Block from \"bs-platform/lib/es6/block.js\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as Wonka_helpers from \"../wonka_helpers.js\";\n\nfunction delay(wait) {\n  return (function (source) {\n      return (function (sink) {\n          var state = /* record */[\n            /* talkback */Wonka_helpers.talkbackPlaceholder,\n            /* active */0,\n            /* gotEndSignal */false\n          ];\n          Curry._1(source, (function (signal) {\n                  var exit = 0;\n                  if (typeof signal === \"number\" || signal.tag) {\n                    exit = 1;\n                  } else {\n                    state[/* talkback */0] = signal[0];\n                    return /* () */0;\n                  }\n                  if (exit === 1) {\n                    if (state[/* gotEndSignal */2]) {\n                      return /* () */0;\n                    } else {\n                      state[/* active */1] = state[/* active */1] + 1 | 0;\n                      setTimeout((function (param) {\n                              if (state[/* gotEndSignal */2] && state[/* active */1] === 0) {\n                                sink(/* End */0);\n                              } else {\n                                state[/* active */1] = state[/* active */1] - 1 | 0;\n                              }\n                              return sink(signal);\n                            }), wait);\n                      return /* () */0;\n                    }\n                  }\n                  \n                }));\n          return sink(/* Start */Block.__(0, [(function (signal) {\n                            if (signal) {\n                              state[/* gotEndSignal */2] = true;\n                              if (state[/* active */1] === 0) {\n                                return sink(/* End */0);\n                              } else {\n                                return 0;\n                              }\n                            } else if (state[/* gotEndSignal */2]) {\n                              return /* () */0;\n                            } else {\n                              return state[/* talkback */0](signal);\n                            }\n                          })]));\n        });\n    });\n}\n\nexport {\n  delay ,\n  \n}\n/* No side effect */\n","\n\nimport * as Block from \"bs-platform/lib/es6/block.js\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as Caml_option from \"bs-platform/lib/es6/caml_option.js\";\n\nfunction throttle(f) {\n  return (function (source) {\n      return (function (sink) {\n          var skip = /* record */[/* contents */false];\n          var id = /* record */[/* contents */undefined];\n          var $$clearTimeout$1 = function (param) {\n            var match = id[0];\n            if (match !== undefined) {\n              clearTimeout(Caml_option.valFromOption(match));\n              return /* () */0;\n            } else {\n              return /* () */0;\n            }\n          };\n          return Curry._1(source, (function (signal) {\n                        if (typeof signal === \"number\") {\n                          $$clearTimeout$1(/* () */0);\n                          return sink(/* End */0);\n                        } else if (signal.tag) {\n                          if (skip[0]) {\n                            return /* () */0;\n                          } else {\n                            skip[0] = true;\n                            $$clearTimeout$1(/* () */0);\n                            id[0] = Caml_option.some(setTimeout((function (param) {\n                                        id[0] = undefined;\n                                        skip[0] = false;\n                                        return /* () */0;\n                                      }), f(signal[0])));\n                            return sink(signal);\n                          }\n                        } else {\n                          var tb = signal[0];\n                          return sink(/* Start */Block.__(0, [(function (signal) {\n                                            if (signal) {\n                                              $$clearTimeout$1(/* () */0);\n                                              return tb(/* Close */1);\n                                            } else {\n                                              return tb(signal);\n                                            }\n                                          })]));\n                        }\n                      }));\n        });\n    });\n}\n\nexport {\n  throttle ,\n  \n}\n/* No side effect */\n","\n\nimport * as Block from \"bs-platform/lib/es6/block.js\";\n\nfunction interval(p) {\n  return (function (sink) {\n      var i = /* record */[/* contents */0];\n      var id = setInterval((function (param) {\n              var num = i[0];\n              i[0] = i[0] + 1 | 0;\n              return sink(/* Push */Block.__(1, [num]));\n            }), p);\n      return sink(/* Start */Block.__(0, [(function (signal) {\n                        if (signal) {\n                          clearInterval(id);\n                          return /* () */0;\n                        } else {\n                          return /* () */0;\n                        }\n                      })]));\n    });\n}\n\nexport {\n  interval ,\n  \n}\n/* No side effect */\n","\n\nimport * as Block from \"bs-platform/lib/es6/block.js\";\n\nfunction fromPromise(promise) {\n  return (function (sink) {\n      var ended = /* record */[/* contents */false];\n      promise.then((function (value) {\n              if (!ended[0]) {\n                sink(/* Push */Block.__(1, [value]));\n                sink(/* End */0);\n              }\n              return Promise.resolve(/* () */0);\n            }));\n      return sink(/* Start */Block.__(0, [(function (signal) {\n                        if (signal) {\n                          ended[0] = true;\n                          return /* () */0;\n                        } else {\n                          return /* () */0;\n                        }\n                      })]));\n    });\n}\n\nexport {\n  fromPromise ,\n  \n}\n/* No side effect */\n","\n\nimport * as Block from \"bs-platform/lib/es6/block.js\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\n\nfunction fromCallbag(callbag) {\n  return (function (sink) {\n      var wrappedSink = function (signal, data) {\n        switch (signal) {\n          case 0 : \n              var wrappedTalkback = function (talkbackSignal) {\n                if (talkbackSignal) {\n                  return data(/* CALLBAG_END */2);\n                } else {\n                  return data(/* CALLBAG_DATA */1);\n                }\n              };\n              return sink(/* Start */Block.__(0, [wrappedTalkback]));\n          case 1 : \n              return sink(/* Push */Block.__(1, [data]));\n          case 2 : \n              return sink(/* End */0);\n          \n        }\n      };\n      return callbag(/* CALLBAG_START */0, wrappedSink);\n    });\n}\n\nfunction toCallbag(source) {\n  return (function (signal, data) {\n      if (signal === /* CALLBAG_START */0) {\n        return Curry._1(source, (function (signal) {\n                      if (typeof signal === \"number\") {\n                        return data(/* CALLBAG_END */2, /* () */0);\n                      } else if (signal.tag) {\n                        return data(/* CALLBAG_DATA */1, signal[0]);\n                      } else {\n                        var talkbackFn = signal[0];\n                        var wrappedTalkbackFn = function (talkback) {\n                          switch (talkback) {\n                            case 0 : \n                                return /* () */0;\n                            case 1 : \n                                return talkbackFn(/* Pull */0);\n                            case 2 : \n                                return talkbackFn(/* Close */1);\n                            \n                          }\n                        };\n                        return data(/* CALLBAG_START */0, wrappedTalkbackFn);\n                      }\n                    }));\n      } else {\n        return 0;\n      }\n    });\n}\n\nexport {\n  fromCallbag ,\n  toCallbag ,\n  \n}\n/* No side effect */\n","export function pipe(source) {\n  const args = arguments;\n  const len = args.length;\n  let x = source;\n\n  for (let i = 1; i < len; i++) {\n    x = args[i](x);\n  }\n\n  return x;\n}\n"],"names":["__","tag","block","x","offset","len","result","Array","j","i","app","_f","_args","args","arity","f","init_arity","d","Caml_array.caml_array_sub","_1","o","a0","curry_1","param","param$1","param$2","param$3","param$4","param$5","_3","a1","a2","curry_3","undefinedHeader","undefined","block$1","valFromOption","depth","talkbackPlaceholder","captureTalkback","source","sinkWithTalkback","signal","makeTrampoline","sink","Block","state$2","match$1","Caml_option","observableSymbol","Symbol","takeLast","max","queue","talkback","fromListener","addListener","removeListener","handler","$$event","Curry","element","event","_ref2","toPromise","Promise","resolve","Wonka_operator_takeLast","subscribe","Wonka_helpers","fromArray","arr","size","index$0","_ref3","_ref$3","onPush","_ref2$1","_ref2$2","_ref3$1","_ref4","mergeMap","state$1","applyInnerSource","innerSource","talkback$0","tb","_ref5","_ref6","mergeAll","concatMap","match","state$0","q","MutableQueue_js","_ref2$3","_ref3$2","switchMap","_ref2$4","Wonka_source_fromArray","fromList","ls","fromValue","make","teardown$0","value","makeSubject","next","complete","empty","never","buffer","notifier","combine","sourceA","sourceB","state$5","a","b","Wonka_operator_concatMap","concat","sources","concatAll","filter","map","tmp","Wonka_operator_mergeMap","merge","flatten","onEnd","Wonka_operator_onPush","tap","onStart","sample","state$3","scan","seed","share","skip","wait","rest$0","skipUntil","state$4","innerTb","skipWhile","Wonka_operator_switchMap","switchAll","take","takeUntil","takeWhile","publish","Wonka_sink_subscribe","forEach","toArray","debounce","$$clearTimeout$1","clearTimeout","setTimeout","delay","throttle","WonkaJs","interval","p","id","setInterval","num","i$0","clearInterval","fromDomEvent","addEventListener","removeEventListener","Wonka_source_fromListener","fromPromise","promise","fromObservable","input","observable","subscription","observer","error","toObservable","unsubscribe","fromCallbag","callbag","wrappedSink","data","talkbackSignal","toCallbag","talkbackFn","pipe","arguments"],"mappings":";;AAGAA,YAAYC,GAAKC;EACfA,QAAYD;;;;wBCAUE,GAAGC,GAAQC;EAIjC,KAHA,IAAIC,IAAaC,MAAMF,IACnBG,IAAI,GAEFA,IAAIH;IACRC,EAAOE,KAAKL,EAAEM,IACdD,IAAIA,IAAI,IAAI,GACZC,IAAIA,IAAI,IAAI;;;;;ACPhBC,aAAaC,GAAIC;EACf,SAAY;IACV,IAAIC,IAAOD;QAGPE,IAAuB,WADVC,YACc,IAAIC;QAGzB,WADFF,IADED,WACY;MAEpB,eAAe,MAAMA;;QACR,IAAJI;MACTL,IAAQM,eAA0BL,GAAMC,GAAY,KAAJG,IAChDN,IAAKI,QAAQ,MAAMG,eAA0BL,GAAM,GAAGC;;sBAGrCC,GAAEF;QACnB,gBAAiBV;UACf,WAAWY,GAAGF,SAAuB,EAACV;;QAEtCY,GAAEF;;;;;AAsCVM,YAAYC,GAAGC;EACb,IAAIP,IAAQM;eACRN,IACKM,EAAEC,KApCbC,iBAAiBF,GAAGC,GAAIP;IACtB,QAAQA;KACN,KAAK;MACD,SAASO;;UACR;MACD,gBAAkBE;QACd,SAASF,GAAIE;;;UAEhB;MACD,gBAAkBA,GAAOC;QACrB,SAASH,GAAIE,GAAOC;;;UAEvB;MACD,gBAAkBD,GAAOC,GAASC;QAC9B,SAASJ,GAAIE,GAAOC,GAASC;;;UAEhC;MACD,gBAAkBF,GAAOC,GAASC,GAASC;QACvC,SAASL,GAAIE,GAAOC,GAASC,GAASC;;;UAEzC;MACD,gBAAkBH,GAAOC,GAASC,GAASC,GAASC;QAChD,SAASN,GAAIE,GAAOC,GAASC,GAASC,GAASC;;;UAElD;MACD,gBAAkBJ,GAAOC,GAASC,GAASC,GAASC,GAASC;QACzD,SAASP,GAAIE,GAAOC,GAASC,GAASC,GAASC,GAASC;;;;MAG9D,WAAWR,GAAc,EAACC;;GASrBC,CAAQF,GAAGC,GAAIP;;;AAyG1Be,YAAYT,GAAGC,GAAIS,GAAIC;EACrB,IAAIjB,IAAQM;eACRN,IACKM,EAAEC,GAAIS,GAAIC,KAvCrBC,iBAAiBZ,GAAGC,GAAIS,GAAIC,GAAIjB;IAC9B,QAAQA;KACN,KAAK;MACD,WAAWM,EAAEC,IAAgB,EACjBS,GACAC;;UAEX;MACD,WAAWX,EAAEC,GAAIS,IAAgB,EAACC;;UACjC;MACD,SAASV,GAAIS,GAAIC;;UAChB;MACD,gBAAkBR;QACd,SAASF,GAAIS,GAAIC,GAAIR;;;UAExB;MACD,gBAAkBA,GAAOC;QACrB,SAASH,GAAIS,GAAIC,GAAIR,GAAOC;;;UAE/B;MACD,gBAAkBD,GAAOC,GAASC;QAC9B,SAASJ,GAAIS,GAAIC,GAAIR,GAAOC,GAASC;;;UAExC;MACD,gBAAkBF,GAAOC,GAASC,GAASC;QACvC,SAASL,GAAIS,GAAIC,GAAIR,GAAOC,GAASC,GAASC;;;;MAGpD,WAAWN,GAAc,EACbC,GACAS,GACAC;;GAUPC,CAAQZ,GAAGC,GAAIS,GAAIC,GAAIjB;;;AC7KlC,IAAImB,kBAA6B;;cAEnB9B;EACZ,SAAU+B,MAAN/B;IAMF,YALuB,EACrB8B,iBACA,WAEU,KACL/B;;WACEC,KAAcA,EAAE,OAAO8B,qBAE5BE,IAAqB,EACvBF,iBAFQ9B,EAAE,KAAK,IAAI,WAKP;;;;AA+BlBiC,uBAAuBjC;EACrB,IAAU,SAANA,KAAcA,EAAE,OAAO8B;QAEX,OADVI,IAAQlC,EAAE;MAIZ,OAAkB,EACV8B,iBACAI,IAAQ,IAAI;;;;;;;ACpD1BC,6BAA6Bf;;;;AAI7BgB,yBAAyBC,GAAQC;UACWH;YAC1BE,GAAS,SAAUE;IACC,yBACfA,cACWA,EAAO;aAIDA;;;;AAIxCC,wBAAwBC,GAAM7B;EAAG;WAMR8B,GAAS,GAAG,EAAE,SAAUH;QAEzBA;WACoB;;WAGD;WAEhB;oBACgB,GAEfI;aAEYZ,OADZa,IAAUhC,aAES,GACrB6B,EAAeC,GAAS,GAAG,EAACG,cAA0BD,gBAEhC,GACtBH;;WAGoB;;;;;;IC5C1CK,mBACgB,8BACdC,sBAAsBA,oBAAoBA,OAAO,iBACjD;;cAcoB3B;;;;ACnB1B4B,kBAAkBC;kBACEZ;oBACII;;;;UACVS,IAAQ;6BACyBb,GAAS,SAAUE,GAAQY;YAC5B;gCACgBV;;kBAIzBS,YACCD,KAAa,IAANA,KACjBC,WAEFA,OAAWX,EAAO;;;;;;;ACb5Ca,sBAAsBC,GAAaC;kBACfb;QACVc,IAAUA,SAAUC;eACAd,GAAS,GAAG,EAACc;;MAErBd,GAAS,GAAG,EAAE,SAAUH;iBAEnBkB,GAASH,GAAgBC;;cAK9BF,GAAaE;;;;gBCTrBG,GAASC,GAAOJ;EACxBG,mBAAyBC,GAAOJ;;;AAIlCK,eAAUF,GAASC,GAAOJ;EACxBG,sBAA4BC,GAAOJ;;;ACDzC,IAMIM,cCdJA,mBAAmBxB;aACNyB,QAAS,SAAUC,GAAS3C;cACT4C,SAAiC,EAAjCA,CAAoC3B,IAAU,SAAUE;aACpC,2BAEXA,QACFwB,EAAQxB,EAAO,MAEfA,EAAO;;;;;ACR9C0B,mBAAmBrD;kBACCyB;IAAQ,QAEN6B;OAGP7B,GAAS,SAAUE;UACE;oBACE;;UAEbA,OAAY;;;;UAIjBA,EAAO;;;UAIPvC,IAAIuC,EAAO;;;sBAKuBnB;;;;WAIZ;;;;;;;;;;AC3B1C+C,mBAAmBC;kBACC3B;QACV4B,IAAOD;;0BAEyB3B,GAAO;UACzB6B,IAAWD,GAAM;YACfrE,IAAIoE;YACGE,IAAW,IAAI;oBACFtE;;;;;;ACwBXuE,eAAU9B;;;;ACpBE+B,gBAAU/B;;;;ACbzDgC,gBAAgB7D;kBACIyB;oBACII;gBACEJ,GAAS,SAAUE;QACC,wBAChBA,SACF3B,EAAE2B,EAAO;iBAIDA;;;;;;gBCFOnB;;;;AAGRsD,iBAAUtD;;;;ACsDuBuD,iBAAUxB;;;;AAQRyB,iBAAUzB;;;;AASZ0B,eAAU1B;;;;AA/E9E2B,kBAAkBlE;kBACEyB;oBACII;MAAM,QAECyB;SA+BZ7B,GAAS,SAAUE;YACE,sBAAU;;;;eAIN;uBAClBwC,WACKtC,OAEA;;QAGN,IAAIF,OAAY;;;;WAvCRyC,SAAUC;uBAI+DjF;;;oBAHpDkE;eAC1Be,GAAc,SAAU1C;kBACJ;2BACWwC,aAG3BpC,KAA+D,MAAxCoC,WAClBtC,OAEA;;kBAEAF;6BACLwC,YACFtC,EAAeC,GAAS,GAAG,EAACH,EAAO,QAC5B2C;;kBAKLC,IAAK5C,EAAO;kBAEewC,SAAoCI;;;YAqBxDvE,EAAE2B,EAAO;;;YAIxB4C,IAAK5C,EAAO;;;eAKHG,GAAS,GAAG,EAAE,SAAUH;QACzBA,oCAOsB,iCAKS;;;;;;;AAiB5C6C,eAAUpF;;;;AAMVqF,eAAUrF;;;;AAD7BsF,kBAAkBjD;yBAGEA;;;AChGpBkD,mBAAmB3E;kBACCyB;oBACII;iBAU4BF;YACJ;sBACQ,OACE2B,0BAEhBnC,OADVyD,IAAQC,aAJrBhC,GAMmC7C,EAAEiC,cAA0B2C,cAE7C/C;;YAIAF,OAAY;;;;YAIJG,GAAS,GAAG,EAACH,EAAO;;;aAKT;YADxB4C,IAAK5C,EAAO;;;MA9Bd,gBAGC2B,yBACAA;SAiCZ7B,GAAS,SAAUE;YACE,sBAAU;;;;eAIN;wCCjD3BmD;yBACRA;WDiD+CC,MACzBlD,OAEA;;QAGN,IAAIF,OAAY;;;;cAIXA,EAAO;qBAEiBvC,KA7CnCyD,GA+CsB7C,EAAEZ;;;YAKnBmF,IAAK5C,EAAO;;;eAKHG,GAAS,GAAG,EAAE,SAAUH;yCAMH,aAGQ2B,sBALvB,SASF,IAEAvB;;;;;;AAQjBiD,iBAAU5F;;;;AAMV6F,iBAAU7F;;;;AErG9B8F,mBAAmBlF;kBACCyB;oBACII;iBAS4BF;YACJ;sBACQ,OACE2B,yBAErBzB,OAEA;;YAEAF,OAAY;;;;YAIJG,GAAS,GAAG,EAACH,EAAO;;;aAKT;YADxB4C,IAAK5C,EAAO;;;MA1Bd,QAEC2B,yBACAA;SA8BZ7B,GAAS,SAAUE;YACE,sBAAU;;;;eAIN;qBAEb,IAEAE;;QAGN,IAAIF,OAAY;;;;0BAMa2B;aAEftD,EAAE2B,EAAO;;;YAIxB4C,IAAK5C,EAAO;;;eAKHG,GAAS,GAAG,EAAE,SAAUH;yCAMH,aAGQ2B,sBALvB,KASFa;;;;;;AAQjBgB,iBAAU/F;;;;ACpE9B,ICdImE,cCAY6B,WDEZC,aENJA,kBAAkBC;kBACEzD;YACyByD;0BACHzD,GAAO;UACzB+C;UACAA;mBACSA,EAAM,IACV3C,KAAiB2C,EAAM;;;;GFChDW,cGTJA,mBAAmBnG;kBACCyC;;aAESC,GAAS,GAAG,EAAE,SAAUH;UACzBA;;;WAGS;QACIG,GAAS,GAAG,EAAC1C;;;;GHGlDoG,SIXJA,cAAcxF;kBACM6B;;MAIEC,GAAS,GAAG,EAAE,SAAUH;iBAEnB8D;;QAKPzF,aACa0F;eACK5D,GAAS,GAAG,EAAC4D;gBAEdlF;;;;;GJHjCmF,gBTbJA,qBAAqBnF;EAAO;WAKbiB,SAAUI;eAI2DzC;mBACvCyC;;QAJnBgD,SAA2BhD;aAC1BC,GAAS,GAAG,EAAE,SAAUH;YACzBA,UACoBkD;;;KASjCe,SAAUF;8BAIsB7D;eACTC,GAAS,GAAG,EAAC4D;;;KAKhCG,SAAUrF;eAIC;;;GSjBxBsF,UKdJA,eAAejE;EACbA,EAAgBC,GAAS,GAAG,EAACwB;;GLe3ByC,UKXJA,eAAelE;WACUC,GAAS,GAAG,EAACwB;GLYlC0C,WMjBJA,gBAAgBC;kBACIxE;oBACII;iBA0BiCF;YACD,sBAAU;;;;eAIN;;YAEPG,GAAS,GAAG;;;QAGxB,IAAIH,OAAY;;;;YAIJG,GAAS,GAAG;cACJ;;;oBAIQH,EAAO;;MA7C9C,gBAGE2B,yBACEA;SAGf7B,GAAS,SAAUE;YACE,sBAAU;;;;eAIN;;YAEPG,GAAS,GAAG;;;QAGxB,IAAIH,OAAY;;;;iBAIOA,EAAO;;;YAIJA,EAAO;kBACtBsE;;eAyBHnE,GAAS,GAAG,EAAE,SAAUH;mBAEpB,IACEA,UACa,SAEfI,QAEAoC;;;;GN1CjC+B,YOlBJA,iBAAiBC;kBACGC;oBACIvE;MAAM,QAEHyB,yBACAA,8BACDnC,YACAA;SAKPgF,GAAU,SAAUxE;YACjBiD;YACkB,sBAAU;cACC,IAA3ByB;uBACyBA,IAA2B,IAAI;;;;;eAKpC;;;QAGnB,IAAI1E,OAAY;UACjB2E,IAAI3E,EAAO;mBACDR,MAAVyD,GAAqB;;;;gBAII3C,KAAiBqE;iBAChB;qBACJxE,GAAS,GAAG,IAClBwE,GACArE,cAA0B2C;;cAInB3C,KAAiBqE;eAChB;;;YAIF3E,EAAO;;;SAIlCyE,GAAU,SAAUzE;YACjBiD;YACkB,sBAAU;cACC,IAA3ByB;uBACyBA,IAA2B,IAAI;;;;;eAKpC;;;QAGnB,IAAI1E,OAAY;UACjB4E,IAAI5E,EAAO;mBACDR,MAAVyD,GAAqB;;;;gBAII3C,KAAiBsE;iBAChB;qBACJzE,GAAS,GAAG,IAClBG,cAA0B2C,IAC1B2B;;cAIOtE,KAAiBsE;eAChB;;;YAIF5E,EAAO;;;eAIpBG,GAAS,GAAG,EAAE,SAAUH;;;;YAGlBA;sBACa,SAEfwC;;;;;aAImB;UACFxC;iBACOA;;;;GP1EzDgD,cDAY6B,WCEZC,WJ6EJA,gBAAgBC;4BAGItB,UAAiCsB;GI9EjDC,cJqEJA,mBAAmBlF;4BAGCA;GItEhBmF,WQ7BJA,gBAAgB5G;kBACIyB;oBACII;6BACuBJ,GAAS,SAAUE,GAAQY;eAC5B,yBAAcZ,SAAe3B,EAAE2B,EAAO,MACnDE,EAAKF,KAELY;;;;GRwB7BsE,qBS9BS7G;kBACOyB;oBACII;gBACEJ,GAAS,SAAUE;QAErBmF,IAAwB,2BACpBnF,QAAuBG,GAAS,GAAG,EAAC9B,EAAE2B,EAAO,SAAmBG,GAAS,GAAG,EAACH,EAAO;iBAE5EmF;;;;GTwBhC5C,aDAW6C,UCEXC,ULyDJA,eAAeN;yBAGKtB,UAAiCsB;GK1DjDhC,aDAWqC,UCEXE,YLiEUvC,UK/DVwC,UUxCJA,eAAelH;kBACKyB;oBACII;;gBAEEJ,GAAS,SAAUE;YACC,sBAAU;;;;eAIjB;YACNA;;;QAGF,IAAIA;mBACGA;;YAERY,IAAWZ,EAAO;iBACCG,GAAS,GAAG,WAAYH;UACzBA,iBAIW,GACX3B;mBAGY2B;;;;;GVgBxDkC,WDASsD,QCETC,QP7BMvD,QO+BNwD,YW/CJA,iBAAiBrH;kBACGyB;oBACII;gBACEJ,GAAS,SAAUE;YACC,wBAAYA;mBACpBA;;UAEPA;;;;;GX0C3B2F,WN/CJA,gBAAgBrB;kBACIxE;oBACII;MAAM,qBAGPV;SAQJM,GAAS,SAAUE;YACE;sBACE,SAEfE;;oBAEeI,KAAiBN,EAAO,UAGfA,EAAO;;;SAIvCsE,GAAW,SAAUtE;YAClBiD;YACkB;sBACE,SAEf/C;;YACEF,OAAY;mBACPR,MAAVyD;;;mBACoBzD;mBACAW,GAAS,GAAG,EAACG,cAA0B2C;;YAK9BjD,EAAO;;;eAI3BG,GAAS,GAAG,EAAE,SAAUH;YACzBA;sBACoB,SAEf4F;;;;;;;GMCjCC,SYlDJA,cAAcxH,GAAGyH;kBACGhG;oBACII;cACuB4F;gBACrBhG,GAAS,SAAUE;QAEC,uBACpBmF,QACSnF,QAETmF,IAAgBhF,GAAS,GAAG,MADnB9B,KAAU2B,EAAO,SAG1BmF,IAAiBhF,GAAS,GAAG,EAACH,EAAO;iBAE3BmF;;;;GZsChCY,URnDJA,eAAejG;aASqBE;IACE,+CAIE,MAEbA,cACiB,wBACaE;eACnBF;cAIKA,EAAO;;;EAvB3B,gBAGL2B;kBAGEzB;eAwBkEzC;mBACvCyC;;eAxBnBgD,SAA2BhD,cAE/CgB,GAASpB;aAmBYK,GAAS,GAAG,EAAE,SAAUH;UACzBA;eAIiC,WAHbkD,sBAIbV,OAEA;;;;;WAKiB;eACIxC;;;GQWpDgG,SavDJA,cAAcC;kBACMnG;oBACII;cACwB+F;6BACDnG,GAAS,SAAUE,GAAQY;eAC5B,wBAAcZ,SAAwB,IAAVkG,SAGtCA,IAAU,IAAI,GACjBtF,QAHAV,EAAKF;;;;GbmDlCmG,ccvDJA,mBAAmB7B;kBACCxE;oBACII;MAAM,gCAKEyB,yBACEA;SAEf7B,GAAS,SAAUE;YACE;iCAIE,GACfE;;YACEF,OAAY;cACjBkD;;;;;;eAKwB;mBACdlD;;YAGV4C,IAAK5C,EAAO;YACe4C;kBACf0B,YAAqBtE;cACD;;;cAEXA;wBACY,GACdoG;;cAEHC,IAAUrG,EAAO;;;;;eAQxBG,GAAS,GAAG,EAAE,SAAUH;YACzBA;iCAIoB,GACf4F;;;;;aAEmB;;;;;GdKpDU,ce3DJA,mBAAmBjI;kBACCyB;oBACII;;6BAEuBJ,GAAS,SAAUE,GAAQY;YAC5B,wBAAcZ,YAE7B;UAAA,IAAI3B,EAAE2B,EAAO;;;eAGR;;iBAJEA;;;;GfuDlCuD,cDAYgD,WCEZC,cFuBJA,mBAAmB1G;4BAGCA;GExBhB2G,SgB/DJA,cAAc/F;kBACMZ;oBACII;MAAM,eAGJyB;SAEP7B,GAAS,SAAUE;YACE;qBACMU,SACFA,GACfR;;YAIAF;qBACiBU,UACFwC,IAAsB,IAAI,GAChDhD,EAAKF,IACDkD,MAAwBxC,MAC1BR,MACOsC;;YAQcxC,EAAO;;;eAInBG,GAAS,GAAG,EAAE,SAAUH;mBACHU,IACpBV,SACoBU,GACf8B,QAEAA,OAGF;;;;GhBuBjC/B,aDAWgB,UCEXiF,ciBnEJA,mBAAmBpC;kBACCxE;oBACII;iBAuBiCF;YACD;;;YAEXA;sBACa,SAEfE;;YAEHmG,IAAUrG,EAAO;;;MA/B3B,gBAGE2B,yBACEA;SAEf7B,GAAS,SAAUE;YACE,sBAAU;;;;eAIN;;;;QAInB,IAAIA;yBAIAE,EAAKF;;YAGiBA,EAAO;kBACtBsE;;eAeHnE,GAAS,GAAG,EAAE,SAAUH;mBAEpB,IACEA,UACa,SAEfI,QAEAoC;;;;GjBqBjCmE,ckBrEJA,mBAAmBtI;kBACCyB;oBACII;sBAE4ByB;SACjC7B,GAAS,SAAUE;YACE,sBAAU;;;;eAIjB;;;QAGR,IAAIA,OAAY;;;;cAGV3B,EAAE2B,EAAO;qBACNA;;eAED;;;;YAKCA,EAAO;iBACTA;;eAGCG,GAAS,GAAG,EAAE,SAAUH;mBAEpB,IACEA,UACE,GACJ2C,QAEAA;;;;GlBoCjCiE,6BmBxEa9G;EAAQ,QAEP6B;KAGP7B,GAAS,SAAUE;QACE;kBACE;;QAEbA;iBAEA,IAEAkD;;QAGLzF,IAAIuC,EAAO;;;oBAKuBnB;;;;SAIZ;;;GnBiDlC6C,coBvEYmF,WpByEZC,YX1CJA,iBAAiBzI;kBACGyB;IACd4B,UAAUrD,EAAVqD,CAAa5B;;;GW0CfiH,YqB9EJA,iBAAiBjH;EAAQ,gBAGP6B;KAIP7B,GAAS,SAAUE;QACE;kBACE;;QAEbA;oBACiBA,EAAO,KAC1BwC;;QAEH/E,IAAIuC,EAAO;;;;;GrBiEvBgH,asB/EJA,kBAAkB3I;kBACEyB;oBACII;2BAEsBV;UAChCyH,IAAmBA,SAAUpI;oBAC3BoE,oBAEMzD,GACR0H,aAAa5G,cAA0B2C;;;gBAM3BnD,GAAS,SAAUE;YACC;sBACF,QAEJR,cAGLU;;YAEAF;0BAEDM,KAAiB6G,sBAAsBtI;qBAC3BW;cACHQ;uBAEIE,OAEA;aAEP7B,EAAE2B,EAAO;;YAGnB4C,IAAK5C,EAAO;iBACOG,GAAS,GAAG,WAAYH;sBAE3BiH,KACOrE,QAEAA,EAAG5C;;;;;GtBsCpDoH,UuBjFJA,eAAenB;kBACKnG;oBACII;MAAM,QAEJyB;SAIP7B,GAAS,SAAUE;YAEE,yBAAYA;qBAGPA,EAAO;;kBAOPwC,IAAuB,IAAI,GAClD2E,sBAAsBtI;UACVuB,KAAuD,MAAzBoC,IAChCtC,WAEuBsC,IAAuB,IAAI;mBAExCxC;WACViG;;;eAMC9F,GAAS,GAAG,EAAE,SAAUH;yBAEE,GACA,MAAzBwC,IACKtC,OAEA,aAKFgD,EAAuBlD;;;;GvBsCxDqH,awBnFJA,kBAAkBhJ;kBACEyB;oBACII;iBAsBmDrB;iBAC3BW;aACE;;;2BAtBJA;UAChCyH,IAAmBA,SAAUpI;oBAC3BoE,UAEFiE,aAAa5G,cAA0B2C;;;gBAM3BnD,GAAS,SAAUE;YACC;sBAEbE;;YACEF,OAAY;;;;eAIT;;cAEFM,KAAiB6G,cAIX9I,EAAE2B,EAAO;mBACXA;;YAGV4C,IAAK5C,EAAO;iBACOG,GAAS,GAAG,WAAYH;sBAE3BiH,KACOrE,QAEAA,EAAG5C;;;;;GxB+CpDsB,cAAYgG,aAEZC,ayBzFJA,kBAAkBC;kBACEtH;;QAEVuH,IAAKC,YAAa,SAAU7I;MACpB8I;UACGC,IAAO,IAAI;eACIzH,GAAS,GAAG,EAACwH;OACjCH;aACarH,GAAS,GAAG,EAAE,SAAUH;MACzBA,KACF6H,cAAcJ;;;;GzBiFpCK,iBd1FJA,sBAAsB3G,GAASF;kBACXf;QACV6H,YAKAC;wBAK2C,SAAUhH;gBACzB+G,GAAkB5G,GAASF,GAASD;OACjD,SAAUA;gBACGgH,GAAqB7G,GAASF,GAASD;OACrDd;;Gc4EpBW,iBbxEeoH,ca0EfC,gB0B/FJA,qBAAqBC;kBACDjI;;WAEA,SAAU6D;YAEd7D,EAAeC,GAAS,GAAG,EAAC4D,OAC5B7D;;;aAIaC,GAAS,GAAG,EAAE,SAAUH;MACzBA,WACS;;;;G1BqFjCoI,mBjBzFJA,wBAAwBC;MAElBC,SAAuB9I,MADf6I,EAAM9H,oBACqB8H,EAAM9H,sBAAsB8H;kBACjDnI;QAYVqI,IAAeD,YAXJE;MACbvE,MAAOA,SAAUF;iBACS5D,GAAS,GAAG,EAAC4D;;MAEvCG,UAAWA;;;MAGXuE;;aAKqBtI,GAAS,GAAG,EAAE,SAAUH;iBAEpBuI;;;GiByE7BG,iBjBjEJA,sBAAsB5I;MAChBwI,IAAa;IACf5G,WAAYA,SAAU8G;MAAU,QAEZ7G;SAGP7B,GAAS,SAAUE;YACE;sBACE,GACfwI;;YACExI,OAAY;;;;iBAILA,EAAO;;;YAInBvC,IAAIuC,EAAO;;;aAKlB;QACC2I,aAAcA;;;;eAIc;;;;;;IAO/BpI,oBAAqB,SAAU1B;;;;GiB+BxC+J,gB2BpGJA,qBAAqBC;kBACD3I;gBACI4I,SAAU9I,GAAQ+I;cAC1B/I;YACD;iBAQsBG,GAAS,GAAG,aAPH6I;qBAErBD,OAEAA;;;YAIV;iBACqB5I,GAAS,GAAG,EAAC4I;;YAClC;;;;;G3BuFXE,c2B9EJA,mBAAmBnJ;kBACCE,GAAQ+I;iBAClB/I,IACKkB,GAASpB,cAAmBE;UACC;;;UAEXA;oBACwBA,EAAO;;UAEpCkJ,IAAalJ,EAAO;2BACUY;gBACxBA;cACD;;;cAEA;;;cAEA;;;;SASlB;;;;gB3B/CH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;e4BPLuI,cAAcrJ;WACb3B,IAAOiL,WACPzL,IAAMQ,UACRV,IAAIqC,GAEC/B,IAAI,GAAGA,IAAIJ,GAAKI;IACvBN,IAAIU,EAAKJ,GAAGN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}