"use strict";

function __(a, b) {
  b.tag = a;
  return b;
}

function caml_array_sub(a, b, c) {
  for (var d = Array(c), e = 0; e < c; ) {
    d[e] = a[b], e = e + 1 | 0, b = b + 1 | 0;
  }
  return d;
}

function app(a, b) {
  for (;;) {
    var c = b;
    var d = 0 === (b = a.length) ? 1 : b;
    if (0 === (b = d - c.length | 0)) {
      return a.apply(null, c);
    }
    if (0 > b) {
      b = caml_array_sub(c, d, 0 | -b), a = a.apply(null, caml_array_sub(c, 0, d));
    } else {
      return function(d, a) {
        return function(c) {
          return app(d, a.concat([ c ]));
        };
      }(a, c);
    }
  }
}

function _1(a, b) {
  var c = a.length;
  return 1 === c ? a(b) : function curry_1(a, b, c) {
    switch (c) {
     case 1:
      return a(b);

     case 2:
      return function(d) {
        return a(b, d);
      };

     case 3:
      return function(d, c) {
        return a(b, d, c);
      };

     case 4:
      return function(d, c, f) {
        return a(b, d, c, f);
      };

     case 5:
      return function(d, c, f, g) {
        return a(b, d, c, f, g);
      };

     case 6:
      return function(d, c, f, g, h) {
        return a(b, d, c, f, g, h);
      };

     case 7:
      return function(d, c, f, g, h, k) {
        return a(b, d, c, f, g, h, k);
      };

     default:
      return app(a, [ b ]);
    }
  }(a, b, c);
}

function _3(a, b, c, d) {
  var e = a.length;
  return 3 === e ? a(b, c, d) : function curry_3(a, b, c, d, e) {
    switch (e) {
     case 1:
      return app(a(b), [ c, d ]);

     case 2:
      return app(a(b, c), [ d ]);

     case 3:
      return a(b, c, d);

     case 4:
      return function(e) {
        return a(b, c, d, e);
      };

     case 5:
      return function(e, g) {
        return a(b, c, d, e, g);
      };

     case 6:
      return function(e, g, h) {
        return a(b, c, d, e, g, h);
      };

     case 7:
      return function(e, g, h, k) {
        return a(b, c, d, e, g, h, k);
      };

     default:
      return app(a, [ b, c, d ]);
    }
  }(a, b, c, d, e);
}

var undefinedHeader = [];

function some(a) {
  if (void 0 === a) {
    return (a = [ undefinedHeader, 0 ]).tag = 256, a;
  }
  null !== a && a[0] === undefinedHeader && ((a = [ undefinedHeader, a[1] + 1 | 0 ]).tag = 256);
  return a;
}

function valFromOption(a) {
  if (null !== a && a[0] === undefinedHeader) {
    if (0 !== (a = a[1])) {
      return [ undefinedHeader, a - 1 | 0 ];
    }
  } else {
    return a;
  }
}

function talkbackPlaceholder(a) {
  return 0;
}

function captureTalkback(a, b) {
  let c = talkbackPlaceholder;
  return _1(a, function(a) {
    "number" != typeof a && (a.tag || (c = a[0]));
    return b(a, c);
  });
}

function makeTrampoline(a, b) {
  let c = !1, d = !1, e = !1;
  return a(__(0, [ function(f) {
    if (f) {
      c = !0;
    } else if (d) {
      e = !0;
    } else {
      for (d = e = !0; e && !c; ) {
        void 0 !== (f = b()) ? (e = !1, a(__(1, [ valFromOption(f) ]))) : (c = !0, a(0));
      }
      d = !1;
    }
    return 0;
  } ]));
}

var observableSymbol = "function" == typeof Symbol ? Symbol.observable || (Symbol.observable = Symbol("observable")) : "@@observable";

function _ref(a) {
  return 0;
}

function takeLast(a) {
  return function(b) {
    return function(c) {
      function d() {
        return e.shift();
      }
      var e = [];
      return captureTalkback(b, function(b, g) {
        if ("number" == typeof b) {
          return makeTrampoline(c, d);
        }
        b.tag && (e.length >= a && 0 < a && e.shift(), e.push(b[0]));
        return g(0);
      });
    };
  };
}

function fromListener(a, b) {
  return function(c) {
    var d = function(a) {
      return c(__(1, [ a ]));
    };
    c(__(0, [ function(a) {
      return a ? _1(b, d) : 0;
    } ]));
    return _1(a, d);
  };
}

function _ref$1(a, b, c) {
  a.addEventListener(b, c);
}

function _ref2(a, b, c) {
  a.removeEventListener(b, c);
}

var toPromise$1 = function toPromise(a) {
  return new Promise(function(b, c) {
    return _1(takeLast(1)(a), function(a) {
      return "number" == typeof a ? 0 : a.tag ? b(a[0]) : a[0](0);
    });
  });
};

function subscribe(a) {
  return function(b) {
    let c = talkbackPlaceholder, d = !1;
    _1(b, function(b) {
      if ("number" == typeof b) {
        return d = !0, 0;
      }
      if (b.tag) {
        if (d) {
          return 0;
        }
        a(b[0]);
        return c(0);
      }
      c = b = b[0];
      return b(0);
    });
    return [ function(a) {
      if (d) {
        return 0;
      }
      d = !0;
      return c(1);
    } ];
  };
}

function _ref$2() {
  return 0;
}

function fromArray(a) {
  return function(b) {
    var c = a.length;
    let d = 0;
    return makeTrampoline(b, function() {
      if (d < c) {
        var b = a[d];
        d = d + 1 | 0;
        return some(b);
      }
    });
  };
}

function _ref3(a) {
  return a(0);
}

function _ref$3(a) {
  return a(0);
}

function onPush(a) {
  return function(b) {
    return function(c) {
      return _1(b, function(b) {
        "number" != typeof b && b.tag && a(b[0]);
        return c(b);
      });
    };
  };
}

function _ref$4(a) {
  return 0;
}

function _ref2$1(a) {
  return 0;
}

function _ref2$2(a) {
  return a(1);
}

function _ref3$1(a) {
  return a(1);
}

function _ref4(a) {
  return a(0);
}

function mergeMap(a) {
  return function(b) {
    return function(c) {
      let d = talkbackPlaceholder, e = [], f = !1;
      _1(b, function(b) {
        if ("number" == typeof b) {
          if (f) {
            return 0;
          }
          f = !0;
          return 0 === e.length ? c(0) : 0;
        }
        if (b.tag) {
          if (f) {
            return 0;
          }
          !function(a) {
            function b(a) {
              return a !== d;
            }
            let d = talkbackPlaceholder;
            _1(a, function(a) {
              if ("number" == typeof a) {
                return e = e.filter(b), f && 0 === e.length ? c(0) : 0;
              }
              if (a.tag) {
                return 0 !== e.length ? (c(__(1, [ a[0] ])), d(0)) : 0;
              }
              d = a = a[0];
              e = e.concat(a);
              return a(0);
            });
          }(a(b[0]));
          return d(0);
        }
        d = b = b[0];
        return b(0);
      });
      return c(__(0, [ function(a) {
        a ? (e.forEach(_ref2$2), f || (f = !0, d(1), e.forEach(_ref3$1), e = [])) : f || e.forEach(_ref4);
        return 0;
      } ]));
    };
  };
}

function _ref5(a) {
  return a;
}

function _ref6(a) {
  return a;
}

function mergeAll(a) {
  return mergeMap(_ref6)(a);
}

function concatMap(a) {
  return function(b) {
    return function(c) {
      function d(b) {
        if ("number" == typeof b) {
          return h = !1, g = talkbackPlaceholder, void 0 !== (b = e.shift()) ? _1(a(valFromOption(b)), d) : l ? c(0) : 0;
        }
        if (b.tag) {
          if (k) {
            return 0;
          }
          c(__(1, [ b[0] ]));
          return g(0);
        }
        h = !0;
        g = b = b[0];
        return b(0);
      }
      let e = [], f = talkbackPlaceholder, g = talkbackPlaceholder, h = !1, k = !1, l = !1;
      _1(b, function(b) {
        if ("number" == typeof b) {
          if (l) {
            return 0;
          }
          l = !0;
          return !h && function isEmpty(a) {
            return 0 === a.length;
          }(e) ? c(0) : 0;
        }
        if (b.tag) {
          if (l) {
            return 0;
          }
          b = b[0];
          h ? e.push(b) : _1(a(b), d);
          return f(0);
        }
        f = b = b[0];
        return b(0);
      });
      return c(__(0, [ function(a) {
        return a ? (g(1), l || (k = l = !0, f(1), g = talkbackPlaceholder), 0) : l ? 0 : g(0);
      } ]));
    };
  };
}

function _ref2$3(a) {
  return a;
}

function _ref3$2(a) {
  return a;
}

function switchMap(a) {
  return function(b) {
    return function(c) {
      function d(a) {
        if ("number" == typeof a) {
          return g = !1, f = talkbackPlaceholder, k ? c(0) : 0;
        }
        if (a.tag) {
          if (h) {
            return 0;
          }
          c(__(1, [ a[0] ]));
          return f(0);
        }
        g = !0;
        f = a = a[0];
        return a(0);
      }
      let e = talkbackPlaceholder, f = talkbackPlaceholder, g = !1, h = !1, k = !1;
      _1(b, function(b) {
        if ("number" == typeof b) {
          if (k) {
            return 0;
          }
          k = !0;
          return g ? 0 : c(0);
        }
        if (b.tag) {
          if (k) {
            return 0;
          }
          g && (f(1), f = talkbackPlaceholder);
          _1(a(b[0]), d);
          return e(0);
        }
        e = b = b[0];
        return b(0);
      });
      return c(__(0, [ function(a) {
        return a ? (f(1), k || (h = k = !0, e(1), f = talkbackPlaceholder), 0) : f(0);
      } ]));
    };
  };
}

function _ref2$4(a) {
  return a;
}

var fromArray$2 = fromArray, fromList$2 = function fromList(a) {
  return function(b) {
    let c = a;
    return makeTrampoline(b, function() {
      var a = c;
      if (a) {
        return c = a[1], some(a[0]);
      }
    });
  };
}, fromValue$2 = function fromValue(a) {
  return function(b) {
    let c = !1;
    return b(__(0, [ function(d) {
      if (d || c) {
        return 0;
      }
      c = !0;
      b(__(1, [ a ]));
      return b(0);
    } ]));
  };
}, make$2 = function make(a) {
  return function(b) {
    let c = _ref$2;
    b(__(0, [ function(a) {
      return a ? c() : 0;
    } ]));
    c = a([ function(a) {
      return b(__(1, [ a ]));
    }, function(a) {
      return b(0);
    } ]);
    return 0;
  };
}, makeSubject$2 = function makeSubject(a) {
  let b = [], c = !1;
  return [ function(a) {
    function c(c) {
      return c !== a;
    }
    b = b.concat(a);
    return a(__(0, [ function(a) {
      1 === a && (b = b.filter(c));
      return 0;
    } ]));
  }, function(a) {
    c || b.forEach(function d(c) {
      return c(__(1, [ a ]));
    });
    return 0;
  }, function(a) {
    c || (c = !0, b.forEach(_ref3));
    return 0;
  } ];
}, empty$2 = function empty(a) {
  a(__(0, [ talkbackPlaceholder ]));
  return a(0);
}, never$2 = function never(a) {
  return a(__(0, [ talkbackPlaceholder ]));
}, buffer$2 = function buffer(a) {
  return function(b) {
    return function(c) {
      function d(a) {
        if ("number" == typeof a) {
          if (h) {
            return 0;
          }
          h = !0;
          f(1);
          c(__(1, [ e ]));
          return c(0);
        }
        if (a.tag) {
          if (h) {
            return 0;
          }
          c(__(1, [ e ]));
          e = [];
          return g(0);
        }
        return (g = a[0])(0);
      }
      let e = [], f = talkbackPlaceholder, g = talkbackPlaceholder, h = !1;
      _1(b, function(b) {
        if ("number" == typeof b) {
          if (h) {
            return 0;
          }
          h = !0;
          g(1);
          c(__(1, [ e ]));
          return c(0);
        }
        if (b.tag) {
          if (h) {
            return 0;
          }
          e.push(b[0]);
          return f(0);
        }
        f = b[0];
        return _1(a, d);
      });
      return c(__(0, [ function(a) {
        return h ? 0 : a ? (h = !0, f(1), g(1)) : f(0);
      } ]));
    };
  };
}, combine$2 = function combine(a) {
  return function(b) {
    return function(c) {
      let d = talkbackPlaceholder, e = talkbackPlaceholder, f = void 0, g = void 0, h = !1, k = 0, l = !1;
      _1(a, function(a) {
        var b = g;
        if ("number" == typeof a) {
          if (1 > k) {
            return k = k + 1 | 0, 0;
          }
          if (l) {
            return 0;
          }
          l = !0;
          return c(0);
        }
        if (a.tag) {
          a = a[0];
          if (void 0 !== b) {
            if (l) {
              return 0;
            }
            f = some(a);
            h = !1;
            return c(__(1, [ [ a, valFromOption(b) ] ]));
          }
          f = some(a);
          h = !1;
          return 0;
        }
        d = a[0];
        return 0;
      });
      _1(b, function(a) {
        var b = f;
        if ("number" == typeof a) {
          if (1 > k) {
            return k = k + 1 | 0, 0;
          }
          if (l) {
            return 0;
          }
          l = !0;
          return c(0);
        }
        if (a.tag) {
          a = a[0];
          if (void 0 !== b) {
            if (l) {
              return 0;
            }
            g = some(a);
            h = !1;
            return c(__(1, [ [ valFromOption(b), a ] ]));
          }
          g = some(a);
          h = !1;
          return 0;
        }
        e = a[0];
        return 0;
      });
      return c(__(0, [ function(a) {
        if (l) {
          return 0;
        }
        if (a) {
          return l = !0, d(1), e(1);
        }
        if (h) {
          return 0;
        }
        h = !0;
        d(a);
        return e(a);
      } ]));
    };
  };
}, concatMap$2 = concatMap, concat$2 = function concat(a) {
  return concatMap(_ref3$2)(fromArray(a));
}, concatAll$2 = function concatAll(a) {
  return concatMap(_ref2$3)(a);
}, filter$2 = function filter(a) {
  return function(b) {
    return function(c) {
      return captureTalkback(b, function(b, e) {
        return "number" == typeof b || !b.tag || a(b[0]) ? c(b) : e(0);
      });
    };
  };
}, map$2 = function map(a) {
  return function(b) {
    return function(c) {
      return _1(b, function(b) {
        b = "number" == typeof b ? 0 : b.tag ? __(1, [ a(b[0]) ]) : __(0, [ b[0] ]);
        return c(b);
      });
    };
  };
}, mergeMap$2 = mergeMap, merge$2 = function merge(a) {
  return mergeMap(_ref5)(fromArray(a));
}, mergeAll$2 = mergeAll, flatten$2 = mergeAll, onEnd$2 = function onEnd(a) {
  return function(b) {
    return function(c) {
      let d = !1;
      return _1(b, function(b) {
        if ("number" == typeof b) {
          if (d) {
            return 0;
          }
          d = !0;
          c(b);
          return a();
        }
        if (b.tag) {
          return c(b);
        }
        var e = b[0];
        return c(__(0, [ function(c) {
          c && !d && (d = !0, a());
          return e(c);
        } ]));
      });
    };
  };
}, onPush$2 = onPush, tap$2 = onPush, onStart$2 = function onStart(a) {
  return function(b) {
    return function(c) {
      return _1(b, function(b) {
        if ("number" == typeof b || b.tag) {
          return c(b);
        }
        c(b);
        return a();
      });
    };
  };
}, sample$2 = function sample(a) {
  return function(b) {
    return function(c) {
      let d = !1, e = void 0, f = _ref$4, g = _ref2$1;
      _1(b, function(a) {
        if ("number" == typeof a) {
          return d = !0, g(1), c(0);
        }
        a.tag ? e = some(a[0]) : f = a[0];
        return 0;
      });
      _1(a, function(a) {
        var b = e;
        if ("number" == typeof a) {
          return d = !0, f(1), c(0);
        }
        if (a.tag) {
          if (void 0 === b || d) {
            return 0;
          }
          e = void 0;
          return c(__(1, [ valFromOption(b) ]));
        }
        g = a[0];
        return 0;
      });
      return c(__(0, [ function(a) {
        if (a) {
          return d = !0, f(1), g(1);
        }
        f(0);
        return g(0);
      } ]));
    };
  };
}, scan$2 = function scan(a, b) {
  return function(c) {
    return function(d) {
      let e = b;
      return _1(c, function(c) {
        "number" == typeof c ? c = 0 : c.tag ? c = __(1, [ e = a(e, c[0]) ]) : c = __(0, [ c[0] ]);
        return d(c);
      });
    };
  };
}, share$2 = function share(a) {
  function b(a) {
    "number" == typeof a ? (c.forEach(_ref$3), c = []) : a.tag ? (e = !1, c.forEach(function b(c) {
      return c(a);
    })) : d = a[0];
    return 0;
  }
  let c = [], d = talkbackPlaceholder, e = !1;
  return function(f) {
    function g(a) {
      return a !== f;
    }
    1 === (c = c.concat(f)).length && _1(a, b);
    return f(__(0, [ function(a) {
      if (a) {
        return 0 === (c = c.filter(g)).length ? d(1) : 0;
      }
      if (e) {
        return 0;
      }
      e = !0;
      return d(a);
    } ]));
  };
}, skip$2 = function skip(a) {
  return function(b) {
    return function(c) {
      let d = a;
      return captureTalkback(b, function(a, b) {
        return "number" != typeof a && a.tag && 0 < d ? (d = d - 1 | 0, b(0)) : c(a);
      });
    };
  };
}, skipUntil$2 = function skipUntil(a) {
  return function(b) {
    return function(c) {
      let d = !0, e = !1, f = !1, g = talkbackPlaceholder, h = talkbackPlaceholder;
      _1(b, function(b) {
        if ("number" == typeof b) {
          return d && h(1), e = !0, c(0);
        }
        if (b.tag) {
          if (d && !e) {
            return g(0);
          }
          if (e) {
            return 0;
          }
          f = !1;
          return c(b);
        }
        var l = b[0];
        g = l;
        return _1(a, function(a) {
          if ("number" == typeof a) {
            return 0;
          }
          if (a.tag) {
            return d = !1, h(1);
          }
          h = a = a[0];
          a(0);
          return l(0);
        });
      });
      return c(__(0, [ function(a) {
        if (a) {
          return d && h(1), e = !0, g(1);
        }
        if (f || e) {
          return 0;
        }
        f = !0;
        return g(0);
      } ]));
    };
  };
}, skipWhile$2 = function skipWhile(a) {
  return function(b) {
    return function(c) {
      let d = !0;
      return captureTalkback(b, function(b, f) {
        if ("number" != typeof b && b.tag && d) {
          if (a(b[0])) {
            return f(0);
          }
          d = !1;
        }
        return c(b);
      });
    };
  };
}, switchMap$2 = switchMap, switchAll$2 = function switchAll(a) {
  return switchMap(_ref2$4)(a);
}, take$2 = function take(a) {
  return function(b) {
    return function(c) {
      let d = 0, e = talkbackPlaceholder;
      _1(b, function(b) {
        if ("number" == typeof b) {
          return d < a ? (d = a, c(0)) : 0;
        }
        if (b.tag) {
          return d < a && (d = d + 1 | 0, c(b), d === a) ? (c(0), e(1)) : 0;
        }
        e = b[0];
        return 0;
      });
      return c(__(0, [ function(c) {
        return d < a ? c ? (d = a, e(1)) : e(0) : 0;
      } ]));
    };
  };
}, takeLast$2 = takeLast, takeUntil$2 = function takeUntil(a) {
  return function(b) {
    return function(c) {
      function d(a) {
        if ("number" == typeof a) {
          return 0;
        }
        if (a.tag) {
          return e = !0, f(1), c(0);
        }
        g = a = a[0];
        return a(0);
      }
      let e = !1, f = talkbackPlaceholder, g = talkbackPlaceholder;
      _1(b, function(b) {
        if ("number" == typeof b) {
          if (e) {
            return 0;
          }
          e = !0;
          g(1);
          return c(0);
        }
        if (b.tag) {
          return e ? 0 : c(b);
        }
        f = b[0];
        return _1(a, d);
      });
      return c(__(0, [ function(a) {
        return e ? 0 : a ? (e = !0, f(1), g(1)) : f(0);
      } ]));
    };
  };
}, takeWhile$2 = function takeWhile(a) {
  return function(b) {
    return function(c) {
      let d = !1, e = talkbackPlaceholder;
      _1(b, function(b) {
        if ("number" == typeof b) {
          if (d) {
            return 0;
          }
          d = !0;
          return c(0);
        }
        if (b.tag) {
          if (d) {
            return 0;
          }
          if (a(b[0])) {
            return c(b);
          }
          d = !0;
          c(0);
          return e(1);
        }
        e = b[0];
        return c(b);
      });
      return c(__(0, [ function(a) {
        return d ? 0 : a ? (d = !0, e(1)) : e(0);
      } ]));
    };
  };
}, publish$2 = function publish(a) {
  let b = talkbackPlaceholder, c = !1;
  _1(a, function(a) {
    if ("number" == typeof a) {
      return c = !0, 0;
    }
    if (a.tag) {
      return c ? 0 : b(0);
    }
    b = a = a[0];
    return a(0);
  });
  return [ function(a) {
    if (c) {
      return 0;
    }
    c = !0;
    return b(1);
  } ];
}, subscribe$2 = subscribe, forEach$2 = function forEach(a) {
  return function(b) {
    subscribe(a)(b);
    return 0;
  };
}, toArray$2 = function toArray(a) {
  let b = [], c = talkbackPlaceholder, d = !1;
  _1(a, function(a) {
    if ("number" == typeof a) {
      return d = !0, 0;
    }
    if (a.tag) {
      return b.push(a[0]), c(0);
    }
    c = a = a[0];
    return a(0);
  });
  d || c(1);
  return b;
}, debounce$2 = function debounce(a) {
  return function(b) {
    return function(c) {
      let d = !1, e = void 0;
      var f = function(a) {
        void 0 !== (a = e) && (e = void 0, clearTimeout(valFromOption(a)));
        return 0;
      };
      return _1(b, function(b) {
        if ("number" == typeof b) {
          return d = !0, void 0 !== e ? 0 : c(0);
        }
        if (b.tag) {
          return f(), e = some(setTimeout(function h(a) {
            e = void 0;
            c(b);
            return d ? c(0) : 0;
          }, a(b[0]))), 0;
        }
        var g = b[0];
        return c(__(0, [ function(a) {
          return a ? (f(), g(1)) : g(a);
        } ]));
      });
    };
  };
}, delay$2 = function delay(a) {
  return function(b) {
    return function(c) {
      let d = talkbackPlaceholder, e = 0, f = !1;
      _1(b, function(b) {
        if ("number" != typeof b && !b.tag) {
          return d = b[0], 0;
        }
        f || (e = e + 1 | 0, setTimeout(function h(a) {
          f && 0 === e ? c(0) : e = e - 1 | 0;
          return c(b);
        }, a));
        return 0;
      });
      return c(__(0, [ function(a) {
        return a ? (f = !0, 0 === e ? c(0) : 0) : f ? 0 : d(a);
      } ]));
    };
  };
}, throttle$2 = function throttle(a) {
  return function(b) {
    return function(c) {
      function d(a) {
        f = void 0;
        e = !1;
        return 0;
      }
      let e = !1, f = void 0;
      var g = function(a) {
        void 0 !== (a = f) && clearTimeout(valFromOption(a));
        return 0;
      };
      return _1(b, function(b) {
        if ("number" == typeof b) {
          return g(), c(0);
        }
        if (b.tag) {
          if (e) {
            return 0;
          }
          e = !0;
          g();
          f = some(setTimeout(d, a(b[0])));
          return c(b);
        }
        var h = b[0];
        return c(__(0, [ function(a) {
          return a ? (g(), h(1)) : h(a);
        } ]));
      });
    };
  };
}, toPromise$2 = toPromise$1, interval$2 = function interval(a) {
  return function(b) {
    let c = 0;
    var d = setInterval(function(a) {
      a = c;
      c = c + 1 | 0;
      return b(__(1, [ a ]));
    }, a);
    return b(__(0, [ function(a) {
      a && clearInterval(d);
      return 0;
    } ]));
  };
}, fromDomEvent$2 = function fromDomEvent(a, b) {
  return function(c) {
    var d = _ref$1, e = _ref2;
    return fromListener(function(c) {
      return _3(d, a, b, c);
    }, function(c) {
      return _3(e, a, b, c);
    })(c);
  };
}, fromListener$2 = fromListener, fromPromise$2 = function fromPromise(a) {
  return function(b) {
    let c = !1;
    a.then(function(a) {
      c || (b(__(1, [ a ])), b(0));
      return Promise.resolve(0);
    });
    return b(__(0, [ function(a) {
      a && (c = !0);
      return 0;
    } ]));
  };
}, fromObservable$2 = function fromObservable(a) {
  var b = void 0 !== a[observableSymbol] ? a[observableSymbol]() : a;
  return function(a) {
    var d = b.subscribe({
      next: function(d) {
        return a(__(1, [ d ]));
      },
      complete: function() {
        return a(0);
      },
      error: _ref
    });
    return a(__(0, [ function(a) {
      return a ? d.unsubscribe() : 0;
    } ]));
  };
}, toObservable$2 = function toObservable(a) {
  var b = {
    subscribe: function(c) {
      let d = talkbackPlaceholder, e = !1;
      _1(a, function(a) {
        if ("number" == typeof a) {
          return e = !0, c.complete();
        }
        if (a.tag) {
          if (e) {
            return 0;
          }
          c.next(a[0]);
          return d(0);
        }
        d = a = a[0];
        return a(0);
      });
      return {
        unsubscribe: function() {
          if (e) {
            return 0;
          }
          e = !0;
          return d(1);
        }
      };
    }
  };
  b[observableSymbol] = function(a) {
    return b;
  };
  return b;
}, fromCallbag$2 = function fromCallbag(a) {
  return function(b) {
    return a(0, function(c, d) {
      switch (c) {
       case 0:
        return b(__(0, [ function a(a) {
          return a ? d(2) : d(1);
        } ]));

       case 1:
        return b(__(1, [ d ]));

       case 2:
        return b(0);
      }
    });
  };
}, toCallbag$2 = function toCallbag(a) {
  return function(b, c) {
    return 0 === b ? _1(a, function d(a) {
      if ("number" == typeof a) {
        return c(2, 0);
      }
      if (a.tag) {
        return c(1, a[0]);
      }
      var d = a[0];
      return c(0, function(a) {
        switch (a) {
         case 0:
          return 0;

         case 1:
          return d(0);

         case 2:
          return d(1);
        }
      });
    }) : 0;
  };
};

exports.Types = 0;

exports.buffer = buffer$2;

exports.combine = combine$2;

exports.concat = concat$2;

exports.concatAll = concatAll$2;

exports.concatMap = concatMap$2;

exports.debounce = debounce$2;

exports.delay = delay$2;

exports.empty = empty$2;

exports.filter = filter$2;

exports.flatten = flatten$2;

exports.forEach = forEach$2;

exports.fromArray = fromArray$2;

exports.fromCallbag = fromCallbag$2;

exports.fromDomEvent = fromDomEvent$2;

exports.fromList = fromList$2;

exports.fromListener = fromListener$2;

exports.fromObservable = fromObservable$2;

exports.fromPromise = fromPromise$2;

exports.fromValue = fromValue$2;

exports.interval = interval$2;

exports.make = make$2;

exports.makeSubject = makeSubject$2;

exports.map = map$2;

exports.merge = merge$2;

exports.mergeAll = mergeAll$2;

exports.mergeMap = mergeMap$2;

exports.never = never$2;

exports.onEnd = onEnd$2;

exports.onPush = onPush$2;

exports.onStart = onStart$2;

exports.pipe = function pipe(a) {
  for (var b = arguments, c = b.length, d = a, e = 1; e < c; e++) {
    d = b[e](d);
  }
  return d;
};

exports.publish = publish$2;

exports.sample = sample$2;

exports.scan = scan$2;

exports.share = share$2;

exports.skip = skip$2;

exports.skipUntil = skipUntil$2;

exports.skipWhile = skipWhile$2;

exports.subscribe = subscribe$2;

exports.switchAll = switchAll$2;

exports.switchMap = switchMap$2;

exports.take = take$2;

exports.takeLast = takeLast$2;

exports.takeUntil = takeUntil$2;

exports.takeWhile = takeWhile$2;

exports.tap = tap$2;

exports.throttle = throttle$2;

exports.toArray = toArray$2;

exports.toCallbag = toCallbag$2;

exports.toObservable = toObservable$2;

exports.toPromise = toPromise$2;
//# sourceMappingURL=wonka.js.map
