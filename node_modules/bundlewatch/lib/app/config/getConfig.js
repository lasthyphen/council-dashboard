'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _lodash = require('lodash.merge');

var _lodash2 = _interopRequireDefault(_lodash);

var _getCIVars = require('./getCIVars');

var _getCIVars2 = _interopRequireDefault(_getCIVars);

var _ensureValid = require('./ensureValid');

var _ensureValid2 = _interopRequireDefault(_ensureValid);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const ciVars = (0, _getCIVars2.default)(process.env);

const defaultConfig = {
    files: [],
    bundlewatchServiceHost: 'https://service.bundlewatch.io', // Can be a custom service, or set to NUll
    ci: {
        githubAccessToken: ciVars.githubAccessToken,
        repoOwner: ciVars.repoOwner,
        repoName: ciVars.repoName,
        repoCurrentBranch: ciVars.repoCurrentBranch,
        repoBranchBase: ciVars.repoBranchBase || 'master', // Branch PR is being merged into
        commitSha: ciVars.commitSha,
        trackBranches: ['master', 'develop']
    },
    defaultCompression: 'gzip'
};

const getConfig = customConfig => {
    const config = (0, _lodash2.default)({}, defaultConfig, customConfig);
    (0, _ensureValid2.default)(config);
    return config;
};

exports.default = getConfig;