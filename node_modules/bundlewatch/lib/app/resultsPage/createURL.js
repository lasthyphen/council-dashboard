'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _lodash = require('lodash.merge');

var _lodash2 = _interopRequireDefault(_lodash);

var _main = require('jsonpack/main');

var _main2 = _interopRequireDefault(_main);

var _shortenURL = require('./shortenURL');

var _shortenURL2 = _interopRequireDefault(_shortenURL);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

const createURL = (() => {
    var _ref = _asyncToGenerator(function* ({
        results,
        bundlewatchServiceHost,
        repoOwner,
        repoName,
        repoCurrentBranch,
        repoBranchBase,
        commitSha
    }) {
        const strippedResultsForURL = (0, _lodash2.default)({}, results);
        strippedResultsForURL.fullResults.map(function (result) {
            const strippedResult = result;
            delete strippedResult.message;
            return strippedResult;
        });

        const packedJSON = _main2.default.pack({
            details: {
                repoOwner,
                repoName,
                repoCurrentBranch,
                repoBranchBase,
                commitSha
            },
            results: strippedResultsForURL
        });
        const urlResultData = encodeURIComponent(packedJSON);
        const longURL = `${bundlewatchServiceHost}/results?d=${urlResultData}`;
        const shortURL = yield (0, _shortenURL2.default)(longURL);
        return shortURL;
    });

    return function createURL(_x) {
        return _ref.apply(this, arguments);
    };
})();

exports.default = createURL;